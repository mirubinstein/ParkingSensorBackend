<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="26:OscilloscopeAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403d2e80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x403b0b98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x403b0b98"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40517408"/></to>
    </wire>
    <wire loc="27:OscilloscopeAppC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x403d4320"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405331a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405331a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4054eda8"/></to>
    </wire>
    <wire loc="28:OscilloscopeAppC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40410380"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40e27870"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMSend" scoped="" ref="0x40e27870"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x412271f0"/></to>
    </wire>
    <wire loc="29:OscilloscopeAppC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4040e470"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e78cc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Receive" scoped="" ref="0x40e78cc8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40532478"/>
      <arguments>
        <value cst="I:147">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="30:OscilloscopeAppC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40412210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40c0be08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40c0be08"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b61670"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:OscilloscopeAppC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x404198e0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c06aa0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x40c06aa0"/></from>
      <to><interface-ref name="MagY" scoped="" ref="0x40c261b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="32:OscilloscopeAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4041c528"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40954890"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40954890"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4096c010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41210758"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411c9208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41195bd8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb4658"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b9eb10"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b8af00"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ad4040"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a5f920"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409d0758"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4066c940"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4109bd18"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40888d68"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40614850"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x405177a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40342408"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40342408"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x403ae118"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40517d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40436868"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40436868"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40435c60"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x4052b240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4043a9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dab040"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x4043a9c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40741db8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4043a268"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40513a88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40442490"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405136d8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40442088"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409766e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x40442088"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x404346f0"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x404346f0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x4043e688"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40434ac0"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x4043a9c8"/></to>
    </wire>
    <wire loc="25:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x4044bcc0"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x4044f010"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4044f010"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4049c6b0"/></to>
    </wire>
    <wire loc="26:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x40444748"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x40434ac0"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4046e2f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404e7ee0"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40460830"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b54f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404b54f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f573b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40463ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b7030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404b7030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f88538"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x404670a0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404c7890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404c7890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbe228"/></to>
    </wire>
    <wire loc="134:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4044e4b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4049b988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4049b988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ebb538"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40469c08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404bc5d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404bc5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc2de0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4044d8e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a2888"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404a2888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ec0418"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4045a0a0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a44f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404a44f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f22228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4045d750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b2170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404b2170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f52228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40461ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404b6c88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404b6c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f83538"/></to>
    </wire>
    <wire loc="129:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40451138"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40492968"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x40492968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e8a0b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x40455750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a05d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404a05d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eef228"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40459ea8"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404ae170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404ae170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1d0b0"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x40465670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404b1e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404b1e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f4d0b0"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40466ea8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404c55d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404c55d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fb90b0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4046c3d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f6dd8"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40464a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404b9d30"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404b9d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x4049c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e85010"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40453750"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4049e250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x4049e250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eea0b0"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4046eee8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ef3e8"/></to>
    </wire>
    <wire loc="146:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40452c08"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404a5228"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404a5228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ef4de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4045f2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b5e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404b5e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f56d70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404628e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404b7988"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404b7988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f86010"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40467a98"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404c6250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404c6250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbdc08"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4044eea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4049a330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4049a330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eb9010"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a1250"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404a1250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ebfde0"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4045aa98"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404a4e48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404a4e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f21c08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4045c210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404b2ac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404b2ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f51c08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4046a750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c16b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404c16b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f80010"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40451b30"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4049d330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x4049d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e89a88"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40454210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404a0f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404a0f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eeec08"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404588e0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404aeac8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404aeac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1ca88"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4046f8e0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404c5f28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404c5f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fb8a88"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40457ce8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404aab00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404aab00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f59938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x404634b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404b86b0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404b86b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8a9e8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40468670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404bcf28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404bcf28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc07f8"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4046cdc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404f33b0"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4044fa08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4049b030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4049b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e849e8"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40452210"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4049eba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x4049eba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ee9a88"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40469210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404bdc28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404bdc28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fc3418"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4045b670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x404a5b80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin1" scoped="" ref="0x404a5b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f247f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4045fce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x404b37d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x404b37d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f547f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x404612f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404b6330"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404b6330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f859e8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x404664b0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x404c6ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x404c6ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40fbb6c0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40447730"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40492010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x40492010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e8c6c0"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x404a1ba8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin2" scoped="" ref="0x404a1ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ebd7f8"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404594b0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x404af7d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin4" scoped="" ref="0x404af7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1f6c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4045cc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x404b14f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin6" scoped="" ref="0x404b14f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f4f6c0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4046d900"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x404ed8f0"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x404640a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x404b93d8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin0" scoped="" ref="0x404b93d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f8d538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404572f0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x404ad4f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin7" scoped="" ref="0x404ad4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40f1a538"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40450590"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4049dc88"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin3" scoped="" ref="0x4049dc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40e87538"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40454c88"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4049f890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Pin5" scoped="" ref="0x4049f890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40eec6c0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403ae950"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x403b35f0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x403bde10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x403c0218"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x406ad2c8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x4054eda8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bde010"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40533a80"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4054b710"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4054b710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40572190"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40532b10"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40557798"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40557798"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40571238"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4053aaf0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405567b0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x405567b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40570270"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4054f4a0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40aa5de0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40aa5de0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a9b668"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40532478"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40557100"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40557100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40572b50"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40554580"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40554580"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a84c80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40557b08"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40557b08"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x405715a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4053cea8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aa27e0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aa27e0"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a99100"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bde010"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40bdda70"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x40559578"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x4056f320"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40558178"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40570c68"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40552ec0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40aa0dd8"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x4055f788"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40be0470"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40be0470"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bdc6b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40a84c80"/></from>
      <to><interface-ref name="Acks" scoped="" ref="0x40a9c520"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40568680"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40be19b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40be19b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40bf4de8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4055e978"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40aa5788"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40aa5788"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a9b010"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40bdda70"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c9390"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x405c9390"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x405c5408"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40577a18"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bade08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bade08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40b9e448"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ba15a8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40be12b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40be12b8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bf4148"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bf4148"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb89a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bb89a8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bdeed0"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bdeed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bb9f08"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40bb9f08"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40bc9e30"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bcadd0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405c9998"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x405c9998"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x405c5a10"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4056e220"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40be00a8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40be00a8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bdd650"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bdd650"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ba3958"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ba3958"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bb7ec0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb7260"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bca5f8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bca5f8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40bc6558"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bcaa20"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x405c80b8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x405c80b8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a60818"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405867b0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4968"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x4056e5b8"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40580538"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9caa0"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x4058aed0"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40605990"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40605990"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x406113b0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x40586ef0"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405c8470"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x405c8470"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x405c41f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a60818"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a5c738"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x405cfa50"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40605258"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40605258"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40614be0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x405ccbe0"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40604960"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CC2420Power" scoped="" ref="0x40604960"/></from>
      <to><interface-ref name="CC2420Power" scoped="" ref="0x40610348"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405da658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409c67c8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x405da658"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a41d98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a41d98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a5fcc0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409c67c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d0af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x405d6c20"/></from>
      <to><interface-ref name="CC2420Transmit" scoped="" ref="0x409c6c50"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Transmit" scoped="" ref="0x409c6c50"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409cf010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SubBackoff" scoped="" ref="0x405ce438"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409c3390"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="RadioBackoff" scoped="" ref="0x409c3390"/></from>
      <to><interface-ref name="RadioBackoff" scoped="" ref="0x409cf748"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x405cb9d0"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x405d5060"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x405d4898"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b8a2a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b8a2a8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40baccf8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="SplitControlState" scoped="" ref="0x405df838"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40b8b010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40b8b010"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4088ccc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x405d4ce0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40954890"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="sendDone_task" scoped="" ref="0x405ddca8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="stopDone_task" scoped="" ref="0x405dd498"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <from><interface-ref name="startDone_task" scoped="" ref="0x405e1928"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ReadRssi" scoped="" ref="0x406154c0"/></from>
      <to><interface-ref name="ReadRssi" scoped="" ref="0x40610e30"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="StartupTimer" scoped="" ref="0x4061beb0"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4066cf08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Alarm32khz32" scoped="" ref="0x4066cf08"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407c5e78"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4061a8d0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4066be90"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4066be90"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4044d8e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x40619300"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x407bfcd0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x407bfcd0"/></from>
      <to><interface-ref name="PortA6" scoped="" ref="0x4044e4b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x40619d08"/></from>
      <to><interface-ref name="VREN" scoped="" ref="0x407bd128"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="VREN" scoped="" ref="0x407bd128"/></from>
      <to><interface-ref name="PortA5" scoped="" ref="0x4044fa08"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x40627e40"/></from>
      <to><interface-ref name="InterruptCCA" scoped="" ref="0x407cf188"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptCCA" scoped="" ref="0x407cf188"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x408266b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40620298"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409876d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409876d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083bb10"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRXON" scoped="" ref="0x406301e0"/></from>
      <to><interface-ref name="SRXON" scoped="" ref="0x40986d58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40986d58"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SRFOFF" scoped="" ref="0x406305f8"/></from>
      <to><interface-ref name="SRFOFF" scoped="" ref="0x40985840"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40985840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40630e48"/></from>
      <to><interface-ref name="SXOSCON" scoped="" ref="0x409866a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409866a8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40630a28"/></from>
      <to><interface-ref name="SXOSCOFF" scoped="" ref="0x40985b98"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40985b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40621310"/></from>
      <to><interface-ref name="FSCTRL" scoped="" ref="0x40980b00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40980b00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40621898"/></from>
      <to><interface-ref name="IOCFG0" scoped="" ref="0x4097fcb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4097fcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40621da0"/></from>
      <to><interface-ref name="IOCFG1" scoped="" ref="0x4097e190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x4097e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40626358"/></from>
      <to><interface-ref name="MDMCTRL0" scoped="" ref="0x40982b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40982b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40626878"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40981010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40981010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="PANID" scoped="" ref="0x40623b40"/></from>
      <to><interface-ref name="PANID" scoped="" ref="0x4099b448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x4099b448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40626d88"/></from>
      <to><interface-ref name="RXCTRL1" scoped="" ref="0x409805c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x409805c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RSSI" scoped="" ref="0x40622330"/></from>
      <to><interface-ref name="RSSI" scoped="" ref="0x40981448"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40981448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="SyncResource" scoped="" ref="0x4061f348"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40995788"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40995788"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083bb10"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="RssiResource" scoped="" ref="0x40620a48"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x409a5798"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x409a5798"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083bb10"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40617520"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4968"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="syncDone" scoped="" ref="0x4062a618"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <from><interface-ref name="sync" scoped="" ref="0x4062be00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4066c940"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406777f8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x406777f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c6bb0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x407c5e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41029dc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x41029dc0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410215a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4101e380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41025bc8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x41025bc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410589f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x4101f0a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40769668"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40769668"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077ee60"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Timer" scoped="" ref="0x41056548"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40687b10"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40687b10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406dd1a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="HplAtm128Compare" scoped="" ref="0x410537e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x4069d628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x40694ae0"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406ef520"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4068f998"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x406ee258"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4069d628"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x406eb128"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4069d628"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x406ead20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4069d628"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x406e7950"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <from><interface-ref name="Timer0Ctrl" scoped="" ref="0x406f9528"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406a6208"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x406a6208"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406b1e68"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x406a1820"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406ad728"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x406a6b68"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406b07d8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4069c930"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406a4b08"/></to>
    </wire>
    <wire loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/InitOneP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40740220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40687b10"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407a00e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077d088"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4077d088"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4077a890"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40779a58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40687b10"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x407c0890"/></from>
      <to><interface-ref name="PortB7" scoped="" ref="0x40452210"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x407bf2e8"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40461ce8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x4066b4b8"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4045cc08"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x407be730"/></from>
      <to><interface-ref name="PortD4" scoped="" ref="0x4045d750"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x407cda28"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407daf00"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf898"/></from>
      <to><interface-ref name="Interrupt" scoped="" ref="0x407d62c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Capture" scoped="" ref="0x407cc5a0"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4068f998"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="Atm128Interrupt" scoped="" ref="0x407d68c0"/></from>
      <to><interface-ref name="Int6" scoped="" ref="0x407f6168"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int6" scoped="" ref="0x407f6168"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40813538"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <from><interface-ref name="CC_CCA" scoped="" ref="0x40826d68"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4066b4b8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x407e14f8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40805b68"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int4" scoped="" ref="0x407df010"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40817050"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int7" scoped="" ref="0x407f69e8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40811718"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x407e1d78"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x40803c70"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int5" scoped="" ref="0x407df890"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x408152b0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x407e4c18"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x407f3998"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x407e06b8"/></from>
      <to><interface-ref name="Irq" scoped="" ref="0x4081bd60"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x407f8190"/></from>
      <to><interface-ref name="IntSig0" scoped="" ref="0x407f05e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40804350"/></from>
      <to><interface-ref name="IntSig1" scoped="" ref="0x407f0a60"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081c438"/></from>
      <to><interface-ref name="IntSig2" scoped="" ref="0x407f0ed8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x4081a5f0"/></from>
      <to><interface-ref name="IntSig3" scoped="" ref="0x407f2360"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40817808"/></from>
      <to><interface-ref name="IntSig4" scoped="" ref="0x407f27d8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40815a68"/></from>
      <to><interface-ref name="IntSig5" scoped="" ref="0x407f2c50"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40813cf0"/></from>
      <to><interface-ref name="IntSig6" scoped="" ref="0x407f11a0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <from><interface-ref name="IrqSignal" scoped="" ref="0x40811ed0"/></from>
      <to><interface-ref name="IntSig7" scoped="" ref="0x407f1618"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <from><interface-ref name="CCATask" scoped="" ref="0x40821670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x4099a868"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40986a00"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4097f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4097f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409854e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4099bcb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40981cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x4097c2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40987d88"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x408471d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40984260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409845b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40984990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40981880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x4097c6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x4099b880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x4097e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40986350"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40982730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40980190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x4099a190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4097f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40984ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409823d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x4099b010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40985ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x4097cb20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40985190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40982080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x4097ea00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x4097ee38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Fifo" scoped="" ref="0x4084db78"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x408464e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x40846f10"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Reg" scoped="" ref="0x4084cda8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x408456d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4083bb10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408479e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Strobe" scoped="" ref="0x4084b610"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x40845e90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="WorkingState" scoped="" ref="0x40856ad0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4088ebc0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x4088ebc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4088ccc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x408442e8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40886a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40886a90"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4095c340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4085b2c8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x4095d170"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiByte" scoped="" ref="0x4095d170"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408afbb0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x40856600"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x4095d4a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SpiPacket" scoped="" ref="0x4095d4a8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408ab010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4085d340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40954890"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <from><interface-ref name="grant" scoped="" ref="0x40854168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <from><interface-ref name="State" scoped="" ref="0x4088ccc0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x408a1468"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x408ab010"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x408a7010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x408afbb0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x408aac00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40886758"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408af830"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408af830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408aa8a0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SubResource" scoped="" ref="0x4095cb00"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408ab760"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SS" scoped="" ref="0x4095b2c8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4044d8e0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408ab760"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x408a7740"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x408a5540"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40944010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40944010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410d3088"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408cac30"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40944b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40944b58"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410d3bd0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x408b28f0"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x408a8b38"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x408a8b38"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x408dbf10"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408b00e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403bcae8"/></to>
    </wire>
    <wire loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x408d91e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x408ef598"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403bcae8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x408f0cc8"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4044d8e0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x408f2730"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x408f1128"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x408f1b10"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x40455750"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40944750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410d37c8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410d20a8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40943030"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x410d24d0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410d5090"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x410d2ac8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409766e0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40951c10"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4096ccd8"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x409788e8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x409788e8"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x40451b30"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4096b740"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40977308"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40977308"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x40451138"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4096a200"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40977d10"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40977d10"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x40447730"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4098e5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409a8868"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40994a40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40990b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4098d448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4098d880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409934e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a9cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4098f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4098fcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4098dcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409aa2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40995e40"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40991260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409915b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40991990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40993b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4098f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4098f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409946e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409aa6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409a9880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409ab5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40994390"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40990730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4098e190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409a8190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409ab190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4098eb00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40994d98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4098d010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40991ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409903d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409a9448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409a9010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40993ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409aab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40993190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40993840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40990080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409aba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409abe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x4099d5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409b8868"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x409a4a40"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x409a0b68"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x4099c448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x4099c880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409a24e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409b9cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x4099f448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x4099fcb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x4099ccb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x409ba2b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409a5e50"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409a1260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x409a15b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x409a1990"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x409a2b98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x4099f880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x4099f010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x409a46e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x409ba6e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x409b9880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x409bb5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x409a4390"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x409a0730"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x4099d190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x409b8190"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x409bb190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x4099db00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x409a4d98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x4099c010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x409a1ce8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x409a03d8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x409b9448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x409b9010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x409a2ef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x409bab20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x409a2190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x409a2840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x409a0080"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x409bba00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x409bbe38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="EnergyIndicator" scoped="" ref="0x409c0468"/></from>
      <to><interface-ref name="EnergyIndicator" scoped="" ref="0x409cd0c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ByteIndicator" scoped="" ref="0x409c08d0"/></from>
      <to><interface-ref name="ByteIndicator" scoped="" ref="0x409cd550"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="BackoffTimer" scoped="" ref="0x409cdb18"/></from>
      <to><interface-ref name="Alarm32khz32" scoped="" ref="0x4066cf08"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CCA" scoped="" ref="0x409e0eb8"/></from>
      <to><interface-ref name="CCA" scoped="" ref="0x4066b4b8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x409e79a8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4066be90"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFD" scoped="" ref="0x409e63d0"/></from>
      <to><interface-ref name="SFD" scoped="" ref="0x407be730"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CaptureSFD" scoped="" ref="0x409e0840"/></from>
      <to><interface-ref name="CaptureSFD" scoped="" ref="0x407cda28"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x409e6e10"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40a30518"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40a30518"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083bb10"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x409e1588"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x40a30bd0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40a30bd0"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SNOP" scoped="" ref="0x409dfd28"/></from>
      <to><interface-ref name="SNOP" scoped="" ref="0x40a2f190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40a2f190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXON" scoped="" ref="0x409de168"/></from>
      <to><interface-ref name="STXON" scoped="" ref="0x40a2fef0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40a2fef0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="STXONCCA" scoped="" ref="0x409de598"/></from>
      <to><interface-ref name="STXONCCA" scoped="" ref="0x40a50260"/></to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40a50260"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x409de9c8"/></from>
      <to><interface-ref name="SFLUSHTX" scoped="" ref="0x40a4f010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40a4f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXCTRL" scoped="" ref="0x409df840"/></from>
      <to><interface-ref name="TXCTRL" scoped="" ref="0x40a4cae0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40a4cae0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO" scoped="" ref="0x409e1b48"/></from>
      <to><interface-ref name="TXFIFO" scoped="" ref="0x40a45550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40a45550"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409df338"/></from>
      <to><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a46a00"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a46a00"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x409dee08"/></from>
      <to><interface-ref name="MDMCTRL1" scoped="" ref="0x40a4ed58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40a4ed58"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x409fac48"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a602d8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Receive" scoped="" ref="0x40a602d8"/></from>
      <to><interface-ref name="CC2420Receive" scoped="" ref="0x40a5c1f8"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x409eb590"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x409ebc10"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x409ea2b0"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40aa5de0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409e0170"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aa0010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aa0010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a97888"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409dc1a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40954890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40a4b368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40a2f840"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40a4e920"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40a4a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40a4a5c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40a4c270"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40a4aa00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40a48010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40a4f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40a4f740"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40a50910"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40a4c6a8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40a2f4e8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40a48448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40a465c8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40a492b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40a4e4e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40a4cf18"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a46e38"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40a4ae38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40a4b8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40a2fb98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40a4bcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40a4fa98"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40a4e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40a46190"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40a48cb8"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a50c68"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40a48880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40a505b8"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40a4fdf0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40a496e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40a49b20"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketIndicator" scoped="" ref="0x40a60cb0"/></from>
      <to><interface-ref name="PacketIndicator" scoped="" ref="0x40a5cbd0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a53288"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40954890"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40a5b010"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x4066be90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFO" scoped="" ref="0x40a5ba18"/></from>
      <to><interface-ref name="FIFO" scoped="" ref="0x407c0890"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="FIFOP" scoped="" ref="0x40a5a4c8"/></from>
      <to><interface-ref name="FIFOP" scoped="" ref="0x407bf2e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a59010"/></from>
      <to><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf898"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x40a596d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b812d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40b812d0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4083bb10"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40a59e50"/></from>
      <to><interface-ref name="RXFIFO" scoped="" ref="0x40b75cb8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXFIFO" scoped="" ref="0x40b75cb8"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:63">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40a58a30"/></from>
      <to><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7fa18"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7fa18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="SACK" scoped="" ref="0x40a58600"/></from>
      <to><interface-ref name="SACK" scoped="" ref="0x40b7e190"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SACK" scoped="" ref="0x40b7e190"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Packet" scoped="" ref="0x40a58e68"/></from>
      <to><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a574f8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a56b40"/></from>
      <to><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40aa5de0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <from><interface-ref name="CC2420Config" scoped="" ref="0x40a57990"/></from>
      <to><interface-ref name="CC2420Config" scoped="" ref="0x40605990"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <from><interface-ref name="receiveDone_task" scoped="" ref="0x40a6e178"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40a97eb0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x405567b0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40adc010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40769668"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTime32khz" scoped="" ref="0x40ab7440"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40add5d8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ab7e98"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ad1b40"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ad1b40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40b6d970"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40ad47f0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b4dea8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40ad4040"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40acd240"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40acd240"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40aead50"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b71220"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b1b0a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b2b398"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x40acd808"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x40acd808"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40b20198"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b6b360"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x40aee4f0"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x40aee4f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b1fbe8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Counter" scoped="" ref="0x40b1fbe8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4113b408"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Init" scoped="" ref="0x40aead50"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410fd558"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Alarm" scoped="" ref="0x40b20198"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410fd990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x4113a5d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069c930"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x41137790"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x406a6208"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Compare" scoped="" ref="0x41136010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x406a6b68"/></to>
    </wire>
    <wire>
      <from><interface-ref name="TimerAsync" scoped="" ref="0x41135a20"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x406a1820"/></to>
    </wire>
    <wire>
      <from><interface-ref name="fired" scoped="" ref="0x40b29d08"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b6e4b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40b68458"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b61670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40b61670"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40ad47f0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL1" scoped="" ref="0x40b7a190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO" scoped="" ref="0x40b74430"/></from>
      <to><interface-ref name="Fifo" scoped="" ref="0x4084db78"/>
      <arguments>
        <value cst="I:62">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXCAL" scoped="" ref="0x40b80598"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL0" scoped="" ref="0x40b7c7a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL1" scoped="" ref="0x40b79010"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="BATTMON" scoped="" ref="0x40b79448"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXONCCA" scoped="" ref="0x40b7f010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b75880"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RSSI" scoped="" ref="0x40b7b030"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="TXCTRL" scoped="" ref="0x40b7b8a0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG0" scoped="" ref="0x40b79880"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANAND" scoped="" ref="0x40b78e38"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ChipSpiResource" scoped="" ref="0x40b81988"/></from>
      <to><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7fd70"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SACKPEND" scoped="" ref="0x40b7e568"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7f6c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SYNCWORD" scoped="" ref="0x40b7b468"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MDMCTRL1" scoped="" ref="0x40b7cbd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SXOSCON" scoped="" ref="0x40b80240"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANOR" scoped="" ref="0x40b762b0"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SHORTADR" scoped="" ref="0x40b75448"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:362">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDL" scoped="" ref="0x40b78190"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SNOP" scoped="" ref="0x40b81ea0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MAIN" scoped="" ref="0x40b7c368"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="RXCTRL0" scoped="" ref="0x40b7bcd8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IOCFG1" scoped="" ref="0x40b79cb8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSCTRL" scoped="" ref="0x40b7a6c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXON" scoped="" ref="0x40b808f0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SECCTRL0" scoped="" ref="0x40b7ab00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRXDEC" scoped="" ref="0x40b7e8c0"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SAES" scoped="" ref="0x40b7c010"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="PANID" scoped="" ref="0x40b75010"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:360">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="IEEEADR" scoped="" ref="0x40b76b20"/></from>
      <to><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/>
      <arguments>
        <value cst="I:352">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AGCCTRL" scoped="" ref="0x40b766e8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXON" scoped="" ref="0x40b80c48"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SRFOFF" scoped="" ref="0x40b7f368"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="STXENC" scoped="" ref="0x40b7ec18"/></from>
      <to><interface-ref name="Strobe" scoped="" ref="0x4084b610"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="MANFIDH" scoped="" ref="0x40b785c8"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="FSMTC" scoped="" ref="0x40b78a00"/></from>
      <to><interface-ref name="Reg" scoped="" ref="0x4084cda8"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40b889a8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40bac438"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40b8d770"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b8af00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40b9ef00"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40ba15a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="State" scoped="" ref="0x40b9d5e8"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40ba02d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40ba02d0"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4088ccc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40b9dda0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40b8a2a8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b9c2d8"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="DuplicateReceive" scoped="" ref="0x40ba3d80"/></from>
      <to><interface-ref name="DuplicateReceive" scoped="" ref="0x40bb4310"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bb4a80"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bb7260"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb4e40"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40bc50c8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40bcadd0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40bc5830"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40bcaa20"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <from><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc5bf0"/></from>
      <to><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <from><interface-ref name="SendState" scoped="" ref="0x40bde680"/></from>
      <to><interface-ref name="State" scoped="" ref="0x40bdb338"/></to>
    </wire>
    <wire>
      <from><interface-ref name="State" scoped="" ref="0x40bdb338"/></from>
      <to><interface-ref name="State" scoped="" ref="0x4088ccc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf15f0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Mag" scoped="" ref="0x40c06438"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x40c00750"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x40c00750"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x40c1f3b8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ActualY" scoped="" ref="0x40c24220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Read" scoped="" ref="0x41163168"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Read" scoped="" ref="0x41163168"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d90998"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41163cf0"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x40c1bde0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigY" scoped="" ref="0x40c1bde0"/></from>
      <to><interface-ref name="ConfigY" scoped="" ref="0x40c19b48"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagX" scoped="" ref="0x40c271b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d9be78"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="MagY" scoped="" ref="0x40c261b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d99d30"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Mag" scoped="" ref="0x40c1f3b8"/></from>
      <to><interface-ref name="Mag" scoped="" ref="0x40c1de68"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d9a7d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c1fcd0"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c1fcd0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d59cf0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40d7aba0"/></from>
      <to><interface-ref name="ActualX" scoped="" ref="0x40c25220"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d97680"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c1fcd0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40d98a48"/></from>
      <to><interface-ref name="ActualY" scoped="" ref="0x40c24220"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ConfigX" scoped="" ref="0x40c1b808"/></from>
      <to><interface-ref name="ConfigX" scoped="" ref="0x40c19550"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40d59cf0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411c86e8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6be08"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6e890"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6e890"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411c7270"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6a4d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6ef28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6ef28"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x411c7908"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40d6b538"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40c1d870"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40c35c70"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40d33010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40d33010"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40c7b158"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40c3ac18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c59858"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c59858"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c7c5f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c17168"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d5fa80"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Timer" scoped="" ref="0x40d5fa80"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40b61670"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagPower" scoped="" ref="0x40c15458"/></from>
      <to><interface-ref name="PW5" scoped="" ref="0x40c46e68"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW5" scoped="" ref="0x40c46e68"/></from>
      <to><interface-ref name="PortC5" scoped="" ref="0x40459ea8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcX" scoped="" ref="0x40c3b720"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40c40e28"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc6" scoped="" ref="0x40c40e28"/></from>
      <to><interface-ref name="Adc6" scoped="" ref="0x40c645d8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <from><interface-ref name="MagAdcY" scoped="" ref="0x40c3bb28"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40c40a58"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc5" scoped="" ref="0x40c40a58"/></from>
      <to><interface-ref name="Adc5" scoped="" ref="0x40c64208"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW0" scoped="" ref="0x40c1cb48"/></from>
      <to><interface-ref name="PortC0" scoped="" ref="0x40452c08"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc0" scoped="" ref="0x40c41678"/></from>
      <to><interface-ref name="Adc0" scoped="" ref="0x40c3fd78"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW3" scoped="" ref="0x40c479e8"/></from>
      <to><interface-ref name="PortC3" scoped="" ref="0x4045aa98"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW6" scoped="" ref="0x40c45850"/></from>
      <to><interface-ref name="PortC6" scoped="" ref="0x404588e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc3" scoped="" ref="0x40c402b8"/></from>
      <to><interface-ref name="Adc3" scoped="" ref="0x40c659a8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int1" scoped="" ref="0x40c43740"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x404612f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW1" scoped="" ref="0x40c48570"/></from>
      <to><interface-ref name="PortC1" scoped="" ref="0x4045b670"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW4" scoped="" ref="0x40c46490"/></from>
      <to><interface-ref name="PortC4" scoped="" ref="0x404594b0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc1" scoped="" ref="0x40c41ac8"/></from>
      <to><interface-ref name="Adc1" scoped="" ref="0x40c65208"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW7" scoped="" ref="0x40c442d0"/></from>
      <to><interface-ref name="PortC7" scoped="" ref="0x404572f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int2" scoped="" ref="0x40c42200"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40461ce8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="PW2" scoped="" ref="0x40c47010"/></from>
      <to><interface-ref name="PortC2" scoped="" ref="0x4045a0a0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc2" scoped="" ref="0x40c41e98"/></from>
      <to><interface-ref name="Adc2" scoped="" ref="0x40c655d8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int0" scoped="" ref="0x40c44cb8"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404628e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc4" scoped="" ref="0x40c40688"/></from>
      <to><interface-ref name="Adc4" scoped="" ref="0x40c65d78"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Adc7" scoped="" ref="0x40c3f248"/></from>
      <to><interface-ref name="Adc7" scoped="" ref="0x40c649a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <from><interface-ref name="Int3" scoped="" ref="0x40c42be8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x4046a750"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c7c5f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40cba138"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40c7b158"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40cba928"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40cc6940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c77908"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40c77908"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x411910a8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40cc50e0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ceddb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40cc2010"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40d0fc60"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40c97340"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40ced908"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c97a50"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c76470"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c76470"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41191bf0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40d0e010"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40d0a9b0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40d0a9b0"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40d06a80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40d0d6d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d3f520"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40d0c350"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40d3f520"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c76068"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411917e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c76b08"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41190310"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411907d0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c98010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x41190bf8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41195f10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4118fe48"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40d2f240"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x40457ce8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40d2fc40"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x40460830"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d6e488"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x411c8e28"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x411c7dc8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d6d3e8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x411c5250"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x411c9540"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x411c4438"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="SplitControl" scoped="" ref="0x411ebbe0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40d6b538"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x411e9230"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40d6baf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411e9548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6be08"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x411e9be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6a4d0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="stopTask" scoped="" ref="0x411e8030"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="startTask" scoped="" ref="0x411e8468"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dbcd98"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41163cf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40dbb670"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x40db8620"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40db3418"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x41162230"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d90998"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e17e40"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x40dbadf8"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40e14598"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40e2f7c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40dbb670"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40e12ab0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dbcd98"/></to>
    </wire>
    <wire loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40e16b80"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40e155f8"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40e12238"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40db19e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40db19e8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40dab880"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40daeb88"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40dabe08"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40db8620"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40de4010"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Resource" scoped="" ref="0x40de4010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4120fbf0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40de06e0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40db3418"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40dd1818"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40db0e78"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40db0e78"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40de2aa8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40da9ce8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4043a268"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40defda8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40dab3f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dee548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40de4b58"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40de4b58"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4120e7b0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40ddfec0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x403bcae8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40de4750"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x4120e3a8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40de0230"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x4120ee48"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4120d338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40de06e0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Queue" scoped="" ref="0x4120d760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41210a90"/></to>
    </wire>
    <wire>
      <from><interface-ref name="grantedTask" scoped="" ref="0x4120c970"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41234de0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40defda8"/></to>
    </wire>
    <wire>
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41233230"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40dee230"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41233548"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dee548"/></to>
    </wire>
    <wire>
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41233be0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40deebe0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40e081e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e27f08"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4053aaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e7b5b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Acks" scoped="" ref="0x40e7a250"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547b10"/></to>
    </wire>
    <wire>
      <from><interface-ref name="Send" scoped="" ref="0x412278b8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e4ada8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x41226010"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e4ada8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e82da0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40e81598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40533a80"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e81c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40e80850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4053aaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="errorTask" scoped="" ref="0x40e80f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="CancelTask" scoped="" ref="0x40e7f370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire>
      <from><interface-ref name="Packet" scoped="" ref="0x40e73010"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4053aaf0"/></to>
    </wire>
    <wire>
      <from><interface-ref name="AMPacket" scoped="" ref="0x40e736a8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="OscilloscopeC" loc="19:OscilloscopeC.nc">
      <module/>
    </component>
    <component qname="MainC" loc="45:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="15:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="12:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="31(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:59">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:58">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:57">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="32(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="32(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="32(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="32(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="32(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="32(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="32(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="32(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="31(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:56">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:55">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:54">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="32(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="32(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="32(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="32(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="32(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="32(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="32(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="32(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="31(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:53">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="32(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="32(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="32(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="32(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="32(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="32(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="32(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="32(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="31(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="32(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="32(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="32(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="32(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="32(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="32(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="32(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="32(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="31(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="32(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="32(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="32(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="32(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="32(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="32(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="32(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="32(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="31(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="32(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="32(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="32(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="32(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="32(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="32(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="32(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="32(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="33(HplAtm128GeneralIOC.F0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="33(HplAtm128GeneralIOC.F1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="33(HplAtm128GeneralIOC.F2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="33(HplAtm128GeneralIOC.F3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="33(HplAtm128GeneralIOC.F4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="33(HplAtm128GeneralIOC.F5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="33(HplAtm128GeneralIOC.F6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="33(HplAtm128GeneralIOC.F7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:98">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:97">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="33(HplAtm128GeneralIOC.G0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="33(HplAtm128GeneralIOC.G1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="33(HplAtm128GeneralIOC.G2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="33(HplAtm128GeneralIOC.G3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="33(HplAtm128GeneralIOC.G4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:101">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:100">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:99">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc" safe="">
      <documentation loc="14:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="45:/opt/tinyos-2.1.0/tos/system/RealMainP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="35:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="43:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.10 2008/07/23 17:25:42 idgay Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @date   October 26, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ActiveMessageC" loc="48:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <documentation loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
        <short>&#10;&#10; The Active Message layer on the micaZ platform.</short>
        <long>&#10;&#10; The Active Message layer on the micaZ platform. This is a naming wrapper&#10; around the CC2420 Active Message layer.&#10;&#10; @author Philip Levis&#10; @date June 19 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
        <short>&#10; The Active Message layer for the CC2420 radio.</short>
        <long>&#10; The Active Message layer for the CC2420 radio. This configuration&#10; just layers the AM dispatch (CC2420ActiveMessageM) on top of the&#10; underlying CC2420 radio packet (CC2420CsmaCsmaCC), which is&#10; inherently an AM packet (acknowledgements based on AM destination&#10; addr and group). Note that snooping may not work, due to CC2420&#10; early packet rejection if acknowledgements are enabled.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10; @version $Revision: 1.12 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ActiveMessageP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
        <short>&#10; Active message implementation on top of the CC2420 radio.</short>
        <long>&#10; Active message implementation on top of the CC2420 radio. This&#10; implementation uses the 16-bit addressing mode of 802.15.4: the&#10; only additional byte it adds is the AM id byte, as the first byte&#10; of the data payload.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.18 $ $Date: 2008/06/24 05:32:31 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
        <short>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.</short>
        <long>&#10; Basic implementation of a CSMA MAC for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420CsmaP" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
        <short>&#10; Implementation for configuring a ChipCon CC2420 radio.</short>
        <long>&#10; Implementation for configuring a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/05/14 21:33:07 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Urs Hunkeler (ReadRssi implementation)&#10; @version $Revision: 1.7 $ $Date: 2008/06/24 04:07:28 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="AlarmMultiplexC" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
        <short>&#10; A component that multiplexes the use of an alarm.</short>
        <long>&#10; A component that multiplexes the use of an alarm. The assumption is&#10; that its use is mutually exclusive and users check whether the&#10; events are for them.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm" loc="66(AlarmMultiplexC.Alarm):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420AlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C" loc="26(AlarmMultiplexC.Alarm.Alarm32khz32C):/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Alarm32khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16" loc="28(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16):/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmOne16C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer1C" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
        <short>&#10; HPL interface to Atmega128 timer 1.</short>
        <long>&#10; HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncC" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128Timer0AsyncP" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
        <short>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega128 timer 0 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 0 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128Timer1P" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
        <short>&#10; Internal component of the HPL interface to Atmega128 timer 1.</short>
        <long>&#10; Internal component of the HPL interface to Atmega128 timer 1.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="InitOneP.InitOne" loc="35(InitOneP.InitOne):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128TimerInitC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm" loc="42(AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
        <short>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
        <short>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Counter component as per TEP102 HAL guidelines. The mica&#10; family 32kHz clock is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CounterOne16C.NCounter" loc="33(CounterOne16C.NCounter):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128CounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Counter32khz32C.Transform32" loc="43(Counter32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="counter_one_overflow_t" ref="0x403aaea8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32" loc="40(AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32):/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoInitC" loc="16:/opt/tinyos-2.1.0/tos/system/NoInitC.nc" safe="">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
        <short>&#10; A do-nothing Init implementation.</short>
        <long>&#10; A do-nothing Init implementation. Useful for implementing components whose&#10; specification has an Init, but whose implementation doesn't need one.&#10;&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplCC2420PinsC" loc="64:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
        <short>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.</short>
        <long>&#10; Mapping the CC2420 pins to Atmega128 pins for the micaZ platform.&#10; Information on the function of these pins can be found on pages&#10; 14-15 of the CC2420 datasheet (rev 1.2).&#10;&#10; &#60;pre>&#10; $Id: HplCC2420PinsC.nc,v 1.5 2008/06/11 00:46:27 razvanm Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2007/04/30 17:31:08 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplCC2420InterruptsC.CaptureSFDC" loc="33(HplCC2420InterruptsC.CaptureSFDC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioCaptureC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsC.InterruptFIFOPC" loc="6(HplCC2420InterruptsC.InterruptFIFOPC):/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128GpioInterruptC"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
        <short>&#10; Component providing access to all external interrupt pins on ATmega128.</short>
        <long>&#10; Component providing access to all external interrupt pins on ATmega128.&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128InterruptSigP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10; Exposes just the interrupt vector routine for &#10; easy linking to generic components.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin0" loc="30(HplAtm128InterruptC.IntPin0):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin1" loc="30(HplAtm128InterruptC.IntPin1):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin2" loc="30(HplAtm128InterruptC.IntPin2):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin3" loc="30(HplAtm128InterruptC.IntPin3):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:106">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin4" loc="30(HplAtm128InterruptC.IntPin4):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin5" loc="30(HplAtm128InterruptC.IntPin5):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin6" loc="30(HplAtm128InterruptC.IntPin6):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128InterruptC.IntPin7" loc="30(HplAtm128InterruptC.IntPin7):/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128InterruptPinP"/>
        <arguments>
          <value cst="I:90">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420InterruptsP" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
        <short>&#10; MicaZ implementation of the CC2420 interrupts.</short>
        <long>&#10; MicaZ implementation of the CC2420 interrupts. FIFOP is a real&#10; interrupt, while CCA and FIFO are emulated through timer polling.&#10; &#60;pre>&#10;  $Id: HplCC2420InterruptsP.nc,v 1.6 2008/06/26 04:39:12 regehr Exp $&#10; &#60;pre>&#10;&#10; @author Philip Levis&#10; @author Matt Miller&#10; @author David Moss&#10; @version @version $Revision: 1.6 $ $Date: 2008/06/26 04:39:12 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420ControlC.Spi" loc="39(CC2420ControlC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420SpiWireC" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:16 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420SpiP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Roman Lim&#10; @author Razvan Musaloie-E.&#10; @author Jeonggil Ko&#10; @version $Revision: 1.4 $ $Date: 2008/06/23 20:25:15 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.WorkingStateC" loc="65(CC2420SpiWireC.WorkingStateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="StateImplC" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="StateImplP" loc="64:/opt/tinyos-2.1.0/tos/system/StateImplP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420SpiWireC.HplCC2420SpiC" loc="37(CC2420SpiWireC.HplCC2420SpiC):/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplCC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.5 2008/04/24 22:31:25 mmaroti Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc" safe="">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.9 2008/06/23 20:25:15 regehr Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.4 2006/12/12 18:23:04 vlahan Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128SpiP" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="73(Atm128SpiC.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="32(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplCC2420SpiP" loc="38:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
        <short>&#10; Automatic slave select update for the SpiResource&#10;&#10; </short>
        <long>&#10; Automatic slave select update for the SpiResource&#10;&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="34:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="33:/opt/tinyos-2.1.0/tos/system/LedsP.nc" safe="">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.SyncSpiC" loc="39(CC2420ControlC.SyncSpiC):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ControlC.RssiResource" loc="39(CC2420ControlC.RssiResource):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="ActiveMessageAddressC" loc="41:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TransmitC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
        <short>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the transmit path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TransmitP" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc" safe="">
      <module/>
    </component>
    <component qname="CC2420TransmitC.Spi" loc="39(CC2420TransmitC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
        <short>&#10; Implementation of the receive path for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of the receive path for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Jung Il Choi&#10; @version $Revision: 1.16 $ $Date: 2008/07/25 16:27:52 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420PacketP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420PacketC.CounterToLocalTimeC" loc="35(CC2420PacketC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC" loc="33:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP" loc="23(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP):/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ae9010"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="35(HilTimerMilliC.AlarmToTimerC):/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="35(HilTimerMilliC.VirtualizeTimerC):/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="35(HilTimerMilliC.CounterToLocalTimeC):/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CC2420PacketC.DummyTimer" loc="36(CC2420PacketC.DummyTimer):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420ReceiveC.Spi" loc="39(CC2420ReceiveC.Spi):/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="CC2420SpiC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RandomC" loc="32:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="34:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="21:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420CsmaC.StateC" loc="65(CC2420CsmaC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueSendC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
        <short>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; </short>
        <long>&#10; Generate a unique dsn byte for this outgoing packet&#10; This should sit at the top of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueSendP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
        <short>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.</short>
        <long>&#10; This layer is responsible for supplying a unique data sequence number (dsn)&#10; to each outgoing message.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UniqueSendC.StateC" loc="65(UniqueSendC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UniqueReceiveC" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
        <short>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long>&#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; This should sit at the bottom of the stack&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="UniqueReceiveP" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
        <short> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.</short>
        <long> &#10; This layer keeps a history of the past RECEIVE_HISTORY_SIZE received messages&#10; If the source address and dsn number of a newly received message matches&#10; our recent history, we drop the message because we've already seen it.&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CC2420TinyosNetworkC" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
        <short>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.</short>
        <long>&#10; Original TinyOS T-Frames use a packet header that is not compatible with&#10; other 6LowPAN networks.  They do not include the network byte &#10; responsible for identifying the packing as being sourced from a TinyOS&#10; network.&#10;&#10; TinyOS I-Frames are interoperability packets that do include a network&#10; byte as defined by 6LowPAN specifications.  The I-Frame header type is&#10; the default packet header used in TinyOS networks.&#10;&#10; Since either packet header is acceptable, this layer must do some &#10; preprocessing (sorry) to figure out whether or not it needs to include &#10; the functionality to process I-frames.  If I-Frames are used, then&#10; the network byte is added on the way out and checked on the way in.&#10; If the packet came from a network different from a TinyOS network, the&#10; user may access it through the DispatchP's NonTinyosReceive[] Receive &#10; interface and process it in a different radio stack.&#10;&#10; If T-Frames are used instead, this layer is simply pass-through wiring to the&#10; layer beneath.  &#10;&#10; Define &#34;CC2420_IFRAME_TYPE&#34; to use the interoperability frame and &#10; this layer&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="CC2420TinyosNetworkP" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
        <short>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.</short>
        <long>&#10; Fills in the network ID byte for outgoing packets for compatibility with&#10; other 6LowPAN networks.  Filters incoming packets that are not&#10; TinyOS network compatible.  Provides the 6LowpanSnoop interface to&#10; sniff for packets that were not originated from TinyOS.&#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DummyLplP" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
        <short>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.</short>
        <long>&#10; Dummy low power listening interface used when LowPowerListening is not&#10; compiled in with the application.&#10; Sleep interval is always 0, and duty cycle is always 100%&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="DummyLplC.StateC" loc="65(DummyLplC.StateC):/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="StateC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyC" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
        <short>&#10; Dummy configuration for PacketLink Layer&#10; </short>
        <long>&#10; Dummy configuration for PacketLink Layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PacketLinkDummyP" loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
        <short>&#10; Dummy module for Packet Link layer&#10; </short>
        <long>&#10; Dummy module for Packet Link layer&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.TimerMilliC" loc="36(OscilloscopeAppC.TimerMilliC):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.Sensor" loc="16(OscilloscopeAppC.Sensor):/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagYC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MagYC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagReadP" loc="33:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MagConfigP" loc="20:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <configuration/>
    </component>
    <component qname="MagP" loc="5:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MicaBusC" loc="18:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the&#10; mica-family 51-pin bus. Just provides the PW0-PW7 and Int0-3 digital&#10; I/O pins and returns the ADC channel number for the ADC pins.&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MicaBusP" loc="16:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
        <short>&#10; Internal component of the simplistic mica bus interface.</short>
        <long>&#10; Internal component of the simplistic mica bus interface.&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.I2CPot" loc="43(MagConfigP.I2CPot):/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="79(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="32(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="48(Atm128I2CMasterP.Power):/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="44(Atm128I2CMasterP.Master):/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version    $Id: HplAtm128I2CBusC.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version $Id: HplAtm128I2CBusP.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="34:/opt/tinyos-2.1.0/tos/system/NoLedsC.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/system/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MagConfigP.WarmupTimer" loc="36(MagConfigP.WarmupTimer):/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter" loc="79(MagConfigP.Arbiter):/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:mts300.mag">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.Arbiter.Queue" loc="32(MagConfigP.Arbiter.Queue):/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.Arbiter.Arbiter" loc="52(MagConfigP.Arbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagConfigP.PowerManager" loc="57(MagConfigP.PowerManager):/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SplitControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MagConfigP.PowerManager.PowerManager" loc="48(MagConfigP.PowerManager.PowerManager):/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcX" loc="23(MagReadP.AdcX):/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MagReadP.AdcY" loc="23(MagReadP.AdcY):/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.Sensor.AdcY" loc="21(OscilloscopeAppC.Sensor.AdcY):/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="16:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc" safe="">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="79(Atm128AdcC.AdcArbiter):/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="32(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="57(Atm128AdcC.PM):/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="48(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC" loc="39(OscilloscopeAppC.AMSenderC):/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMSenderC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP" loc="35(OscilloscopeAppC.AMSenderC.AMQueueEntryP):/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AMQueueP" loc="34:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
        <short>&#10; The fair-share send queue for AM radio communication.</short>
        <long>&#10; The fair-share send queue for AM radio communication.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AMQueueP.AMQueueImplP" loc="37(AMQueueP.AMQueueImplP):/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="OscilloscopeAppC.AMReceiverC" loc="35(OscilloscopeAppC.AMReceiverC):/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMReceiverC"/>
        <arguments>
          <value cst="I:147">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40474be8" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40474e00" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40470030" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40475f10" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4047d158" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4047d380" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x4047d570" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x404c2f28" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x404ca160" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x404ca388" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x404ca578" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplCC2420AlarmC" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc" abstract="">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
        <short>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420.</short>
        <long>&#10; A platform independent abstraction of an asynchronous 32KHz, 16-bit&#10; timer for the CC2420. As these timers (the Alarm interface) are&#10; usually part of an HAL, they are platform specific. But as the&#10; CC2420 needs to be cross-platform, this component bridges between&#10; the two, providing a platform-independent abstraction of&#10; CC2420-specific Alarm. This is a Atmega128 implementation that&#10; uses the Compare1A register.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.5 $ $Date: 2008/06/11 00:46:27 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm32khz32C" loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
        <short>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 32-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register). Note that creating one of these Alarms consumes a 16-bit&#10; 32kHz Alarm (see Alarm32khz16C).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmOne16C" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
        <short>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines.</short>
        <long>&#10; 16-bit 32kHz Alarm component as per TEP102 HAL guidelines. The mica&#10; family 32kHz Alarm is built on hardware timer 1, and actually runs at&#10; CPU frequency / 256. You can use the MeasureClockC.cyclesPerJiffy()&#10; command to figure out the exact frequency.&#10; &#60;p>&#10; Assumes an ~8MHz CPU clock, replace this component if you are running at&#10; a radically different frequency.&#10; &#60;p>&#10; Upto three of these alarms can be created (one per hardware compare&#10; register).&#10;&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128TimerInitC" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
        <short>&#10; Initialise an Atmega128 timer to a particular prescaler.</short>
        <long>&#10; Initialise an Atmega128 timer to a particular prescaler. Expected to be&#10; used at boot time.&#10; @param timer_size Integer type of the timer&#10; @param prescaler Desired prescaler value&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x4073f478" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4073f478"/></type-var>
        </typedef>
        <constant name="prescaler" ref="0x4073f698" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
          <component-ref qname="Atm128TimerInitC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmC" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
        <short>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.</short>
        <long>&#10; Build a TEP102 Alarm from an Atmega128 hardware timer and one of its&#10; compare registers.&#10; @param frequency_tag The frequency tag for this Alarm&#10; @param timer_size The width of this Alarm&#10; @param mindt The shortest time in the future this Alarm can be set&#10;   (in its own time units). Has to be at least 2, as setting a compare&#10;   register one above the current counter value is unreliable. Has to be&#10;   large enough that the Alarm time does not pass between the computation&#10;   of &#60;code>expires&#60;/code> and actually setting the compare register.&#10;   Check this (for high-frequency timers) by inspecting the generated&#10;   assembly code...&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;david.e.gay@intel.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4074a428" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4074a428"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x4074a870" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x4074a870"/></type-var>
        </typedef>
        <constant name="mindt" ref="0x4074aa30" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
          <component-ref qname="Atm128AlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128CounterC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
        <short>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.</short>
        <long>&#10; Build a TEP102 Counter from an Atmega128 hardware timer.&#10; @param frequency_tag The frequency tag for this Counter&#10; @param timer_size The width of this Counter&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="frequency_tag" ref="0x4077cf08" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="frequency_tag" scoped="" ref="0x4077cf08"/></type-var>
        </typedef>
        <typedef name="timer_size" ref="0x40778368" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
          <component-ref qname="Atm128CounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40778368"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40780488" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40780488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407808e8" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407808e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40780b50" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40780b50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4077f010" loc="47:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4077f010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4077f278" loc="48:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x4077f700" loc="49:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x4077f700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="40:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4079d158" loc="41:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4079d158"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4079d5b8" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4079d5b8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4079d820" loc="43:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4079d820"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4079dc90" loc="44:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4079dc90"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4079def8" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioCaptureC" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc" abstract="" safe="">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
        <short>&#10; Expose capture capability as a GpioCapture interface from TEP117.</short>
        <long>&#10; Expose capture capability as a GpioCapture interface from TEP117.&#10;&#10; @author Martin Turon, Crossbow &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128GpioInterruptC" loc="6:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc" abstract="" safe="">
      <documentation loc="3:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128InterruptPinP" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
        <short>&#10; Interrupt interface access for interrupt capable GPIO pins.</short>
        <long>&#10; Interrupt interface access for interrupt capable GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="ctrl_addr" ref="0x407f48d8" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="edge0bit" ref="0x407f4b00" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="edge1bit" ref="0x407f4d28" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x407f4f18" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
          <component-ref qname="HplAtm128InterruptPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CC2420SpiC" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
        <short>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.</short>
        <long>&#10; Implementation of basic SPI primitives for the ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/05/28 16:39:53 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="StateC" loc="65:/opt/tinyos-2.1.0/tos/system/StateC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/State.h">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplCC2420SpiC" loc="37:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/04/24 22:31:25 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="52:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4091f868" loc="73:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4091a660" loc="32:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aba588" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aba588"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40ae9010" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ae9010"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40ae91d0" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncP" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega128's 8-bit timer 0&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 0 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 0&#10; and never lets timer 0 overflow.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x40ae22f8" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x40ae22f8"/></type-var>
        </typedef>
        <constant name="divider" ref="0x40ae24b8" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
          <component-ref qname="Atm128AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40acfb58" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40acfb58"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b4b0b0" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b4b0b0"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b4b290" loc="35:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="36:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MagYC" loc="16:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagYC.nc" abstract="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/sensorboards/mts300/mts300.h">
        <short>&#10; &#10; </short>
        <long>&#10; &#10; @author Hu Siquan &#60;husq@xbow.com>&#10; Revision: $Revision: 1.4 $&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsArbiterC" loc="79:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40c754e8" loc="79:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40c6b528" loc="52:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncPowerManagerP" loc="48:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10;&#10; @version $Id: Atm128I2CMasterPacketP.nc,v 1.7 2007/11/01 18:10:36 fredjiang Exp $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RoundRobinArbiterC" loc="79:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40d5be68" loc="79:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="32:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2008/06/26 04:39:15 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x40d53120" loc="32:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SplitControlPowerManagerC" loc="57:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component povides a power management policy for managing the power&#10; states of non-virtualized devices.  Non-virtualized devices are shared&#10; using a parameterized Resource interface, and are powered down according&#10; to some policy whenever there are no more pending requests to that Resource.&#10; The policy implemented by this component is to delay the power down of a&#10; device by some contant factor.  Such a policy is useful whenever a device&#10; has a long wake-up latency.  The cost of waiting for the device to power&#10; up can be avoided if the device is requested again before some predetermined&#10; amount of time.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>SplitControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>AsyncStdControl&#60;/code> or&#10; &#60;code>StdControl&#60;/code> interfaces, please use either the&#10; &#60;code>AsyncStdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PowerManagerP" loc="48:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40d78328" loc="23:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40d78328"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="57:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMSenderC" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
        <short>&#10; The virtualized active message send abstraction.</short>
        <long>&#10; The virtualized active message send abstraction. Each instantiation&#10; of AMSenderC has its own queue of depth one. Therefore, it does not&#10; have to contend with other AMSenderC instantiations for queue space.&#10; The underlying implementation schedules the packets in these queues&#10; using some form of fair-share queueing.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40e26120" loc="39:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
          <component-ref qname="AMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e24b90" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40e44340" loc="37:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMReceiverC" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc" abstract="">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40e79560" loc="35:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
          <component-ref qname="AMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Boot" ref="0x403d2e80" loc="22:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403d2e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403d1070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40410380" loc="24:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40410380"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40410558"/>
        <function-ref name="getPayload" scoped="" ref="0x40410638"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40410718"/>
        <function-ref name="cancel" scoped="" ref="0x404107f8"/>
        <function-ref name="sendDone" scoped="" ref="0x404108d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x403d4320" loc="23:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x403d4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x403d44f8"/>
        <function-ref name="stopDone" scoped="" ref="0x403d45d8"/>
        <function-ref name="start" scoped="" ref="0x403d46b8"/>
        <function-ref name="stop" scoped="" ref="0x403d4798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Read" ref="0x404198e0" loc="27:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x404198e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40419f08"/>
        <function-ref name="readDone" scoped="" ref="0x4041a180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4040e470" loc="25:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4040e470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4040e648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4041c528" loc="28:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4041c528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4041c700"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4041c7e0"/>
        <function-ref name="led1On" scoped="" ref="0x4041c8c0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4041c9a0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4041ca80"/>
        <function-ref name="get" scoped="" ref="0x4041cb60"/>
        <function-ref name="led1Off" scoped="" ref="0x4041cc40"/>
        <function-ref name="led2Off" scoped="" ref="0x40418010"/>
        <function-ref name="set" scoped="" ref="0x4041cd20"/>
        <function-ref name="led0On" scoped="" ref="0x4041ce00"/>
        <function-ref name="led2On" scoped="" ref="0x4041cee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40412210" loc="26:OscilloscopeC.nc">
      <component-ref qname="OscilloscopeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40412210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x403d0d58"/>
        <function-ref name="fired" scoped="" ref="0x403d0010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x403d0718"/>
        <function-ref name="isOneShot" scoped="" ref="0x403d04c0"/>
        <function-ref name="getdt" scoped="" ref="0x403d7268"/>
        <function-ref name="gett0" scoped="" ref="0x403d7010"/>
        <function-ref name="isRunning" scoped="" ref="0x403d0268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40412838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x403d0a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40412ab8"/>
        <function-ref name="stop" scoped="" ref="0x40412d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4042f7f0" loc="47:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4042f7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4042f9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x403b0b98" loc="46:/opt/tinyos-2.1.0/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x403b0b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x403b0d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x4043a9c8" loc="43:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x4043a9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043aba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40436868" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40436868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40436a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4043a268" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4043a268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4043a440"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4043a520"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4043a600"/>
        <function-ref name="actualMicro" scoped="" ref="0x4043a6e0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4043a7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x40442088" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x40442088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442260"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40435c60" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40435c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40435e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40442490" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40442490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40442668"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40434ac0" loc="18:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40434ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40434c98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x404346f0" loc="17:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x404346f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404348c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x40444748" loc="22:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x40444748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40444920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x4044bcc0" loc="21:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x4044bcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044be98"/>
        <function-ref name="isInput" scoped="" ref="0x40444010"/>
        <function-ref name="toggle" scoped="" ref="0x404440f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404441d0"/>
        <function-ref name="get" scoped="" ref="0x404442b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40444390"/>
        <function-ref name="set" scoped="" ref="0x40444470"/>
        <function-ref name="clr" scoped="" ref="0x40444550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x4043e688" loc="20:/opt/tinyos-2.1.0/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x4043e688"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4043e860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4046e2f0" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4046e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046e6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4046e7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4046e888"/>
        <function-ref name="isOutput" scoped="" ref="0x4046e968"/>
        <function-ref name="get" scoped="" ref="0x4046ea48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046eb28"/>
        <function-ref name="set" scoped="" ref="0x4046ec08"/>
        <function-ref name="clr" scoped="" ref="0x4046ece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40460830" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40460830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460a08"/>
        <function-ref name="isInput" scoped="" ref="0x40460ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40460bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40460ca8"/>
        <function-ref name="get" scoped="" ref="0x40460d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460e68"/>
        <function-ref name="set" scoped="" ref="0x4045f010"/>
        <function-ref name="clr" scoped="" ref="0x4045f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40463ea8" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40463ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404620c0"/>
        <function-ref name="isInput" scoped="" ref="0x404621a0"/>
        <function-ref name="toggle" scoped="" ref="0x40462280"/>
        <function-ref name="isOutput" scoped="" ref="0x40462360"/>
        <function-ref name="get" scoped="" ref="0x40462440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462520"/>
        <function-ref name="set" scoped="" ref="0x40462600"/>
        <function-ref name="clr" scoped="" ref="0x404626e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x404670a0" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x404670a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467278"/>
        <function-ref name="isInput" scoped="" ref="0x40467358"/>
        <function-ref name="toggle" scoped="" ref="0x40467438"/>
        <function-ref name="isOutput" scoped="" ref="0x40467518"/>
        <function-ref name="get" scoped="" ref="0x404675f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404676d8"/>
        <function-ref name="set" scoped="" ref="0x404677b8"/>
        <function-ref name="clr" scoped="" ref="0x40467898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4044e4b0" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4044e4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044e688"/>
        <function-ref name="isInput" scoped="" ref="0x4044e768"/>
        <function-ref name="toggle" scoped="" ref="0x4044e848"/>
        <function-ref name="isOutput" scoped="" ref="0x4044e928"/>
        <function-ref name="get" scoped="" ref="0x4044ea08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044eae8"/>
        <function-ref name="set" scoped="" ref="0x4044ebc8"/>
        <function-ref name="clr" scoped="" ref="0x4044eca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40469c08" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40469c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40469de0"/>
        <function-ref name="isInput" scoped="" ref="0x40469ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40468010"/>
        <function-ref name="isOutput" scoped="" ref="0x404680f0"/>
        <function-ref name="get" scoped="" ref="0x404681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404682b0"/>
        <function-ref name="set" scoped="" ref="0x40468390"/>
        <function-ref name="clr" scoped="" ref="0x40468470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4044d8e0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4044d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044dab8"/>
        <function-ref name="isInput" scoped="" ref="0x4044db98"/>
        <function-ref name="toggle" scoped="" ref="0x4044dc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4044dd58"/>
        <function-ref name="get" scoped="" ref="0x4044de38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044df18"/>
        <function-ref name="set" scoped="" ref="0x40456010"/>
        <function-ref name="clr" scoped="" ref="0x404560f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4045a0a0" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4045a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045a278"/>
        <function-ref name="isInput" scoped="" ref="0x4045a358"/>
        <function-ref name="toggle" scoped="" ref="0x4045a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4045a518"/>
        <function-ref name="get" scoped="" ref="0x4045a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045a6d8"/>
        <function-ref name="set" scoped="" ref="0x4045a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4045a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4045d750" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4045d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045d928"/>
        <function-ref name="isInput" scoped="" ref="0x4045da08"/>
        <function-ref name="toggle" scoped="" ref="0x4045dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045dbc8"/>
        <function-ref name="get" scoped="" ref="0x4045dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045dd88"/>
        <function-ref name="set" scoped="" ref="0x4045de68"/>
        <function-ref name="clr" scoped="" ref="0x4045c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40461ce8" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40461ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40461ec0"/>
        <function-ref name="isInput" scoped="" ref="0x4046a010"/>
        <function-ref name="toggle" scoped="" ref="0x4046a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046a1d0"/>
        <function-ref name="get" scoped="" ref="0x4046a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046a390"/>
        <function-ref name="set" scoped="" ref="0x4046a470"/>
        <function-ref name="clr" scoped="" ref="0x4046a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40451138" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40451138"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451310"/>
        <function-ref name="isInput" scoped="" ref="0x404513f0"/>
        <function-ref name="toggle" scoped="" ref="0x404514d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404515b0"/>
        <function-ref name="get" scoped="" ref="0x40451690"/>
        <function-ref name="makeOutput" scoped="" ref="0x40451770"/>
        <function-ref name="set" scoped="" ref="0x40451850"/>
        <function-ref name="clr" scoped="" ref="0x40451930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x40455750" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x40455750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40455928"/>
        <function-ref name="isInput" scoped="" ref="0x40455a08"/>
        <function-ref name="toggle" scoped="" ref="0x40455ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40455bc8"/>
        <function-ref name="get" scoped="" ref="0x40455ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455d88"/>
        <function-ref name="set" scoped="" ref="0x40455e68"/>
        <function-ref name="clr" scoped="" ref="0x40454010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40459ea8" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40459ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404580c0"/>
        <function-ref name="isInput" scoped="" ref="0x404581a0"/>
        <function-ref name="toggle" scoped="" ref="0x40458280"/>
        <function-ref name="isOutput" scoped="" ref="0x40458360"/>
        <function-ref name="get" scoped="" ref="0x40458440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458520"/>
        <function-ref name="set" scoped="" ref="0x40458600"/>
        <function-ref name="clr" scoped="" ref="0x404586e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x40465670" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x40465670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40465848"/>
        <function-ref name="isInput" scoped="" ref="0x40465928"/>
        <function-ref name="toggle" scoped="" ref="0x40465a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40465ae8"/>
        <function-ref name="get" scoped="" ref="0x40465bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40465ca8"/>
        <function-ref name="set" scoped="" ref="0x40465d88"/>
        <function-ref name="clr" scoped="" ref="0x40465e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40466ea8" loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40466ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4046f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4046f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4046f360"/>
        <function-ref name="get" scoped="" ref="0x4046f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046f520"/>
        <function-ref name="set" scoped="" ref="0x4046f600"/>
        <function-ref name="clr" scoped="" ref="0x4046f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4046c3d0" loc="94:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4046c3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046c5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4046c688"/>
        <function-ref name="toggle" scoped="" ref="0x4046c768"/>
        <function-ref name="isOutput" scoped="" ref="0x4046c848"/>
        <function-ref name="get" scoped="" ref="0x4046c928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ca08"/>
        <function-ref name="set" scoped="" ref="0x4046cae8"/>
        <function-ref name="clr" scoped="" ref="0x4046cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40464a98" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40464a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464c70"/>
        <function-ref name="isInput" scoped="" ref="0x40464d50"/>
        <function-ref name="toggle" scoped="" ref="0x40464e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40464f10"/>
        <function-ref name="get" scoped="" ref="0x40463010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404630f0"/>
        <function-ref name="set" scoped="" ref="0x404631d0"/>
        <function-ref name="clr" scoped="" ref="0x404632b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4044f010" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4044f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4044f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4044f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4044f488"/>
        <function-ref name="get" scoped="" ref="0x4044f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044f648"/>
        <function-ref name="set" scoped="" ref="0x4044f728"/>
        <function-ref name="clr" scoped="" ref="0x4044f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40453750" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40453750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40453928"/>
        <function-ref name="isInput" scoped="" ref="0x40453a08"/>
        <function-ref name="toggle" scoped="" ref="0x40453ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40453bc8"/>
        <function-ref name="get" scoped="" ref="0x40453ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453d88"/>
        <function-ref name="set" scoped="" ref="0x40453e68"/>
        <function-ref name="clr" scoped="" ref="0x40452010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4046eee8" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4046eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046d0e0"/>
        <function-ref name="isInput" scoped="" ref="0x4046d1c0"/>
        <function-ref name="toggle" scoped="" ref="0x4046d2a0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046d380"/>
        <function-ref name="get" scoped="" ref="0x4046d460"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046d540"/>
        <function-ref name="set" scoped="" ref="0x4046d620"/>
        <function-ref name="clr" scoped="" ref="0x4046d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40452c08" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40452c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40452de0"/>
        <function-ref name="isInput" scoped="" ref="0x40452ec0"/>
        <function-ref name="toggle" scoped="" ref="0x4045b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4045b0f0"/>
        <function-ref name="get" scoped="" ref="0x4045b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045b2b0"/>
        <function-ref name="set" scoped="" ref="0x4045b390"/>
        <function-ref name="clr" scoped="" ref="0x4045b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4045f2f0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4045f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4045f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4045f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f768"/>
        <function-ref name="get" scoped="" ref="0x4045f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f928"/>
        <function-ref name="set" scoped="" ref="0x4045fa08"/>
        <function-ref name="clr" scoped="" ref="0x4045fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404628e0" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404628e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40462ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40462b98"/>
        <function-ref name="toggle" scoped="" ref="0x40462c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40462d58"/>
        <function-ref name="get" scoped="" ref="0x40462e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40462f18"/>
        <function-ref name="set" scoped="" ref="0x40461010"/>
        <function-ref name="clr" scoped="" ref="0x404610f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40467a98" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40467a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40467c70"/>
        <function-ref name="isInput" scoped="" ref="0x40467d50"/>
        <function-ref name="toggle" scoped="" ref="0x40467e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40467f10"/>
        <function-ref name="get" scoped="" ref="0x40466010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404660f0"/>
        <function-ref name="set" scoped="" ref="0x404661d0"/>
        <function-ref name="clr" scoped="" ref="0x404662b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4044eea8" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4044eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044d0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4044d1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4044d280"/>
        <function-ref name="isOutput" scoped="" ref="0x4044d360"/>
        <function-ref name="get" scoped="" ref="0x4044d440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044d520"/>
        <function-ref name="set" scoped="" ref="0x4044d600"/>
        <function-ref name="clr" scoped="" ref="0x4044d6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404562f0" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404562f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404564c8"/>
        <function-ref name="isInput" scoped="" ref="0x404565a8"/>
        <function-ref name="toggle" scoped="" ref="0x40456688"/>
        <function-ref name="isOutput" scoped="" ref="0x40456768"/>
        <function-ref name="get" scoped="" ref="0x40456848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40456928"/>
        <function-ref name="set" scoped="" ref="0x40456a08"/>
        <function-ref name="clr" scoped="" ref="0x40456ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4045aa98" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4045aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4045ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4045ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4045af10"/>
        <function-ref name="get" scoped="" ref="0x40459010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404590f0"/>
        <function-ref name="set" scoped="" ref="0x404591d0"/>
        <function-ref name="clr" scoped="" ref="0x404592b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4045c210" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4045c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4045c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4045c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045c688"/>
        <function-ref name="get" scoped="" ref="0x4045c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045c848"/>
        <function-ref name="set" scoped="" ref="0x4045c928"/>
        <function-ref name="clr" scoped="" ref="0x4045ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4046a750" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4046a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046a928"/>
        <function-ref name="isInput" scoped="" ref="0x4046aa08"/>
        <function-ref name="toggle" scoped="" ref="0x4046aae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4046abc8"/>
        <function-ref name="get" scoped="" ref="0x4046aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ad88"/>
        <function-ref name="set" scoped="" ref="0x4046ae68"/>
        <function-ref name="clr" scoped="" ref="0x40469010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40451b30" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40451b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40451d08"/>
        <function-ref name="isInput" scoped="" ref="0x40451de8"/>
        <function-ref name="toggle" scoped="" ref="0x40451ec8"/>
        <function-ref name="isOutput" scoped="" ref="0x40450010"/>
        <function-ref name="get" scoped="" ref="0x404500f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404501d0"/>
        <function-ref name="set" scoped="" ref="0x404502b0"/>
        <function-ref name="clr" scoped="" ref="0x40450390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40454210" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40454210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454468"/>
        <function-ref name="isInput" scoped="" ref="0x40454548"/>
        <function-ref name="toggle" scoped="" ref="0x40454628"/>
        <function-ref name="isOutput" scoped="" ref="0x40454708"/>
        <function-ref name="get" scoped="" ref="0x404547e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404548c8"/>
        <function-ref name="set" scoped="" ref="0x404549a8"/>
        <function-ref name="clr" scoped="" ref="0x40454a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404588e0" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404588e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40458ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40458b98"/>
        <function-ref name="toggle" scoped="" ref="0x40458c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40458d58"/>
        <function-ref name="get" scoped="" ref="0x40458e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40458f18"/>
        <function-ref name="set" scoped="" ref="0x40457010"/>
        <function-ref name="clr" scoped="" ref="0x404570f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4046f8e0" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4046f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4046fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4046fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4046fd58"/>
        <function-ref name="get" scoped="" ref="0x4046fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046ff18"/>
        <function-ref name="set" scoped="" ref="0x4046e010"/>
        <function-ref name="clr" scoped="" ref="0x4046e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40457ce8" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40457ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40460010"/>
        <function-ref name="isInput" scoped="" ref="0x404600f0"/>
        <function-ref name="toggle" scoped="" ref="0x404601d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404602b0"/>
        <function-ref name="get" scoped="" ref="0x40460390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40460470"/>
        <function-ref name="set" scoped="" ref="0x40460550"/>
        <function-ref name="clr" scoped="" ref="0x40460630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x404634b0" loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x404634b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40463688"/>
        <function-ref name="isInput" scoped="" ref="0x40463768"/>
        <function-ref name="toggle" scoped="" ref="0x40463848"/>
        <function-ref name="isOutput" scoped="" ref="0x40463928"/>
        <function-ref name="get" scoped="" ref="0x40463a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40463ae8"/>
        <function-ref name="set" scoped="" ref="0x40463bc8"/>
        <function-ref name="clr" scoped="" ref="0x40463ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40468670" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40468670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40468848"/>
        <function-ref name="isInput" scoped="" ref="0x40468928"/>
        <function-ref name="toggle" scoped="" ref="0x40468a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40468ae8"/>
        <function-ref name="get" scoped="" ref="0x40468bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40468ca8"/>
        <function-ref name="set" scoped="" ref="0x40468d88"/>
        <function-ref name="clr" scoped="" ref="0x40468e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4046cdc8" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4046cdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046b010"/>
        <function-ref name="isInput" scoped="" ref="0x4046b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4046b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4046b2b0"/>
        <function-ref name="get" scoped="" ref="0x4046b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046b470"/>
        <function-ref name="set" scoped="" ref="0x4046b550"/>
        <function-ref name="clr" scoped="" ref="0x4046b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4044fa08" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4044fa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4044fbe0"/>
        <function-ref name="isInput" scoped="" ref="0x4044fcc0"/>
        <function-ref name="toggle" scoped="" ref="0x4044fda0"/>
        <function-ref name="isOutput" scoped="" ref="0x4044fe80"/>
        <function-ref name="get" scoped="" ref="0x4044e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4044e0f0"/>
        <function-ref name="set" scoped="" ref="0x4044e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4044e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40452210" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40452210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404523e8"/>
        <function-ref name="isInput" scoped="" ref="0x404524c8"/>
        <function-ref name="toggle" scoped="" ref="0x404525a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40452688"/>
        <function-ref name="get" scoped="" ref="0x40452768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40452848"/>
        <function-ref name="set" scoped="" ref="0x40452928"/>
        <function-ref name="clr" scoped="" ref="0x40452a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40469210" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40469210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404693e8"/>
        <function-ref name="isInput" scoped="" ref="0x404694c8"/>
        <function-ref name="toggle" scoped="" ref="0x404695a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40469688"/>
        <function-ref name="get" scoped="" ref="0x40469768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40469848"/>
        <function-ref name="set" scoped="" ref="0x40469928"/>
        <function-ref name="clr" scoped="" ref="0x40469a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4045b670" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4045b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045b848"/>
        <function-ref name="isInput" scoped="" ref="0x4045b928"/>
        <function-ref name="toggle" scoped="" ref="0x4045ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4045bae8"/>
        <function-ref name="get" scoped="" ref="0x4045bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045bca8"/>
        <function-ref name="set" scoped="" ref="0x4045bd88"/>
        <function-ref name="clr" scoped="" ref="0x4045be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4045fce8" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4045fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4045d010"/>
        <function-ref name="toggle" scoped="" ref="0x4045d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4045d1d0"/>
        <function-ref name="get" scoped="" ref="0x4045d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045d390"/>
        <function-ref name="set" scoped="" ref="0x4045d470"/>
        <function-ref name="clr" scoped="" ref="0x4045d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x404612f0" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x404612f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404614c8"/>
        <function-ref name="isInput" scoped="" ref="0x404615a8"/>
        <function-ref name="toggle" scoped="" ref="0x40461688"/>
        <function-ref name="isOutput" scoped="" ref="0x40461768"/>
        <function-ref name="get" scoped="" ref="0x40461848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40461928"/>
        <function-ref name="set" scoped="" ref="0x40461a08"/>
        <function-ref name="clr" scoped="" ref="0x40461ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x404664b0" loc="87:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x404664b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40466688"/>
        <function-ref name="isInput" scoped="" ref="0x40466768"/>
        <function-ref name="toggle" scoped="" ref="0x40466848"/>
        <function-ref name="isOutput" scoped="" ref="0x40466928"/>
        <function-ref name="get" scoped="" ref="0x40466a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40466ae8"/>
        <function-ref name="set" scoped="" ref="0x40466bc8"/>
        <function-ref name="clr" scoped="" ref="0x40466ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40447730" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40447730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40447908"/>
        <function-ref name="isInput" scoped="" ref="0x404479e8"/>
        <function-ref name="toggle" scoped="" ref="0x40447ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x40447ba8"/>
        <function-ref name="get" scoped="" ref="0x40447c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40447d68"/>
        <function-ref name="set" scoped="" ref="0x40447e48"/>
        <function-ref name="clr" scoped="" ref="0x40447f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40456ce8" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40456ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40456ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40455010"/>
        <function-ref name="toggle" scoped="" ref="0x404550f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404551d0"/>
        <function-ref name="get" scoped="" ref="0x404552b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40455390"/>
        <function-ref name="set" scoped="" ref="0x40455470"/>
        <function-ref name="clr" scoped="" ref="0x40455550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404594b0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404594b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40459688"/>
        <function-ref name="isInput" scoped="" ref="0x40459768"/>
        <function-ref name="toggle" scoped="" ref="0x40459848"/>
        <function-ref name="isOutput" scoped="" ref="0x40459928"/>
        <function-ref name="get" scoped="" ref="0x40459a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459ae8"/>
        <function-ref name="set" scoped="" ref="0x40459bc8"/>
        <function-ref name="clr" scoped="" ref="0x40459ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4045cc08" loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4045cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4045cec0"/>
        <function-ref name="toggle" scoped="" ref="0x40465010"/>
        <function-ref name="isOutput" scoped="" ref="0x404650f0"/>
        <function-ref name="get" scoped="" ref="0x404651d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404652b0"/>
        <function-ref name="set" scoped="" ref="0x40465390"/>
        <function-ref name="clr" scoped="" ref="0x40465470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4046d900" loc="93:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4046d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4046dad8"/>
        <function-ref name="isInput" scoped="" ref="0x4046dbb8"/>
        <function-ref name="toggle" scoped="" ref="0x4046dc98"/>
        <function-ref name="isOutput" scoped="" ref="0x4046dd78"/>
        <function-ref name="get" scoped="" ref="0x4046de58"/>
        <function-ref name="makeOutput" scoped="" ref="0x4046c010"/>
        <function-ref name="set" scoped="" ref="0x4046c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4046c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x404640a0" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x404640a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40464278"/>
        <function-ref name="isInput" scoped="" ref="0x40464358"/>
        <function-ref name="toggle" scoped="" ref="0x40464438"/>
        <function-ref name="isOutput" scoped="" ref="0x40464518"/>
        <function-ref name="get" scoped="" ref="0x404645f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404646d8"/>
        <function-ref name="set" scoped="" ref="0x404647b8"/>
        <function-ref name="clr" scoped="" ref="0x40464898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404572f0" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404572f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404574c8"/>
        <function-ref name="isInput" scoped="" ref="0x404575a8"/>
        <function-ref name="toggle" scoped="" ref="0x40457688"/>
        <function-ref name="isOutput" scoped="" ref="0x40457768"/>
        <function-ref name="get" scoped="" ref="0x40457848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40457928"/>
        <function-ref name="set" scoped="" ref="0x40457a08"/>
        <function-ref name="clr" scoped="" ref="0x40457ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40450590" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40450590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40450768"/>
        <function-ref name="isInput" scoped="" ref="0x40450848"/>
        <function-ref name="toggle" scoped="" ref="0x40450928"/>
        <function-ref name="isOutput" scoped="" ref="0x40450a08"/>
        <function-ref name="get" scoped="" ref="0x40450ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40450bc8"/>
        <function-ref name="set" scoped="" ref="0x40450ca8"/>
        <function-ref name="clr" scoped="" ref="0x40450d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40454c88" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40454c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40454e60"/>
        <function-ref name="isInput" scoped="" ref="0x40453010"/>
        <function-ref name="toggle" scoped="" ref="0x404530f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404531d0"/>
        <function-ref name="get" scoped="" ref="0x404532b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40453390"/>
        <function-ref name="set" scoped="" ref="0x40453470"/>
        <function-ref name="clr" scoped="" ref="0x40453550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4049d330" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4049d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049d508"/>
        <function-ref name="isInput" scoped="" ref="0x4049d5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4049d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049d7a8"/>
        <function-ref name="get" scoped="" ref="0x4049d888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d968"/>
        <function-ref name="set" scoped="" ref="0x4049da48"/>
        <function-ref name="clr" scoped="" ref="0x4049db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4049b030" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4049b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049b208"/>
        <function-ref name="isInput" scoped="" ref="0x4049b2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4049b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049b4a8"/>
        <function-ref name="get" scoped="" ref="0x4049b588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049b668"/>
        <function-ref name="set" scoped="" ref="0x4049b748"/>
        <function-ref name="clr" scoped="" ref="0x4049b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40492010" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40492010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404921e8"/>
        <function-ref name="isInput" scoped="" ref="0x404922c8"/>
        <function-ref name="toggle" scoped="" ref="0x404923a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40492488"/>
        <function-ref name="get" scoped="" ref="0x40492568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40492648"/>
        <function-ref name="set" scoped="" ref="0x40492728"/>
        <function-ref name="clr" scoped="" ref="0x40492808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4049dc88" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4049dc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049de60"/>
        <function-ref name="isInput" scoped="" ref="0x4049c010"/>
        <function-ref name="toggle" scoped="" ref="0x4049c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c1d0"/>
        <function-ref name="get" scoped="" ref="0x4049c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c390"/>
        <function-ref name="set" scoped="" ref="0x4049c470"/>
        <function-ref name="clr" scoped="" ref="0x4049c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4049b988" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4049b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049bb60"/>
        <function-ref name="isInput" scoped="" ref="0x4049bc40"/>
        <function-ref name="toggle" scoped="" ref="0x4049bd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4049be00"/>
        <function-ref name="get" scoped="" ref="0x4049bee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049a010"/>
        <function-ref name="set" scoped="" ref="0x4049a0f0"/>
        <function-ref name="clr" scoped="" ref="0x4049a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40492968" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40492968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40492b40"/>
        <function-ref name="isInput" scoped="" ref="0x40492c20"/>
        <function-ref name="toggle" scoped="" ref="0x40492d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40492de0"/>
        <function-ref name="get" scoped="" ref="0x40492ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049d010"/>
        <function-ref name="set" scoped="" ref="0x4049d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4049d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4049c6b0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4049c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c888"/>
        <function-ref name="isInput" scoped="" ref="0x4049c968"/>
        <function-ref name="toggle" scoped="" ref="0x4049ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4049cb28"/>
        <function-ref name="get" scoped="" ref="0x4049cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049cce8"/>
        <function-ref name="set" scoped="" ref="0x4049cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4049cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4049a330" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4049a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049a508"/>
        <function-ref name="isInput" scoped="" ref="0x4049a5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4049a6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049a7a8"/>
        <function-ref name="get" scoped="" ref="0x4049a888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049a968"/>
        <function-ref name="set" scoped="" ref="0x4049aa48"/>
        <function-ref name="clr" scoped="" ref="0x4049ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e8c6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e8c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8c898"/>
        <function-ref name="isInput" scoped="" ref="0x40e8c978"/>
        <function-ref name="toggle" scoped="" ref="0x40e8ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8cb38"/>
        <function-ref name="get" scoped="" ref="0x40e8cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8ccf8"/>
        <function-ref name="set" scoped="" ref="0x40e8cdd8"/>
        <function-ref name="clr" scoped="" ref="0x40e8ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e8a0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e8a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e8a288"/>
        <function-ref name="isInput" scoped="" ref="0x40e8a368"/>
        <function-ref name="toggle" scoped="" ref="0x40e8a448"/>
        <function-ref name="isOutput" scoped="" ref="0x40e8a528"/>
        <function-ref name="get" scoped="" ref="0x40e8a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e8a6e8"/>
        <function-ref name="set" scoped="" ref="0x40e8a7c8"/>
        <function-ref name="clr" scoped="" ref="0x40e8a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e89a88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e89a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e89c60"/>
        <function-ref name="isInput" scoped="" ref="0x40e89d40"/>
        <function-ref name="toggle" scoped="" ref="0x40e89e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40e89f00"/>
        <function-ref name="get" scoped="" ref="0x40e88010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e880f0"/>
        <function-ref name="set" scoped="" ref="0x40e881d0"/>
        <function-ref name="clr" scoped="" ref="0x40e882b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e87538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e87538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e87710"/>
        <function-ref name="isInput" scoped="" ref="0x40e877f0"/>
        <function-ref name="toggle" scoped="" ref="0x40e878d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40e879b0"/>
        <function-ref name="get" scoped="" ref="0x40e87a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e87b70"/>
        <function-ref name="set" scoped="" ref="0x40e87c50"/>
        <function-ref name="clr" scoped="" ref="0x40e87d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e85010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e85010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e851e8"/>
        <function-ref name="isInput" scoped="" ref="0x40e852c8"/>
        <function-ref name="toggle" scoped="" ref="0x40e853a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40e85488"/>
        <function-ref name="get" scoped="" ref="0x40e85568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e85648"/>
        <function-ref name="set" scoped="" ref="0x40e85728"/>
        <function-ref name="clr" scoped="" ref="0x40e85808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40e849e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40e849e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40e84bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40e84ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40e84d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40e84e60"/>
        <function-ref name="get" scoped="" ref="0x40e83010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40e830f0"/>
        <function-ref name="set" scoped="" ref="0x40e831d0"/>
        <function-ref name="clr" scoped="" ref="0x40e832b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ebb538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ebb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ebb710"/>
        <function-ref name="isInput" scoped="" ref="0x40ebb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ebb8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ebb9b0"/>
        <function-ref name="get" scoped="" ref="0x40ebba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ebbb70"/>
        <function-ref name="set" scoped="" ref="0x40ebbc50"/>
        <function-ref name="clr" scoped="" ref="0x40ebbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eb9010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eb9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eb91e8"/>
        <function-ref name="isInput" scoped="" ref="0x40eb92c8"/>
        <function-ref name="toggle" scoped="" ref="0x40eb93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40eb9488"/>
        <function-ref name="get" scoped="" ref="0x40eb9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eb9648"/>
        <function-ref name="set" scoped="" ref="0x40eb9728"/>
        <function-ref name="clr" scoped="" ref="0x40eb9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a1ba8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a1ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1d80"/>
        <function-ref name="isInput" scoped="" ref="0x404a1e60"/>
        <function-ref name="toggle" scoped="" ref="0x404a0010"/>
        <function-ref name="isOutput" scoped="" ref="0x404a00f0"/>
        <function-ref name="get" scoped="" ref="0x404a01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a02b0"/>
        <function-ref name="set" scoped="" ref="0x404a0390"/>
        <function-ref name="clr" scoped="" ref="0x404a0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4049f890" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4049f890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049fa68"/>
        <function-ref name="isInput" scoped="" ref="0x4049fb48"/>
        <function-ref name="toggle" scoped="" ref="0x4049fc28"/>
        <function-ref name="isOutput" scoped="" ref="0x4049fd08"/>
        <function-ref name="get" scoped="" ref="0x4049fde8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049fec8"/>
        <function-ref name="set" scoped="" ref="0x4049e010"/>
        <function-ref name="clr" scoped="" ref="0x4049e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a2888" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a2888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a2a60"/>
        <function-ref name="isInput" scoped="" ref="0x404a2b40"/>
        <function-ref name="toggle" scoped="" ref="0x404a2c20"/>
        <function-ref name="isOutput" scoped="" ref="0x404a2d00"/>
        <function-ref name="get" scoped="" ref="0x404a2de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a2ec0"/>
        <function-ref name="set" scoped="" ref="0x404a1010"/>
        <function-ref name="clr" scoped="" ref="0x404a10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a05d0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a05d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a07a8"/>
        <function-ref name="isInput" scoped="" ref="0x404a0888"/>
        <function-ref name="toggle" scoped="" ref="0x404a0968"/>
        <function-ref name="isOutput" scoped="" ref="0x404a0a48"/>
        <function-ref name="get" scoped="" ref="0x404a0b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a0c08"/>
        <function-ref name="set" scoped="" ref="0x404a0ce8"/>
        <function-ref name="clr" scoped="" ref="0x404a0dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4049e250" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4049e250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049e428"/>
        <function-ref name="isInput" scoped="" ref="0x4049e508"/>
        <function-ref name="toggle" scoped="" ref="0x4049e5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4049e6c8"/>
        <function-ref name="get" scoped="" ref="0x4049e7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049e888"/>
        <function-ref name="set" scoped="" ref="0x4049e968"/>
        <function-ref name="clr" scoped="" ref="0x4049ea48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a1250" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a1250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a1428"/>
        <function-ref name="isInput" scoped="" ref="0x404a1508"/>
        <function-ref name="toggle" scoped="" ref="0x404a15e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404a16c8"/>
        <function-ref name="get" scoped="" ref="0x404a17a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a1888"/>
        <function-ref name="set" scoped="" ref="0x404a1968"/>
        <function-ref name="clr" scoped="" ref="0x404a1a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404a0f28" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404a0f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049f110"/>
        <function-ref name="isInput" scoped="" ref="0x4049f1f0"/>
        <function-ref name="toggle" scoped="" ref="0x4049f2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4049f3b0"/>
        <function-ref name="get" scoped="" ref="0x4049f490"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049f570"/>
        <function-ref name="set" scoped="" ref="0x4049f650"/>
        <function-ref name="clr" scoped="" ref="0x4049f730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4049eba8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4049eba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049ed80"/>
        <function-ref name="isInput" scoped="" ref="0x4049ee60"/>
        <function-ref name="toggle" scoped="" ref="0x404a9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404a90f0"/>
        <function-ref name="get" scoped="" ref="0x404a91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a92b0"/>
        <function-ref name="set" scoped="" ref="0x404a9390"/>
        <function-ref name="clr" scoped="" ref="0x404a9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ec0418" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ec0418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ec05f0"/>
        <function-ref name="isInput" scoped="" ref="0x40ec06d0"/>
        <function-ref name="toggle" scoped="" ref="0x40ec07b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ec0890"/>
        <function-ref name="get" scoped="" ref="0x40ec0970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ec0a50"/>
        <function-ref name="set" scoped="" ref="0x40ec0b30"/>
        <function-ref name="clr" scoped="" ref="0x40ec0c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ebfde0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ebfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ebe010"/>
        <function-ref name="isInput" scoped="" ref="0x40ebe0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ebe1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ebe2b0"/>
        <function-ref name="get" scoped="" ref="0x40ebe390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ebe470"/>
        <function-ref name="set" scoped="" ref="0x40ebe550"/>
        <function-ref name="clr" scoped="" ref="0x40ebe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ebd7f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ebd7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ebd9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40ebdab0"/>
        <function-ref name="toggle" scoped="" ref="0x40ebdb90"/>
        <function-ref name="isOutput" scoped="" ref="0x40ebdc70"/>
        <function-ref name="get" scoped="" ref="0x40ebdd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ebde30"/>
        <function-ref name="set" scoped="" ref="0x40ebdf10"/>
        <function-ref name="clr" scoped="" ref="0x40ebc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eef228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eef228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eef400"/>
        <function-ref name="isInput" scoped="" ref="0x40eef4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40eef5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40eef6a0"/>
        <function-ref name="get" scoped="" ref="0x40eef780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eef860"/>
        <function-ref name="set" scoped="" ref="0x40eef940"/>
        <function-ref name="clr" scoped="" ref="0x40eefa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eeec08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eeec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eeede0"/>
        <function-ref name="isInput" scoped="" ref="0x40eeeec0"/>
        <function-ref name="toggle" scoped="" ref="0x40eed010"/>
        <function-ref name="isOutput" scoped="" ref="0x40eed0f0"/>
        <function-ref name="get" scoped="" ref="0x40eed1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eed2b0"/>
        <function-ref name="set" scoped="" ref="0x40eed390"/>
        <function-ref name="clr" scoped="" ref="0x40eed470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eec6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eec6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eec898"/>
        <function-ref name="isInput" scoped="" ref="0x40eec978"/>
        <function-ref name="toggle" scoped="" ref="0x40eeca58"/>
        <function-ref name="isOutput" scoped="" ref="0x40eecb38"/>
        <function-ref name="get" scoped="" ref="0x40eecc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eeccf8"/>
        <function-ref name="set" scoped="" ref="0x40eecdd8"/>
        <function-ref name="clr" scoped="" ref="0x40eeceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40eea0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40eea0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40eea288"/>
        <function-ref name="isInput" scoped="" ref="0x40eea368"/>
        <function-ref name="toggle" scoped="" ref="0x40eea448"/>
        <function-ref name="isOutput" scoped="" ref="0x40eea528"/>
        <function-ref name="get" scoped="" ref="0x40eea608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40eea6e8"/>
        <function-ref name="set" scoped="" ref="0x40eea7c8"/>
        <function-ref name="clr" scoped="" ref="0x40eea8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ee9a88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ee9a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ee9c60"/>
        <function-ref name="isInput" scoped="" ref="0x40ee9d40"/>
        <function-ref name="toggle" scoped="" ref="0x40ee9e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40ee9f00"/>
        <function-ref name="get" scoped="" ref="0x40ee8010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ee80f0"/>
        <function-ref name="set" scoped="" ref="0x40ee81d0"/>
        <function-ref name="clr" scoped="" ref="0x40ee82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404a44f0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404a44f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a46c8"/>
        <function-ref name="isInput" scoped="" ref="0x404a47a8"/>
        <function-ref name="toggle" scoped="" ref="0x404a4888"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4968"/>
        <function-ref name="get" scoped="" ref="0x404a4a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a4b28"/>
        <function-ref name="set" scoped="" ref="0x404a4c08"/>
        <function-ref name="clr" scoped="" ref="0x404a4ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404ae170" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404ae170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ae348"/>
        <function-ref name="isInput" scoped="" ref="0x404ae428"/>
        <function-ref name="toggle" scoped="" ref="0x404ae508"/>
        <function-ref name="isOutput" scoped="" ref="0x404ae5e8"/>
        <function-ref name="get" scoped="" ref="0x404ae6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ae7a8"/>
        <function-ref name="set" scoped="" ref="0x404ae888"/>
        <function-ref name="clr" scoped="" ref="0x404ae968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404a5228" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404a5228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5400"/>
        <function-ref name="isInput" scoped="" ref="0x404a54e0"/>
        <function-ref name="toggle" scoped="" ref="0x404a55c0"/>
        <function-ref name="isOutput" scoped="" ref="0x404a56a0"/>
        <function-ref name="get" scoped="" ref="0x404a5780"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a5860"/>
        <function-ref name="set" scoped="" ref="0x404a5940"/>
        <function-ref name="clr" scoped="" ref="0x404a5a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404a4e48" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404a4e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af050"/>
        <function-ref name="isInput" scoped="" ref="0x404af130"/>
        <function-ref name="toggle" scoped="" ref="0x404af210"/>
        <function-ref name="isOutput" scoped="" ref="0x404af2f0"/>
        <function-ref name="get" scoped="" ref="0x404af3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404af4b0"/>
        <function-ref name="set" scoped="" ref="0x404af590"/>
        <function-ref name="clr" scoped="" ref="0x404af670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404aeac8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404aeac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aeca0"/>
        <function-ref name="isInput" scoped="" ref="0x404aed80"/>
        <function-ref name="toggle" scoped="" ref="0x404aee60"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad010"/>
        <function-ref name="get" scoped="" ref="0x404ad0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ad1d0"/>
        <function-ref name="set" scoped="" ref="0x404ad2b0"/>
        <function-ref name="clr" scoped="" ref="0x404ad390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404a5b80" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404a5b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a5d58"/>
        <function-ref name="isInput" scoped="" ref="0x404a5e38"/>
        <function-ref name="toggle" scoped="" ref="0x404a5f18"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4010"/>
        <function-ref name="get" scoped="" ref="0x404a40f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a41d0"/>
        <function-ref name="set" scoped="" ref="0x404a42b0"/>
        <function-ref name="clr" scoped="" ref="0x404a4390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404af7d0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404af7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404af9a8"/>
        <function-ref name="isInput" scoped="" ref="0x404afa88"/>
        <function-ref name="toggle" scoped="" ref="0x404afb68"/>
        <function-ref name="isOutput" scoped="" ref="0x404afc48"/>
        <function-ref name="get" scoped="" ref="0x404afd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404afe08"/>
        <function-ref name="set" scoped="" ref="0x404afee8"/>
        <function-ref name="clr" scoped="" ref="0x404ae010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404ad4f0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404ad4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ad6c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ad7a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ad888"/>
        <function-ref name="isOutput" scoped="" ref="0x404ad968"/>
        <function-ref name="get" scoped="" ref="0x404ada48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404adb28"/>
        <function-ref name="set" scoped="" ref="0x404adc08"/>
        <function-ref name="clr" scoped="" ref="0x404adce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ef4de8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ef4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ef0010"/>
        <function-ref name="isInput" scoped="" ref="0x40ef00f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ef01d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ef02b0"/>
        <function-ref name="get" scoped="" ref="0x40ef0390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ef0470"/>
        <function-ref name="set" scoped="" ref="0x40ef0550"/>
        <function-ref name="clr" scoped="" ref="0x40ef0630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f247f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f247f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f249d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f24ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f24b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f24c70"/>
        <function-ref name="get" scoped="" ref="0x40f24d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f24e30"/>
        <function-ref name="set" scoped="" ref="0x40f24f10"/>
        <function-ref name="clr" scoped="" ref="0x40f23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f22228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f22228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f22400"/>
        <function-ref name="isInput" scoped="" ref="0x40f224e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f225c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f226a0"/>
        <function-ref name="get" scoped="" ref="0x40f22780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f22860"/>
        <function-ref name="set" scoped="" ref="0x40f22940"/>
        <function-ref name="clr" scoped="" ref="0x40f22a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f21c08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f21c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f21de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f21ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f20010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f200f0"/>
        <function-ref name="get" scoped="" ref="0x40f201d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f202b0"/>
        <function-ref name="set" scoped="" ref="0x40f20390"/>
        <function-ref name="clr" scoped="" ref="0x40f20470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1f6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1f898"/>
        <function-ref name="isInput" scoped="" ref="0x40f1f978"/>
        <function-ref name="toggle" scoped="" ref="0x40f1fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1fb38"/>
        <function-ref name="get" scoped="" ref="0x40f1fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1fcf8"/>
        <function-ref name="set" scoped="" ref="0x40f1fdd8"/>
        <function-ref name="clr" scoped="" ref="0x40f1feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1d0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1d288"/>
        <function-ref name="isInput" scoped="" ref="0x40f1d368"/>
        <function-ref name="toggle" scoped="" ref="0x40f1d448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1d528"/>
        <function-ref name="get" scoped="" ref="0x40f1d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1d6e8"/>
        <function-ref name="set" scoped="" ref="0x40f1d7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f1d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1ca88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1ca88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1cc60"/>
        <function-ref name="isInput" scoped="" ref="0x40f1cd40"/>
        <function-ref name="toggle" scoped="" ref="0x40f1ce20"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1cf00"/>
        <function-ref name="get" scoped="" ref="0x40f1b010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1b0f0"/>
        <function-ref name="set" scoped="" ref="0x40f1b1d0"/>
        <function-ref name="clr" scoped="" ref="0x40f1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f1a538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f1a538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f1a710"/>
        <function-ref name="isInput" scoped="" ref="0x40f1a7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f1a8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f1a9b0"/>
        <function-ref name="get" scoped="" ref="0x40f1aa90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f1ab70"/>
        <function-ref name="set" scoped="" ref="0x40f1ac50"/>
        <function-ref name="clr" scoped="" ref="0x40f1ad30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b5e48" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b5e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b3050"/>
        <function-ref name="isInput" scoped="" ref="0x404b3130"/>
        <function-ref name="toggle" scoped="" ref="0x404b3210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b32f0"/>
        <function-ref name="get" scoped="" ref="0x404b33d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b34b0"/>
        <function-ref name="set" scoped="" ref="0x404b3590"/>
        <function-ref name="clr" scoped="" ref="0x404b3670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404b2ac8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404b2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2ca0"/>
        <function-ref name="isInput" scoped="" ref="0x404b2d80"/>
        <function-ref name="toggle" scoped="" ref="0x404b2e60"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1010"/>
        <function-ref name="get" scoped="" ref="0x404b10f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b11d0"/>
        <function-ref name="set" scoped="" ref="0x404b12b0"/>
        <function-ref name="clr" scoped="" ref="0x404b1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404aab00" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404aab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404aacd8"/>
        <function-ref name="isInput" scoped="" ref="0x404aadb8"/>
        <function-ref name="toggle" scoped="" ref="0x404aae98"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5010"/>
        <function-ref name="get" scoped="" ref="0x404b50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b51d0"/>
        <function-ref name="set" scoped="" ref="0x404b52b0"/>
        <function-ref name="clr" scoped="" ref="0x404b5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b37d0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b37d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b39a8"/>
        <function-ref name="isInput" scoped="" ref="0x404b3a88"/>
        <function-ref name="toggle" scoped="" ref="0x404b3b68"/>
        <function-ref name="isOutput" scoped="" ref="0x404b3c48"/>
        <function-ref name="get" scoped="" ref="0x404b3d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b3e08"/>
        <function-ref name="set" scoped="" ref="0x404b3ee8"/>
        <function-ref name="clr" scoped="" ref="0x404b2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404b14f0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404b14f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b16c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b17a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b1888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b1968"/>
        <function-ref name="get" scoped="" ref="0x404b1a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b1b28"/>
        <function-ref name="set" scoped="" ref="0x404b1c08"/>
        <function-ref name="clr" scoped="" ref="0x404b1ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b54f0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b56c8"/>
        <function-ref name="isInput" scoped="" ref="0x404b57a8"/>
        <function-ref name="toggle" scoped="" ref="0x404b5888"/>
        <function-ref name="isOutput" scoped="" ref="0x404b5968"/>
        <function-ref name="get" scoped="" ref="0x404b5a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b5b28"/>
        <function-ref name="set" scoped="" ref="0x404b5c08"/>
        <function-ref name="clr" scoped="" ref="0x404b5ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b2170" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b2348"/>
        <function-ref name="isInput" scoped="" ref="0x404b2428"/>
        <function-ref name="toggle" scoped="" ref="0x404b2508"/>
        <function-ref name="isOutput" scoped="" ref="0x404b25e8"/>
        <function-ref name="get" scoped="" ref="0x404b26c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b27a8"/>
        <function-ref name="set" scoped="" ref="0x404b2888"/>
        <function-ref name="clr" scoped="" ref="0x404b2968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404b1e48" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404b1e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b0050"/>
        <function-ref name="isInput" scoped="" ref="0x404b0130"/>
        <function-ref name="toggle" scoped="" ref="0x404b0210"/>
        <function-ref name="isOutput" scoped="" ref="0x404b02f0"/>
        <function-ref name="get" scoped="" ref="0x404b03d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b04b0"/>
        <function-ref name="set" scoped="" ref="0x404b0590"/>
        <function-ref name="clr" scoped="" ref="0x404b0670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f59938" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f59938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f59b10"/>
        <function-ref name="isInput" scoped="" ref="0x40f59bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40f59cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f59db0"/>
        <function-ref name="get" scoped="" ref="0x40f59e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f58010"/>
        <function-ref name="set" scoped="" ref="0x40f580f0"/>
        <function-ref name="clr" scoped="" ref="0x40f581d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f573b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f573b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f57588"/>
        <function-ref name="isInput" scoped="" ref="0x40f57668"/>
        <function-ref name="toggle" scoped="" ref="0x40f57748"/>
        <function-ref name="isOutput" scoped="" ref="0x40f57828"/>
        <function-ref name="get" scoped="" ref="0x40f57908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f579e8"/>
        <function-ref name="set" scoped="" ref="0x40f57ac8"/>
        <function-ref name="clr" scoped="" ref="0x40f57ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f56d70" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f56d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f55010"/>
        <function-ref name="isInput" scoped="" ref="0x40f550f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f551d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f552b0"/>
        <function-ref name="get" scoped="" ref="0x40f55390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f55470"/>
        <function-ref name="set" scoped="" ref="0x40f55550"/>
        <function-ref name="clr" scoped="" ref="0x40f55630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f547f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f547f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f549d0"/>
        <function-ref name="isInput" scoped="" ref="0x40f54ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40f54b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40f54c70"/>
        <function-ref name="get" scoped="" ref="0x40f54d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f54e30"/>
        <function-ref name="set" scoped="" ref="0x40f54f10"/>
        <function-ref name="clr" scoped="" ref="0x40f53010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f52228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f52228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f52400"/>
        <function-ref name="isInput" scoped="" ref="0x40f524e0"/>
        <function-ref name="toggle" scoped="" ref="0x40f525c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f526a0"/>
        <function-ref name="get" scoped="" ref="0x40f52780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f52860"/>
        <function-ref name="set" scoped="" ref="0x40f52940"/>
        <function-ref name="clr" scoped="" ref="0x40f52a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f51c08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f51c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f51de0"/>
        <function-ref name="isInput" scoped="" ref="0x40f51ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40f50010"/>
        <function-ref name="isOutput" scoped="" ref="0x40f500f0"/>
        <function-ref name="get" scoped="" ref="0x40f501d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f502b0"/>
        <function-ref name="set" scoped="" ref="0x40f50390"/>
        <function-ref name="clr" scoped="" ref="0x40f50470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f4f6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f4f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f4f898"/>
        <function-ref name="isInput" scoped="" ref="0x40f4f978"/>
        <function-ref name="toggle" scoped="" ref="0x40f4fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4fb38"/>
        <function-ref name="get" scoped="" ref="0x40f4fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4fcf8"/>
        <function-ref name="set" scoped="" ref="0x40f4fdd8"/>
        <function-ref name="clr" scoped="" ref="0x40f4feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f4d0b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f4d0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f4d288"/>
        <function-ref name="isInput" scoped="" ref="0x40f4d368"/>
        <function-ref name="toggle" scoped="" ref="0x40f4d448"/>
        <function-ref name="isOutput" scoped="" ref="0x40f4d528"/>
        <function-ref name="get" scoped="" ref="0x40f4d608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f4d6e8"/>
        <function-ref name="set" scoped="" ref="0x40f4d7c8"/>
        <function-ref name="clr" scoped="" ref="0x40f4d8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404b86b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404b86b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b8888"/>
        <function-ref name="isInput" scoped="" ref="0x404b8968"/>
        <function-ref name="toggle" scoped="" ref="0x404b8a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404b8b28"/>
        <function-ref name="get" scoped="" ref="0x404b8c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8ce8"/>
        <function-ref name="set" scoped="" ref="0x404b8dc8"/>
        <function-ref name="clr" scoped="" ref="0x404b8ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404b6330" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404b6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6508"/>
        <function-ref name="isInput" scoped="" ref="0x404b65e8"/>
        <function-ref name="toggle" scoped="" ref="0x404b66c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b67a8"/>
        <function-ref name="get" scoped="" ref="0x404b6888"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6968"/>
        <function-ref name="set" scoped="" ref="0x404b6a48"/>
        <function-ref name="clr" scoped="" ref="0x404b6b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404b93d8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404b93d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b95b0"/>
        <function-ref name="isInput" scoped="" ref="0x404b9690"/>
        <function-ref name="toggle" scoped="" ref="0x404b9770"/>
        <function-ref name="isOutput" scoped="" ref="0x404b9850"/>
        <function-ref name="get" scoped="" ref="0x404b9930"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b9a10"/>
        <function-ref name="set" scoped="" ref="0x404b9af0"/>
        <function-ref name="clr" scoped="" ref="0x404b9bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404b7030" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404b7030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7208"/>
        <function-ref name="isInput" scoped="" ref="0x404b72e8"/>
        <function-ref name="toggle" scoped="" ref="0x404b73c8"/>
        <function-ref name="isOutput" scoped="" ref="0x404b74a8"/>
        <function-ref name="get" scoped="" ref="0x404b7588"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b7668"/>
        <function-ref name="set" scoped="" ref="0x404b7748"/>
        <function-ref name="clr" scoped="" ref="0x404b7828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404b6c88" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404b6c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b6e60"/>
        <function-ref name="isInput" scoped="" ref="0x404c1010"/>
        <function-ref name="toggle" scoped="" ref="0x404c10f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c11d0"/>
        <function-ref name="get" scoped="" ref="0x404c12b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1390"/>
        <function-ref name="set" scoped="" ref="0x404c1470"/>
        <function-ref name="clr" scoped="" ref="0x404c1550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404b9d30" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404b9d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b9f08"/>
        <function-ref name="isInput" scoped="" ref="0x404b8010"/>
        <function-ref name="toggle" scoped="" ref="0x404b80f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404b81d0"/>
        <function-ref name="get" scoped="" ref="0x404b82b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b8390"/>
        <function-ref name="set" scoped="" ref="0x404b8470"/>
        <function-ref name="clr" scoped="" ref="0x404b8550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404b7988" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404b7988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404b7b60"/>
        <function-ref name="isInput" scoped="" ref="0x404b7c40"/>
        <function-ref name="toggle" scoped="" ref="0x404b7d20"/>
        <function-ref name="isOutput" scoped="" ref="0x404b7e00"/>
        <function-ref name="get" scoped="" ref="0x404b7ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404b6010"/>
        <function-ref name="set" scoped="" ref="0x404b60f0"/>
        <function-ref name="clr" scoped="" ref="0x404b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c16b0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c16b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c1888"/>
        <function-ref name="isInput" scoped="" ref="0x404c1968"/>
        <function-ref name="toggle" scoped="" ref="0x404c1a48"/>
        <function-ref name="isOutput" scoped="" ref="0x404c1b28"/>
        <function-ref name="get" scoped="" ref="0x404c1c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c1ce8"/>
        <function-ref name="set" scoped="" ref="0x404c1dc8"/>
        <function-ref name="clr" scoped="" ref="0x404c1ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8d538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8d710"/>
        <function-ref name="isInput" scoped="" ref="0x40f8d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f8d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8d9b0"/>
        <function-ref name="get" scoped="" ref="0x40f8da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8db70"/>
        <function-ref name="set" scoped="" ref="0x40f8dc50"/>
        <function-ref name="clr" scoped="" ref="0x40f8dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8b010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f8b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f8b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8b488"/>
        <function-ref name="get" scoped="" ref="0x40f8b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f8b648"/>
        <function-ref name="set" scoped="" ref="0x40f8b728"/>
        <function-ref name="clr" scoped="" ref="0x40f8b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f8a9e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f8a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f8abc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f8aca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f8ad80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f8ae60"/>
        <function-ref name="get" scoped="" ref="0x40f89010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f890f0"/>
        <function-ref name="set" scoped="" ref="0x40f891d0"/>
        <function-ref name="clr" scoped="" ref="0x40f892b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f88538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f88538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f88710"/>
        <function-ref name="isInput" scoped="" ref="0x40f887f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f888d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f889b0"/>
        <function-ref name="get" scoped="" ref="0x40f88a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f88b70"/>
        <function-ref name="set" scoped="" ref="0x40f88c50"/>
        <function-ref name="clr" scoped="" ref="0x40f88d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f86010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f86010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f861e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f862c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f863a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f86488"/>
        <function-ref name="get" scoped="" ref="0x40f86568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f86648"/>
        <function-ref name="set" scoped="" ref="0x40f86728"/>
        <function-ref name="clr" scoped="" ref="0x40f86808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f859e8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f859e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f85bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40f85ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40f85d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40f85e60"/>
        <function-ref name="get" scoped="" ref="0x40f84010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f840f0"/>
        <function-ref name="set" scoped="" ref="0x40f841d0"/>
        <function-ref name="clr" scoped="" ref="0x40f842b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f83538" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f83538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f83710"/>
        <function-ref name="isInput" scoped="" ref="0x40f837f0"/>
        <function-ref name="toggle" scoped="" ref="0x40f838d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40f839b0"/>
        <function-ref name="get" scoped="" ref="0x40f83a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f83b70"/>
        <function-ref name="set" scoped="" ref="0x40f83c50"/>
        <function-ref name="clr" scoped="" ref="0x40f83d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40f80010" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40f80010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40f801e8"/>
        <function-ref name="isInput" scoped="" ref="0x40f802c8"/>
        <function-ref name="toggle" scoped="" ref="0x40f803a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40f80488"/>
        <function-ref name="get" scoped="" ref="0x40f80568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40f80648"/>
        <function-ref name="set" scoped="" ref="0x40f80728"/>
        <function-ref name="clr" scoped="" ref="0x40f80808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x404bcf28" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x404bcf28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7110"/>
        <function-ref name="isInput" scoped="" ref="0x404c71f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c72d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c73b0"/>
        <function-ref name="get" scoped="" ref="0x404c7490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7570"/>
        <function-ref name="set" scoped="" ref="0x404c7650"/>
        <function-ref name="clr" scoped="" ref="0x404c7730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x404c6ba8" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x404c6ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6d80"/>
        <function-ref name="isInput" scoped="" ref="0x404c6e60"/>
        <function-ref name="toggle" scoped="" ref="0x404c5010"/>
        <function-ref name="isOutput" scoped="" ref="0x404c50f0"/>
        <function-ref name="get" scoped="" ref="0x404c51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c52b0"/>
        <function-ref name="set" scoped="" ref="0x404c5390"/>
        <function-ref name="clr" scoped="" ref="0x404c5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x404bdc28" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x404bdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bde00"/>
        <function-ref name="isInput" scoped="" ref="0x404bdee0"/>
        <function-ref name="toggle" scoped="" ref="0x404bc010"/>
        <function-ref name="isOutput" scoped="" ref="0x404bc0f0"/>
        <function-ref name="get" scoped="" ref="0x404bc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bc2b0"/>
        <function-ref name="set" scoped="" ref="0x404bc390"/>
        <function-ref name="clr" scoped="" ref="0x404bc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x404c7890" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x404c7890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c7a68"/>
        <function-ref name="isInput" scoped="" ref="0x404c7b48"/>
        <function-ref name="toggle" scoped="" ref="0x404c7c28"/>
        <function-ref name="isOutput" scoped="" ref="0x404c7d08"/>
        <function-ref name="get" scoped="" ref="0x404c7de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c7ec8"/>
        <function-ref name="set" scoped="" ref="0x404c6010"/>
        <function-ref name="clr" scoped="" ref="0x404c60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x404c55d0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x404c55d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c57a8"/>
        <function-ref name="isInput" scoped="" ref="0x404c5888"/>
        <function-ref name="toggle" scoped="" ref="0x404c5968"/>
        <function-ref name="isOutput" scoped="" ref="0x404c5a48"/>
        <function-ref name="get" scoped="" ref="0x404c5b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c5c08"/>
        <function-ref name="set" scoped="" ref="0x404c5ce8"/>
        <function-ref name="clr" scoped="" ref="0x404c5dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x404bc5d0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x404bc5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404bc7a8"/>
        <function-ref name="isInput" scoped="" ref="0x404bc888"/>
        <function-ref name="toggle" scoped="" ref="0x404bc968"/>
        <function-ref name="isOutput" scoped="" ref="0x404bca48"/>
        <function-ref name="get" scoped="" ref="0x404bcb28"/>
        <function-ref name="makeOutput" scoped="" ref="0x404bcc08"/>
        <function-ref name="set" scoped="" ref="0x404bcce8"/>
        <function-ref name="clr" scoped="" ref="0x404bcdc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x404c6250" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x404c6250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c6428"/>
        <function-ref name="isInput" scoped="" ref="0x404c6508"/>
        <function-ref name="toggle" scoped="" ref="0x404c65e8"/>
        <function-ref name="isOutput" scoped="" ref="0x404c66c8"/>
        <function-ref name="get" scoped="" ref="0x404c67a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c6888"/>
        <function-ref name="set" scoped="" ref="0x404c6968"/>
        <function-ref name="clr" scoped="" ref="0x404c6a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x404c5f28" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x404c5f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404c4110"/>
        <function-ref name="isInput" scoped="" ref="0x404c41f0"/>
        <function-ref name="toggle" scoped="" ref="0x404c42d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404c43b0"/>
        <function-ref name="get" scoped="" ref="0x404c4490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404c4570"/>
        <function-ref name="set" scoped="" ref="0x404c4650"/>
        <function-ref name="clr" scoped="" ref="0x404c4730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc3418" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc3418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc35f0"/>
        <function-ref name="isInput" scoped="" ref="0x40fc36d0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc37b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc3890"/>
        <function-ref name="get" scoped="" ref="0x40fc3970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc3a50"/>
        <function-ref name="set" scoped="" ref="0x40fc3b30"/>
        <function-ref name="clr" scoped="" ref="0x40fc3c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc2de0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc2de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc1010"/>
        <function-ref name="isInput" scoped="" ref="0x40fc10f0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc12b0"/>
        <function-ref name="get" scoped="" ref="0x40fc1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc1470"/>
        <function-ref name="set" scoped="" ref="0x40fc1550"/>
        <function-ref name="clr" scoped="" ref="0x40fc1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fc07f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fc07f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fc09d0"/>
        <function-ref name="isInput" scoped="" ref="0x40fc0ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40fc0b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40fc0c70"/>
        <function-ref name="get" scoped="" ref="0x40fc0d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fc0e30"/>
        <function-ref name="set" scoped="" ref="0x40fc0f10"/>
        <function-ref name="clr" scoped="" ref="0x40fbf010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbe228" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbe228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbe400"/>
        <function-ref name="isInput" scoped="" ref="0x40fbe4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40fbe5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbe6a0"/>
        <function-ref name="get" scoped="" ref="0x40fbe780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbe860"/>
        <function-ref name="set" scoped="" ref="0x40fbe940"/>
        <function-ref name="clr" scoped="" ref="0x40fbea20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbdc08" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbdc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbdde0"/>
        <function-ref name="isInput" scoped="" ref="0x40fbdec0"/>
        <function-ref name="toggle" scoped="" ref="0x40fbc010"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbc0f0"/>
        <function-ref name="get" scoped="" ref="0x40fbc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbc2b0"/>
        <function-ref name="set" scoped="" ref="0x40fbc390"/>
        <function-ref name="clr" scoped="" ref="0x40fbc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fbb6c0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fbb6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fbb898"/>
        <function-ref name="isInput" scoped="" ref="0x40fbb978"/>
        <function-ref name="toggle" scoped="" ref="0x40fbba58"/>
        <function-ref name="isOutput" scoped="" ref="0x40fbbb38"/>
        <function-ref name="get" scoped="" ref="0x40fbbc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fbbcf8"/>
        <function-ref name="set" scoped="" ref="0x40fbbdd8"/>
        <function-ref name="clr" scoped="" ref="0x40fbbeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fb90b0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fb90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fb9288"/>
        <function-ref name="isInput" scoped="" ref="0x40fb9368"/>
        <function-ref name="toggle" scoped="" ref="0x40fb9448"/>
        <function-ref name="isOutput" scoped="" ref="0x40fb9528"/>
        <function-ref name="get" scoped="" ref="0x40fb9608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fb96e8"/>
        <function-ref name="set" scoped="" ref="0x40fb97c8"/>
        <function-ref name="clr" scoped="" ref="0x40fb98a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40fb8a88" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40fb8a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fb8c60"/>
        <function-ref name="isInput" scoped="" ref="0x40fb8d40"/>
        <function-ref name="toggle" scoped="" ref="0x40fb8e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40fb8f00"/>
        <function-ref name="get" scoped="" ref="0x40fb7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fb70f0"/>
        <function-ref name="set" scoped="" ref="0x40fb71d0"/>
        <function-ref name="clr" scoped="" ref="0x40fb72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404cce60" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404cce60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404cb050"/>
        <function-ref name="isInput" scoped="" ref="0x404cb130"/>
        <function-ref name="toggle" scoped="" ref="0x404cb210"/>
        <function-ref name="isOutput" scoped="" ref="0x404cb2f0"/>
        <function-ref name="get" scoped="" ref="0x404cb3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404cb4b0"/>
        <function-ref name="set" scoped="" ref="0x404cb590"/>
        <function-ref name="clr" scoped="" ref="0x404cb670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404d5458" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404d5458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404d5630"/>
        <function-ref name="isInput" scoped="" ref="0x404d5710"/>
        <function-ref name="toggle" scoped="" ref="0x404d57f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404d58d0"/>
        <function-ref name="get" scoped="" ref="0x404d59b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404d5a90"/>
        <function-ref name="set" scoped="" ref="0x404d5b70"/>
        <function-ref name="clr" scoped="" ref="0x404d5c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404dfa30" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404dfa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dfc08"/>
        <function-ref name="isInput" scoped="" ref="0x404dfce8"/>
        <function-ref name="toggle" scoped="" ref="0x404dfdc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404dfea8"/>
        <function-ref name="get" scoped="" ref="0x404de010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404de0f0"/>
        <function-ref name="set" scoped="" ref="0x404de1d0"/>
        <function-ref name="clr" scoped="" ref="0x404de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404dc090" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404dc090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404dc268"/>
        <function-ref name="isInput" scoped="" ref="0x404dc348"/>
        <function-ref name="toggle" scoped="" ref="0x404dc428"/>
        <function-ref name="isOutput" scoped="" ref="0x404dc508"/>
        <function-ref name="get" scoped="" ref="0x404dc5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404dc6c8"/>
        <function-ref name="set" scoped="" ref="0x404dc7a8"/>
        <function-ref name="clr" scoped="" ref="0x404dc888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e56c0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e5898"/>
        <function-ref name="isInput" scoped="" ref="0x404e5978"/>
        <function-ref name="toggle" scoped="" ref="0x404e5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x404e5b38"/>
        <function-ref name="get" scoped="" ref="0x404e5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e5cf8"/>
        <function-ref name="set" scoped="" ref="0x404e5dd8"/>
        <function-ref name="clr" scoped="" ref="0x404e5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e3cb8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e3cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3e90"/>
        <function-ref name="isInput" scoped="" ref="0x404e2010"/>
        <function-ref name="toggle" scoped="" ref="0x404e20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e21d0"/>
        <function-ref name="get" scoped="" ref="0x404e22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e2390"/>
        <function-ref name="set" scoped="" ref="0x404e2470"/>
        <function-ref name="clr" scoped="" ref="0x404e2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404eb3b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404eb3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eb588"/>
        <function-ref name="isInput" scoped="" ref="0x404eb668"/>
        <function-ref name="toggle" scoped="" ref="0x404eb748"/>
        <function-ref name="isOutput" scoped="" ref="0x404eb828"/>
        <function-ref name="get" scoped="" ref="0x404eb908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eb9e8"/>
        <function-ref name="set" scoped="" ref="0x404ebac8"/>
        <function-ref name="clr" scoped="" ref="0x404ebba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e9978" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e9978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9b50"/>
        <function-ref name="isInput" scoped="" ref="0x404e9c30"/>
        <function-ref name="toggle" scoped="" ref="0x404e9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9df0"/>
        <function-ref name="get" scoped="" ref="0x404e9ed0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8010"/>
        <function-ref name="set" scoped="" ref="0x404e80f0"/>
        <function-ref name="clr" scoped="" ref="0x404e81d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404e7ee0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404e7ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e60e0"/>
        <function-ref name="isInput" scoped="" ref="0x404e61c0"/>
        <function-ref name="toggle" scoped="" ref="0x404e62a0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e6380"/>
        <function-ref name="get" scoped="" ref="0x404e6460"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e6540"/>
        <function-ref name="set" scoped="" ref="0x404e6620"/>
        <function-ref name="clr" scoped="" ref="0x404e6700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ef3e8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ef3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef5c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ef6a0"/>
        <function-ref name="toggle" scoped="" ref="0x404ef780"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef860"/>
        <function-ref name="get" scoped="" ref="0x404ef940"/>
        <function-ref name="makeOutput" scoped="" ref="0x404efa20"/>
        <function-ref name="set" scoped="" ref="0x404efb00"/>
        <function-ref name="clr" scoped="" ref="0x404efbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404ed8f0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404ed8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404edac8"/>
        <function-ref name="isInput" scoped="" ref="0x404edba8"/>
        <function-ref name="toggle" scoped="" ref="0x404edc88"/>
        <function-ref name="isOutput" scoped="" ref="0x404edd68"/>
        <function-ref name="get" scoped="" ref="0x404ede48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404edf28"/>
        <function-ref name="set" scoped="" ref="0x404ec018"/>
        <function-ref name="clr" scoped="" ref="0x404ec0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f6dd8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f6dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5010"/>
        <function-ref name="isInput" scoped="" ref="0x404f50f0"/>
        <function-ref name="toggle" scoped="" ref="0x404f51d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f52b0"/>
        <function-ref name="get" scoped="" ref="0x404f5390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5470"/>
        <function-ref name="set" scoped="" ref="0x404f5550"/>
        <function-ref name="clr" scoped="" ref="0x404f5630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x404f33b0" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x404f33b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3588"/>
        <function-ref name="isInput" scoped="" ref="0x404f3668"/>
        <function-ref name="toggle" scoped="" ref="0x404f3748"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3828"/>
        <function-ref name="get" scoped="" ref="0x404f3908"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f39e8"/>
        <function-ref name="set" scoped="" ref="0x404f3ac8"/>
        <function-ref name="clr" scoped="" ref="0x404f3ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405136d8" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405136d8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4033ace0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4033ace0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405138b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40513a88" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40513a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40513c60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40513d40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40513e20"/>
        <function-ref name="actualMicro" scoped="" ref="0x40513f00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40512010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x4052b240" loc="49:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x4052b240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052b418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40517408" loc="46:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40517408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405175e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40517d68" loc="48:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40517d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x405177a0" loc="47:/opt/tinyos-2.1.0/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x405177a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40517978"/>
        <function-ref name="taskLoop" scoped="" ref="0x40517a58"/>
        <function-ref name="runNextTask" scoped="" ref="0x40517b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40348bc0" loc="37:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40348bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40348d98"/>
        <function-ref name="runTask" scoped="" ref="0x40348e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40342408" loc="36:/opt/tinyos-2.1.0/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40342408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403425e0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403426c0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403427a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403ae950" loc="45:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403ae950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403aeb28"/>
        <function-ref name="runTask" scoped="" ref="0x403aec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x403b35f0" loc="46:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403b35f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403b37c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x403ae118" loc="44:/opt/tinyos-2.1.0/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x403ae118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x403ae2f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x403ae3d0"/>
        <function-ref name="runNextTask" scoped="" ref="0x403ae4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x403c0218" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x403c0218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x403c03f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x403bde10" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x403bde10"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x403bc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x403bcae8" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x403bcae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x403bccc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405331a8" loc="50:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405331a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40533380"/>
        <function-ref name="stopDone" scoped="" ref="0x40533460"/>
        <function-ref name="start" scoped="" ref="0x40533540"/>
        <function-ref name="stop" scoped="" ref="0x40533620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40533a80" loc="52:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40533a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40533c58"/>
        <function-ref name="getPayload" scoped="" ref="0x40533d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40533e18"/>
        <function-ref name="cancel" scoped="" ref="0x40533ef8"/>
        <function-ref name="sendDone" scoped="" ref="0x40532010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40532b10" loc="54:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40532b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40532ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4053aaf0" loc="56:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4053aaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4053acc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4053ada8"/>
        <function-ref name="getPayload" scoped="" ref="0x4053ae88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40531010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405310f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x4054f4a0" loc="59:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x4054f4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4053c010"/>
        <function-ref name="clear" scoped="" ref="0x4053c3c0"/>
        <function-ref name="isValid" scoped="" ref="0x4054fbf0"/>
        <function-ref name="set" scoped="" ref="0x4053c770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40532478" loc="53:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40532478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40532650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40547b10" loc="58:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40547b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40547ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40547dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40547ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4053d990" loc="57:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4053d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4053db68"/>
        <function-ref name="source" scoped="" ref="0x4053dc48"/>
        <function-ref name="address" scoped="" ref="0x4053dd28"/>
        <function-ref name="destination" scoped="" ref="0x4053de08"/>
        <function-ref name="setSource" scoped="" ref="0x4053dee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40530010"/>
        <function-ref name="type" scoped="" ref="0x405300f0"/>
        <function-ref name="setType" scoped="" ref="0x405301d0"/>
        <function-ref name="isForMe" scoped="" ref="0x405302b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40530390"/>
        <function-ref name="localGroup" scoped="" ref="0x40530470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4053cea8" loc="60:/opt/tinyos-2.1.0/tos/platforms/micaz/ActiveMessageC.nc">
      <component-ref qname="ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4053cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x405509c0"/>
        <function-ref name="clear" scoped="" ref="0x40550d70"/>
        <function-ref name="isValid" scoped="" ref="0x40550610"/>
        <function-ref name="set" scoped="" ref="0x4054e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4054eda8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4054eda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4054b010"/>
        <function-ref name="stopDone" scoped="" ref="0x4054b0f0"/>
        <function-ref name="start" scoped="" ref="0x4054b1d0"/>
        <function-ref name="stop" scoped="" ref="0x4054b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x40559578" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x40559578"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x40559750"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x40559830"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x40559910"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405599f0"/>
        <function-ref name="setCca" scoped="" ref="0x40559ad0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40559bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40558178" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40558178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x405583d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x405567b0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x405567b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40556988"/>
        <function-ref name="payloadLength" scoped="" ref="0x40556a68"/>
        <function-ref name="getPayload" scoped="" ref="0x40556b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40556c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40556d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4054b710" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4054b710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4054b8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4054b9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4054baa8"/>
        <function-ref name="cancel" scoped="" ref="0x4054bb88"/>
        <function-ref name="sendDone" scoped="" ref="0x4054bc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40557798" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40557798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40557970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40552ec0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40552ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405540c0"/>
        <function-ref name="getRssi" scoped="" ref="0x405541a0"/>
        <function-ref name="getPower" scoped="" ref="0x40554280"/>
        <function-ref name="getLqi" scoped="" ref="0x40554360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x4055f788" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x4055f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x4055f960"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x4055fa40"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x4055fb20"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x4055fc00"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x4055fce0"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x4055fdc0"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x4055fea0"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40551010"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x405510f0"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x405511d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40557100" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40557100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405572d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40554580" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40554580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40554758"/>
        <function-ref name="noAck" scoped="" ref="0x40554838"/>
        <function-ref name="wasAcked" scoped="" ref="0x40554918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40568680" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40568680"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40568858"/>
        <function-ref name="setRetries" scoped="" ref="0x40568938"/>
        <function-ref name="getRetries" scoped="" ref="0x40568a18"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40568af8"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40568bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40557b08" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40557b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40557ce0"/>
        <function-ref name="source" scoped="" ref="0x40557dc0"/>
        <function-ref name="address" scoped="" ref="0x40557ea0"/>
        <function-ref name="destination" scoped="" ref="0x40556010"/>
        <function-ref name="setSource" scoped="" ref="0x405560f0"/>
        <function-ref name="setDestination" scoped="" ref="0x405561d0"/>
        <function-ref name="type" scoped="" ref="0x405562b0"/>
        <function-ref name="setType" scoped="" ref="0x40556390"/>
        <function-ref name="isForMe" scoped="" ref="0x40556470"/>
        <function-ref name="setGroup" scoped="" ref="0x40556550"/>
        <function-ref name="localGroup" scoped="" ref="0x40556630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4055e978" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageC.nc">
      <component-ref qname="CC2420ActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4055e978"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4055eb50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4056e220" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4056e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4056e3f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40577a18" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40577a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40577bf0"/>
        <function-ref name="getPayload" scoped="" ref="0x40577cd0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40577db0"/>
        <function-ref name="cancel" scoped="" ref="0x40577e90"/>
        <function-ref name="sendDone" scoped="" ref="0x4056e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x4058aed0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x4058aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x4056d0c0"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x4056d1a0"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x4056d280"/>
        <function-ref name="syncDone" scoped="" ref="0x4056d360"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x4056d440"/>
        <function-ref name="setShortAddr" scoped="" ref="0x4056d520"/>
        <function-ref name="setChannel" scoped="" ref="0x4056d600"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x4056d6e0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x4056d7c0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x4056d8a0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x4056d980"/>
        <function-ref name="sync" scoped="" ref="0x4056da60"/>
        <function-ref name="getChannel" scoped="" ref="0x4056db40"/>
        <function-ref name="getPanAddr" scoped="" ref="0x4056dca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x4056f320" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x4056f320"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x4056f4f8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x4056f5d8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x4056f6b8"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x4056f798"/>
        <function-ref name="setCca" scoped="" ref="0x4056f878"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x4056f958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40570c68" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40570c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40570e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x40586ef0" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x40586ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405880e0"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405881c0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405882a0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x40588380"/>
        <function-ref name="setCca" scoped="" ref="0x40588460"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x40588540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40570270" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40570270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40570448"/>
        <function-ref name="payloadLength" scoped="" ref="0x40570528"/>
        <function-ref name="getPayload" scoped="" ref="0x40570608"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405706e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x405707c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40572190" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40572190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40572368"/>
        <function-ref name="getPayload" scoped="" ref="0x40572448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40572528"/>
        <function-ref name="cancel" scoped="" ref="0x40572608"/>
        <function-ref name="sendDone" scoped="" ref="0x405726e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40571238" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40571238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40571410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x4056e5b8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x4056e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x4056e790"/>
        <function-ref name="getRssi" scoped="" ref="0x4056e870"/>
        <function-ref name="getPower" scoped="" ref="0x4056e950"/>
        <function-ref name="getLqi" scoped="" ref="0x4056ea30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x405867b0" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x405867b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40586a08"/>
        <function-ref name="changed" scoped="" ref="0x40586ae8"/>
        <function-ref name="amGroup" scoped="" ref="0x40586bc8"/>
        <function-ref name="setAddress" scoped="" ref="0x40586ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40580538" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40580538"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40580710"/>
        <function-ref name="getMetadata" scoped="" ref="0x405807f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40572b50" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40572b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40572d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x405715a8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/CC2420ActiveMessageP.nc">
      <component-ref qname="CC2420ActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x405715a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40571780"/>
        <function-ref name="source" scoped="" ref="0x40571860"/>
        <function-ref name="address" scoped="" ref="0x40571940"/>
        <function-ref name="destination" scoped="" ref="0x40571a20"/>
        <function-ref name="setSource" scoped="" ref="0x40571b00"/>
        <function-ref name="setDestination" scoped="" ref="0x40571be0"/>
        <function-ref name="type" scoped="" ref="0x40571cc0"/>
        <function-ref name="setType" scoped="" ref="0x40571da0"/>
        <function-ref name="isForMe" scoped="" ref="0x40571e80"/>
        <function-ref name="setGroup" scoped="" ref="0x40570010"/>
        <function-ref name="localGroup" scoped="" ref="0x405700f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c9390" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c9568"/>
        <function-ref name="stopDone" scoped="" ref="0x405c9648"/>
        <function-ref name="start" scoped="" ref="0x405c9728"/>
        <function-ref name="stop" scoped="" ref="0x405c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405c8470" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405c8470"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c8648"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c8728"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405c8808"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c88e8"/>
        <function-ref name="setCca" scoped="" ref="0x405c89c8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405c8aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405c9998" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405c9998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c9b70"/>
        <function-ref name="getPayload" scoped="" ref="0x405c9c50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c9d30"/>
        <function-ref name="cancel" scoped="" ref="0x405c9e10"/>
        <function-ref name="sendDone" scoped="" ref="0x405c9ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x405c80b8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaC.nc">
      <component-ref qname="CC2420CsmaC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x405c80b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x405c8290"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x405c5408" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x405c5408"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x405c55e0"/>
        <function-ref name="stopDone" scoped="" ref="0x405c56c0"/>
        <function-ref name="start" scoped="" ref="0x405c57a0"/>
        <function-ref name="stop" scoped="" ref="0x405c5880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x405c41f0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x405c41f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405c43c8"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405c44a8"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405c4588"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405c4668"/>
        <function-ref name="setCca" scoped="" ref="0x405c4748"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405c4828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBackoff" ref="0x405ce438" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBackoff" scoped="" ref="0x405ce438"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x405ce610"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x405ce6f0"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x405ce7d0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x405ce8b0"/>
        <function-ref name="setCca" scoped="" ref="0x405ce990"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x405cea70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x405cb9d0" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x405cb9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x405cbba8"/>
        <function-ref name="getRssi" scoped="" ref="0x405cbc88"/>
        <function-ref name="getPower" scoped="" ref="0x405cbd68"/>
        <function-ref name="getLqi" scoped="" ref="0x405cbe48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Transmit" ref="0x405d6c20" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x405d6c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405d6df8"/>
        <function-ref name="cancel" scoped="" ref="0x405d6ed8"/>
        <function-ref name="modify" scoped="" ref="0x405ce010"/>
        <function-ref name="sendDone" scoped="" ref="0x405ce0f0"/>
        <function-ref name="resend" scoped="" ref="0x405ce1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x405c5a10" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x405c5a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x405c5be8"/>
        <function-ref name="getPayload" scoped="" ref="0x405c5cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x405c5da8"/>
        <function-ref name="cancel" scoped="" ref="0x405c5e88"/>
        <function-ref name="sendDone" scoped="" ref="0x405c4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x405d4898" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x405d4898"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x405d4a70"/>
        <function-ref name="rand32" scoped="" ref="0x405d4b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x405da658" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x405da658"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x405da830"/>
        <function-ref name="stop" scoped="" ref="0x405da910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x405d5060" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x405d5060"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x405d5238"/>
        <function-ref name="getMetadata" scoped="" ref="0x405d5318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Power" ref="0x405ccbe0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x405ccbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x405ccdb8"/>
        <function-ref name="rfOff" scoped="" ref="0x405cce98"/>
        <function-ref name="rxOn" scoped="" ref="0x405d2010"/>
        <function-ref name="startVReg" scoped="" ref="0x405d20f0"/>
        <function-ref name="stopVReg" scoped="" ref="0x405d21d0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x405d22b0"/>
        <function-ref name="stopOscillator" scoped="" ref="0x405d2390"/>
        <function-ref name="startVRegDone" scoped="" ref="0x405d2470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x405d4ce0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x405d4ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x405d4eb8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x405cb010"/>
        <function-ref name="led1On" scoped="" ref="0x405cb0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x405cb1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x405cb2b0"/>
        <function-ref name="get" scoped="" ref="0x405cb390"/>
        <function-ref name="led1Off" scoped="" ref="0x405cb470"/>
        <function-ref name="led2Off" scoped="" ref="0x405cb7f0"/>
        <function-ref name="set" scoped="" ref="0x405cb550"/>
        <function-ref name="led0On" scoped="" ref="0x405cb630"/>
        <function-ref name="led2On" scoped="" ref="0x405cb710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x405cfa50" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x405cfa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x405cfc28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405cfd08"/>
        <function-ref name="request" scoped="" ref="0x405cfde8"/>
        <function-ref name="granted" scoped="" ref="0x405cfec8"/>
        <function-ref name="isOwner" scoped="" ref="0x405c3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControlState" ref="0x405df838" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControlState" scoped="" ref="0x405df838"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x405dfa90"/>
        <function-ref name="toIdle" scoped="" ref="0x405dfb70"/>
        <function-ref name="isState" scoped="" ref="0x405dfc50"/>
        <function-ref name="isIdle" scoped="" ref="0x405dfd30"/>
        <function-ref name="requestState" scoped="" ref="0x405dfe10"/>
        <function-ref name="forceState" scoped="" ref="0x405dfef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDone_task" ref="0x405ddca8" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDone_task" scoped="" ref="0x405ddca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405dde80"/>
        <function-ref name="runTask" scoped="" ref="0x405dc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDone_task" ref="0x405dd498" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDone_task" scoped="" ref="0x405dd498"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405dd670"/>
        <function-ref name="runTask" scoped="" ref="0x405dd750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDone_task" ref="0x405e1928" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/csma/CC2420CsmaP.nc">
      <component-ref qname="CC2420CsmaP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDone_task" scoped="" ref="0x405e1928"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x405e1b00"/>
        <function-ref name="runTask" scoped="" ref="0x405e1be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x40605990" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40605990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40605b68"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40605c48"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40605d28"/>
        <function-ref name="syncDone" scoped="" ref="0x40605e08"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40605ee8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40604010"/>
        <function-ref name="setChannel" scoped="" ref="0x406040f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x406041d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x406042b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40604390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40604470"/>
        <function-ref name="sync" scoped="" ref="0x40604550"/>
        <function-ref name="getChannel" scoped="" ref="0x40604630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40604790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x406154c0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x406154c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40615ae8"/>
        <function-ref name="readDone" scoped="" ref="0x40615d40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40604960" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40604960"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40604b38"/>
        <function-ref name="rfOff" scoped="" ref="0x40604c18"/>
        <function-ref name="rxOn" scoped="" ref="0x40604cf8"/>
        <function-ref name="startVReg" scoped="" ref="0x40604dd8"/>
        <function-ref name="stopVReg" scoped="" ref="0x40604eb8"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40615010"/>
        <function-ref name="stopOscillator" scoped="" ref="0x406150f0"/>
        <function-ref name="startVRegDone" scoped="" ref="0x406151d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40605258" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlC.nc">
      <component-ref qname="CC2420ControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40605258"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40605430"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40605510"/>
        <function-ref name="request" scoped="" ref="0x406055f0"/>
        <function-ref name="granted" scoped="" ref="0x406056d0"/>
        <function-ref name="isOwner" scoped="" ref="0x406057b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Config" ref="0x406113b0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x406113b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40611588"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40611668"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40611748"/>
        <function-ref name="syncDone" scoped="" ref="0x40611828"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40611908"/>
        <function-ref name="setShortAddr" scoped="" ref="0x406119e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40611ac8"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40611ba8"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40611c88"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40611d68"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40611e48"/>
        <function-ref name="sync" scoped="" ref="0x40611f28"/>
        <function-ref name="getChannel" scoped="" ref="0x40610018"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40610178"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXCTRL1" ref="0x40626d88" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40626d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40622010"/>
        <function-ref name="write" scoped="" ref="0x406220f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StartupTimer" ref="0x4061beb0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StartupTimer" scoped="" ref="0x4061beb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4061a388"/>
        <function-ref name="fired" scoped="" ref="0x4060db28"/>
        <function-ref name="startAt" scoped="" ref="0x4061a048"/>
        <function-ref name="isRunning" scoped="" ref="0x4060dda0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4061a600"/>
        <function-ref name="start" scoped="" ref="0x4060d610"/>
        <function-ref name="stop" scoped="" ref="0x4060d8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL0" ref="0x40626358" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40626358"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40626530"/>
        <function-ref name="write" scoped="" ref="0x40626610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x40619300" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x40619300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406194d8"/>
        <function-ref name="isInput" scoped="" ref="0x406195b8"/>
        <function-ref name="toggle" scoped="" ref="0x40619698"/>
        <function-ref name="isOutput" scoped="" ref="0x40619778"/>
        <function-ref name="get" scoped="" ref="0x40619858"/>
        <function-ref name="makeOutput" scoped="" ref="0x40619938"/>
        <function-ref name="set" scoped="" ref="0x40619a18"/>
        <function-ref name="clr" scoped="" ref="0x40619af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRssi" ref="0x40610e30" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRssi" scoped="" ref="0x40610e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4060f468"/>
        <function-ref name="readDone" scoped="" ref="0x4060f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="syncDone" ref="0x4062a618" loc="118:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="syncDone" scoped="" ref="0x4062a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062a7f0"/>
        <function-ref name="runTask" scoped="" ref="0x4062a8d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSI" ref="0x40622330" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40622330"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40622508"/>
        <function-ref name="write" scoped="" ref="0x406225e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG0" ref="0x40621898" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40621898"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40621a70"/>
        <function-ref name="write" scoped="" ref="0x40621b50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x40617520" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40617520"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x406176f8"/>
        <function-ref name="changed" scoped="" ref="0x406177d8"/>
        <function-ref name="amGroup" scoped="" ref="0x406178b8"/>
        <function-ref name="setAddress" scoped="" ref="0x40617998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4061a8d0" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4061a8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061aaa8"/>
        <function-ref name="isInput" scoped="" ref="0x4061ab88"/>
        <function-ref name="toggle" scoped="" ref="0x4061ac68"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ad48"/>
        <function-ref name="get" scoped="" ref="0x4061ae28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061af08"/>
        <function-ref name="set" scoped="" ref="0x40619010"/>
        <function-ref name="clr" scoped="" ref="0x406190f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCOFF" ref="0x40630a28" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40630a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40630c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VREN" ref="0x40619d08" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x40619d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40619ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40618010"/>
        <function-ref name="toggle" scoped="" ref="0x406180f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406181d0"/>
        <function-ref name="get" scoped="" ref="0x406182b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40618390"/>
        <function-ref name="set" scoped="" ref="0x40618470"/>
        <function-ref name="clr" scoped="" ref="0x40618550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40614850" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40614850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40614a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x40626878" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40626878"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40626a50"/>
        <function-ref name="write" scoped="" ref="0x40626b30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SXOSCON" ref="0x40630e48" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40630e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40620050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40620298" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40620298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40620470"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40620550"/>
        <function-ref name="request" scoped="" ref="0x40620630"/>
        <function-ref name="granted" scoped="" ref="0x40620710"/>
        <function-ref name="isOwner" scoped="" ref="0x406207f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SyncResource" ref="0x4061f348" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SyncResource" scoped="" ref="0x4061f348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4061f520"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4061f600"/>
        <function-ref name="request" scoped="" ref="0x4061f6e0"/>
        <function-ref name="granted" scoped="" ref="0x4061f7c0"/>
        <function-ref name="isOwner" scoped="" ref="0x4061f8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Power" ref="0x40610348" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Power" scoped="" ref="0x40610348"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Power"/>
      </instance>
      <interface-functions>
        <function-ref name="startOscillator" scoped="" ref="0x40610520"/>
        <function-ref name="rfOff" scoped="" ref="0x40610600"/>
        <function-ref name="rxOn" scoped="" ref="0x406106e0"/>
        <function-ref name="startVReg" scoped="" ref="0x406107c0"/>
        <function-ref name="stopVReg" scoped="" ref="0x406108a0"/>
        <function-ref name="startOscillatorDone" scoped="" ref="0x40610980"/>
        <function-ref name="stopOscillator" scoped="" ref="0x40610a60"/>
        <function-ref name="startVRegDone" scoped="" ref="0x40610b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IOCFG1" ref="0x40621da0" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40621da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40626010"/>
        <function-ref name="write" scoped="" ref="0x406260f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FSCTRL" ref="0x40621310" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40621310"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40621568"/>
        <function-ref name="write" scoped="" ref="0x40621648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRXON" ref="0x406301e0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x406301e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x406303b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4061fa30" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4061fa30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4061fc08"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4061fce8"/>
        <function-ref name="led1On" scoped="" ref="0x4061fdc8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4061fea8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4062f010"/>
        <function-ref name="get" scoped="" ref="0x4062f0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4062f1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4062f550"/>
        <function-ref name="set" scoped="" ref="0x4062f2b0"/>
        <function-ref name="led0On" scoped="" ref="0x4062f390"/>
        <function-ref name="led2On" scoped="" ref="0x4062f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sync" ref="0x4062be00" loc="117:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sync" scoped="" ref="0x4062be00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4062a010"/>
        <function-ref name="runTask" scoped="" ref="0x4062a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40614be0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40614be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40614db8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40614e98"/>
        <function-ref name="request" scoped="" ref="0x40611010"/>
        <function-ref name="granted" scoped="" ref="0x406110f0"/>
        <function-ref name="isOwner" scoped="" ref="0x406111d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PANID" ref="0x40623b40" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40623b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40623d18"/>
        <function-ref name="write" scoped="" ref="0x40623df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptCCA" ref="0x40627e40" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x40627e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40617050"/>
        <function-ref name="disable" scoped="" ref="0x40617130"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40617210"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406172f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RssiResource" ref="0x40620a48" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RssiResource" scoped="" ref="0x40620a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40620d20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40620e00"/>
        <function-ref name="request" scoped="" ref="0x40620ee0"/>
        <function-ref name="granted" scoped="" ref="0x4061f010"/>
        <function-ref name="isOwner" scoped="" ref="0x4061f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SRFOFF" ref="0x406305f8" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/control/CC2420ControlP.nc">
      <component-ref qname="CC2420ControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x406305f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x406307d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4066c940" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4066c940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4066cb18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm32khz32" ref="0x4066cf08" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/alarm/AlarmMultiplexC.nc">
      <component-ref qname="AlarmMultiplexC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm32khz32" scoped="" ref="0x4066cf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406673e8"/>
        <function-ref name="fired" scoped="" ref="0x40669b98"/>
        <function-ref name="startAt" scoped="" ref="0x406670a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40669e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40667660"/>
        <function-ref name="start" scoped="" ref="0x40669680"/>
        <function-ref name="stop" scoped="" ref="0x40669920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407c5e78" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407c5e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40677350"/>
        <function-ref name="fired" scoped="" ref="0x40678af8"/>
        <function-ref name="startAt" scoped="" ref="0x40677010"/>
        <function-ref name="isRunning" scoped="" ref="0x40678d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x406775c8"/>
        <function-ref name="start" scoped="" ref="0x406785e0"/>
        <function-ref name="stop" scoped="" ref="0x40678880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406777f8" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406777f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406779d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41029dc0" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/Alarm32khz32C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41029dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41026350"/>
        <function-ref name="fired" scoped="" ref="0x41028a48"/>
        <function-ref name="startAt" scoped="" ref="0x41026010"/>
        <function-ref name="isRunning" scoped="" ref="0x41028cc0"/>
        <function-ref name="getAlarm" scoped="" ref="0x410265c8"/>
        <function-ref name="start" scoped="" ref="0x41028530"/>
        <function-ref name="stop" scoped="" ref="0x410287d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41025bc8" loc="30:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmOne16C.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41025bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410230a8"/>
        <function-ref name="fired" scoped="" ref="0x41024858"/>
        <function-ref name="startAt" scoped="" ref="0x41024d48"/>
        <function-ref name="isRunning" scoped="" ref="0x41024ad0"/>
        <function-ref name="getAlarm" scoped="" ref="0x41023320"/>
        <function-ref name="start" scoped="" ref="0x41024340"/>
        <function-ref name="stop" scoped="" ref="0x410245e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x40694ae0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x40694ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x40694cb8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x40694d98"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x40694e78"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x40686010"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406860f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406861d0"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406862b0"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x40686390"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x40686470"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x40686550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4068f998" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4068f998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x4068e500"/>
        <function-ref name="test" scoped="" ref="0x4068e010"/>
        <function-ref name="get" scoped="" ref="0x40685010"/>
        <function-ref name="captured" scoped="" ref="0x40685528"/>
        <function-ref name="reset" scoped="" ref="0x406857c8"/>
        <function-ref name="isOn" scoped="" ref="0x4068e288"/>
        <function-ref name="set" scoped="" ref="0x40685288"/>
        <function-ref name="start" scoped="" ref="0x40685a40"/>
        <function-ref name="stop" scoped="" ref="0x40685cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4069d628" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4069d628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406a0ba0"/>
        <function-ref name="fired" scoped="" ref="0x406a01c0"/>
        <function-ref name="get" scoped="" ref="0x4069dc70"/>
        <function-ref name="reset" scoped="" ref="0x406a0438"/>
        <function-ref name="isOn" scoped="" ref="0x406a0e18"/>
        <function-ref name="set" scoped="" ref="0x4069dee8"/>
        <function-ref name="start" scoped="" ref="0x406a06b0"/>
        <function-ref name="stop" scoped="" ref="0x406a0928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40687b10" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1C.nc">
      <component-ref qname="HplAtm128Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40687b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4068b600"/>
        <function-ref name="test" scoped="" ref="0x4068b110"/>
        <function-ref name="get" scoped="" ref="0x4068c200"/>
        <function-ref name="setScale" scoped="" ref="0x4068b878"/>
        <function-ref name="getScale" scoped="" ref="0x4068bb18"/>
        <function-ref name="reset" scoped="" ref="0x4068c990"/>
        <function-ref name="overflow" scoped="" ref="0x4068c718"/>
        <function-ref name="isOn" scoped="" ref="0x4068b388"/>
        <function-ref name="set" scoped="" ref="0x4068c478"/>
        <function-ref name="start" scoped="" ref="0x4068cc08"/>
        <function-ref name="stop" scoped="" ref="0x4068ce80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406a6208" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406a6208"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406a63e0"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406a64c0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406a65a0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406a6680"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406a6760"/>
        <function-ref name="setControl" scoped="" ref="0x406a6840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406a1820" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406a1820"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406a19f8"/>
        <function-ref name="compareBusy" scoped="" ref="0x406a1ad8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406a1bb8"/>
        <function-ref name="countBusy" scoped="" ref="0x406a1c98"/>
        <function-ref name="getAssr" scoped="" ref="0x406a1d78"/>
        <function-ref name="setAssr" scoped="" ref="0x406a1e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406a6b68" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406a6b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406a5110"/>
        <function-ref name="fired" scoped="" ref="0x406aa718"/>
        <function-ref name="get" scoped="" ref="0x406aa200"/>
        <function-ref name="reset" scoped="" ref="0x406aa990"/>
        <function-ref name="isOn" scoped="" ref="0x406a5388"/>
        <function-ref name="set" scoped="" ref="0x406aa478"/>
        <function-ref name="start" scoped="" ref="0x406aac08"/>
        <function-ref name="stop" scoped="" ref="0x406aae80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4069c930" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncC.nc">
      <component-ref qname="HplAtm128Timer0AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4069c930"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40697418"/>
        <function-ref name="test" scoped="" ref="0x40699f08"/>
        <function-ref name="get" scoped="" ref="0x40699010"/>
        <function-ref name="setScale" scoped="" ref="0x40697690"/>
        <function-ref name="getScale" scoped="" ref="0x40697930"/>
        <function-ref name="reset" scoped="" ref="0x406997a0"/>
        <function-ref name="overflow" scoped="" ref="0x40699528"/>
        <function-ref name="isOn" scoped="" ref="0x406971a0"/>
        <function-ref name="set" scoped="" ref="0x40699288"/>
        <function-ref name="start" scoped="" ref="0x40699a18"/>
        <function-ref name="stop" scoped="" ref="0x40699c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406b1e68" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406b1e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406b0050"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406b0130"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406b0210"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406b02f0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406b03d0"/>
        <function-ref name="setControl" scoped="" ref="0x406b04b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x406ad2c8" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x406ad2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x406ad4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x406ad728" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x406ad728"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x406ad900"/>
        <function-ref name="compareBusy" scoped="" ref="0x406ad9e0"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x406adac0"/>
        <function-ref name="countBusy" scoped="" ref="0x406adba0"/>
        <function-ref name="getAssr" scoped="" ref="0x406adc80"/>
        <function-ref name="setAssr" scoped="" ref="0x406add60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x406b07d8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x406b07d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406afd38"/>
        <function-ref name="fired" scoped="" ref="0x406af358"/>
        <function-ref name="get" scoped="" ref="0x406b0e20"/>
        <function-ref name="reset" scoped="" ref="0x406af5d0"/>
        <function-ref name="isOn" scoped="" ref="0x406ad010"/>
        <function-ref name="set" scoped="" ref="0x406af0b8"/>
        <function-ref name="start" scoped="" ref="0x406af848"/>
        <function-ref name="stop" scoped="" ref="0x406afac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406a4b08" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer0AsyncP.nc">
      <component-ref qname="HplAtm128Timer0AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406a4b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406b1600"/>
        <function-ref name="test" scoped="" ref="0x406b1110"/>
        <function-ref name="get" scoped="" ref="0x406b2200"/>
        <function-ref name="setScale" scoped="" ref="0x406b1878"/>
        <function-ref name="getScale" scoped="" ref="0x406b1b18"/>
        <function-ref name="reset" scoped="" ref="0x406b2990"/>
        <function-ref name="overflow" scoped="" ref="0x406b2718"/>
        <function-ref name="isOn" scoped="" ref="0x406b1388"/>
        <function-ref name="set" scoped="" ref="0x406b2478"/>
        <function-ref name="start" scoped="" ref="0x406b2c08"/>
        <function-ref name="stop" scoped="" ref="0x406b2e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x406ef520" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x406ef520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406ef6f8"/>
        <function-ref name="setCtrlCapture" scoped="" ref="0x406ef7d8"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406ef8b8"/>
        <function-ref name="getCtrlCompare" scoped="" ref="0x406ef998"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406efa78"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406efb58"/>
        <function-ref name="getCtrlClock" scoped="" ref="0x406efc38"/>
        <function-ref name="getCtrlCapture" scoped="" ref="0x406efd18"/>
        <function-ref name="setCtrlCompare" scoped="" ref="0x406efdf8"/>
        <function-ref name="setCtrlClock" scoped="" ref="0x406efed8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0Ctrl" ref="0x406f9528" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0Ctrl" scoped="" ref="0x406f9528"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x406f9700"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x406f97e0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x406f98c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x406f99a0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x406f9a80"/>
        <function-ref name="setControl" scoped="" ref="0x406f9b60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x406eb128" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x406eb128"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406ea690"/>
        <function-ref name="fired" scoped="" ref="0x406ebc88"/>
        <function-ref name="get" scoped="" ref="0x406eb770"/>
        <function-ref name="reset" scoped="" ref="0x406ebf00"/>
        <function-ref name="isOn" scoped="" ref="0x406ea908"/>
        <function-ref name="set" scoped="" ref="0x406eb9e8"/>
        <function-ref name="start" scoped="" ref="0x406ea1a0"/>
        <function-ref name="stop" scoped="" ref="0x406ea418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x406ee258" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x406ee258"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x406eccc0"/>
        <function-ref name="test" scoped="" ref="0x406ec7d0"/>
        <function-ref name="get" scoped="" ref="0x406ee8a0"/>
        <function-ref name="captured" scoped="" ref="0x406eedb8"/>
        <function-ref name="reset" scoped="" ref="0x406ec068"/>
        <function-ref name="isOn" scoped="" ref="0x406eca48"/>
        <function-ref name="set" scoped="" ref="0x406eeb18"/>
        <function-ref name="start" scoped="" ref="0x406ec2e0"/>
        <function-ref name="stop" scoped="" ref="0x406ec558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x406ead20" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x406ead20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406e72c0"/>
        <function-ref name="fired" scoped="" ref="0x406e98a8"/>
        <function-ref name="get" scoped="" ref="0x406e9390"/>
        <function-ref name="reset" scoped="" ref="0x406e9b20"/>
        <function-ref name="isOn" scoped="" ref="0x406e7538"/>
        <function-ref name="set" scoped="" ref="0x406e9608"/>
        <function-ref name="start" scoped="" ref="0x406e9d98"/>
        <function-ref name="stop" scoped="" ref="0x406e7048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x406e7950" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x406e7950"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406faf08"/>
        <function-ref name="fired" scoped="" ref="0x406fa528"/>
        <function-ref name="get" scoped="" ref="0x406fa010"/>
        <function-ref name="reset" scoped="" ref="0x406fa7a0"/>
        <function-ref name="isOn" scoped="" ref="0x406f91a0"/>
        <function-ref name="set" scoped="" ref="0x406fa288"/>
        <function-ref name="start" scoped="" ref="0x406faa18"/>
        <function-ref name="stop" scoped="" ref="0x406fac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406dd1a0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer1P.nc">
      <component-ref qname="HplAtm128Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406dd1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x406f0c68"/>
        <function-ref name="test" scoped="" ref="0x406f0778"/>
        <function-ref name="get" scoped="" ref="0x406dd7e8"/>
        <function-ref name="setScale" scoped="" ref="0x406f0ee0"/>
        <function-ref name="getScale" scoped="" ref="0x406ef1c0"/>
        <function-ref name="reset" scoped="" ref="0x406f0010"/>
        <function-ref name="overflow" scoped="" ref="0x406ddd00"/>
        <function-ref name="isOn" scoped="" ref="0x406f09f0"/>
        <function-ref name="set" scoped="" ref="0x406dda60"/>
        <function-ref name="start" scoped="" ref="0x406f0288"/>
        <function-ref name="stop" scoped="" ref="0x406f0500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40741db8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40741db8"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4033aae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4033aae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40740010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40740220" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128TimerInitC.nc">
      <component-ref qname="InitOneP.InitOne"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40740220"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x4074ec68"/>
        <function-ref name="test" scoped="" ref="0x4074e778"/>
        <function-ref name="get" scoped="" ref="0x40740868"/>
        <function-ref name="setScale" scoped="" ref="0x4074eee0"/>
        <function-ref name="getScale" scoped="" ref="0x4074d1c0"/>
        <function-ref name="reset" scoped="" ref="0x4074e010"/>
        <function-ref name="overflow" scoped="" ref="0x40740d80"/>
        <function-ref name="isOn" scoped="" ref="0x4074e9f0"/>
        <function-ref name="set" scoped="" ref="0x40740ae0"/>
        <function-ref name="start" scoped="" ref="0x4074e288"/>
        <function-ref name="stop" scoped="" ref="0x4074e500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410589f0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410589f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4033a8e0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4033a8e0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41056010"/>
        <function-ref name="fired" scoped="" ref="0x41057718"/>
        <function-ref name="startAt" scoped="" ref="0x41057c08"/>
        <function-ref name="isRunning" scoped="" ref="0x41057990"/>
        <function-ref name="getAlarm" scoped="" ref="0x41056288"/>
        <function-ref name="start" scoped="" ref="0x41057200"/>
        <function-ref name="stop" scoped="" ref="0x410574a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Compare" ref="0x410537e8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Compare" scoped="" ref="0x410537e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41052d58"/>
        <function-ref name="fired" scoped="" ref="0x41052378"/>
        <function-ref name="get" scoped="" ref="0x41053e30"/>
        <function-ref name="reset" scoped="" ref="0x410525f0"/>
        <function-ref name="isOn" scoped="" ref="0x41051010"/>
        <function-ref name="set" scoped="" ref="0x410520d8"/>
        <function-ref name="start" scoped="" ref="0x41052868"/>
        <function-ref name="stop" scoped="" ref="0x41052ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Timer" ref="0x41056548" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Alarm16.NAlarm"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Timer" scoped="" ref="0x41056548"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41053010"/>
        <function-ref name="test" scoped="" ref="0x41054ab8"/>
        <function-ref name="get" scoped="" ref="0x41056b90"/>
        <function-ref name="setScale" scoped="" ref="0x41053288"/>
        <function-ref name="getScale" scoped="" ref="0x41053528"/>
        <function-ref name="reset" scoped="" ref="0x41054350"/>
        <function-ref name="overflow" scoped="" ref="0x410540d8"/>
        <function-ref name="isOn" scoped="" ref="0x41054d30"/>
        <function-ref name="set" scoped="" ref="0x41056e08"/>
        <function-ref name="start" scoped="" ref="0x410545c8"/>
        <function-ref name="stop" scoped="" ref="0x41054840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40769668" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/Counter32khz32C.nc">
      <component-ref qname="Counter32khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40769668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40769db8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4076d2c0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4076d048"/>
        <function-ref name="overflow" scoped="" ref="0x4076d538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077d088" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/CounterOne16C.nc">
      <component-ref qname="CounterOne16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077d088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4077d7d8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4077dcc8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4077da50"/>
        <function-ref name="overflow" scoped="" ref="0x4077c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077a890" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077a890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40779010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40779500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40779288"/>
        <function-ref name="overflow" scoped="" ref="0x40779778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40779a58" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128CounterC.nc">
      <component-ref qname="CounterOne16C.NCounter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40779a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x40784500"/>
        <function-ref name="test" scoped="" ref="0x40784010"/>
        <function-ref name="get" scoped="" ref="0x407860b8"/>
        <function-ref name="setScale" scoped="" ref="0x40784778"/>
        <function-ref name="getScale" scoped="" ref="0x40784a18"/>
        <function-ref name="reset" scoped="" ref="0x40786848"/>
        <function-ref name="overflow" scoped="" ref="0x407865d0"/>
        <function-ref name="isOn" scoped="" ref="0x40784288"/>
        <function-ref name="set" scoped="" ref="0x40786330"/>
        <function-ref name="start" scoped="" ref="0x40786ac0"/>
        <function-ref name="stop" scoped="" ref="0x40786d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407a00e0" loc="52:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407a00e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407a0830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407a0d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407a0aa8"/>
        <function-ref name="overflow" scoped="" ref="0x4079f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4077ee60" loc="51:/opt/tinyos-2.1.0/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="Counter32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4077ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407815e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40781ad0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40781858"/>
        <function-ref name="overflow" scoped="" ref="0x40781d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410215a0" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410215a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41020ab8"/>
        <function-ref name="fired" scoped="" ref="0x41020288"/>
        <function-ref name="startAt" scoped="" ref="0x41020778"/>
        <function-ref name="isRunning" scoped="" ref="0x41020500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41020d30"/>
        <function-ref name="start" scoped="" ref="0x41021cf0"/>
        <function-ref name="stop" scoped="" ref="0x41020010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4101e380" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4101e380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="TOne" ref="0x403aa9a0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4105c840"/>
        <function-ref name="fired" scoped="" ref="0x4105c010"/>
        <function-ref name="startAt" scoped="" ref="0x4105c500"/>
        <function-ref name="isRunning" scoped="" ref="0x4105c288"/>
        <function-ref name="getAlarm" scoped="" ref="0x4105cab8"/>
        <function-ref name="start" scoped="" ref="0x4101ead0"/>
        <function-ref name="stop" scoped="" ref="0x4101ed70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4101f0a0" loc="57:/opt/tinyos-2.1.0/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="AlarmMultiplexC.Alarm.Alarm32khz32C.Transform32"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4101f0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4101f7f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4101fce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4101fa68"/>
        <function-ref name="overflow" scoped="" ref="0x4101e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c6bb0" loc="18:/opt/tinyos-2.1.0/tos/system/NoInitC.nc">
      <component-ref qname="NoInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c6bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c6d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFO" ref="0x407c0890" loc="68:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x407c0890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c0a68"/>
        <function-ref name="isInput" scoped="" ref="0x407c0b48"/>
        <function-ref name="toggle" scoped="" ref="0x407c0c28"/>
        <function-ref name="isOutput" scoped="" ref="0x407c0d08"/>
        <function-ref name="get" scoped="" ref="0x407c0de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c0ec8"/>
        <function-ref name="set" scoped="" ref="0x407bf010"/>
        <function-ref name="clr" scoped="" ref="0x407bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FIFOP" ref="0x407bf2e8" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x407bf2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bf4c0"/>
        <function-ref name="isInput" scoped="" ref="0x407bf5a0"/>
        <function-ref name="toggle" scoped="" ref="0x407bf680"/>
        <function-ref name="isOutput" scoped="" ref="0x407bf760"/>
        <function-ref name="get" scoped="" ref="0x407bf840"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bf920"/>
        <function-ref name="set" scoped="" ref="0x407bfa00"/>
        <function-ref name="clr" scoped="" ref="0x407bfae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x407bfcd0" loc="70:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x407bfcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bfea8"/>
        <function-ref name="isInput" scoped="" ref="0x407be010"/>
        <function-ref name="toggle" scoped="" ref="0x407be0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x407be1d0"/>
        <function-ref name="get" scoped="" ref="0x407be2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x407be390"/>
        <function-ref name="set" scoped="" ref="0x407be470"/>
        <function-ref name="clr" scoped="" ref="0x407be550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x4066be90" loc="67:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4066be90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407c0080"/>
        <function-ref name="isInput" scoped="" ref="0x407c0160"/>
        <function-ref name="toggle" scoped="" ref="0x407c0240"/>
        <function-ref name="isOutput" scoped="" ref="0x407c0320"/>
        <function-ref name="get" scoped="" ref="0x407c0400"/>
        <function-ref name="makeOutput" scoped="" ref="0x407c04e0"/>
        <function-ref name="set" scoped="" ref="0x407c05c0"/>
        <function-ref name="clr" scoped="" ref="0x407c06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VREN" ref="0x407bd128" loc="72:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VREN" scoped="" ref="0x407bd128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407bd300"/>
        <function-ref name="isInput" scoped="" ref="0x407bd3e0"/>
        <function-ref name="toggle" scoped="" ref="0x407bd4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x407bd5a0"/>
        <function-ref name="get" scoped="" ref="0x407bd680"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bd760"/>
        <function-ref name="set" scoped="" ref="0x407bd840"/>
        <function-ref name="clr" scoped="" ref="0x407bd920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x4066b4b8" loc="66:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x4066b4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066b690"/>
        <function-ref name="isInput" scoped="" ref="0x4066b770"/>
        <function-ref name="toggle" scoped="" ref="0x4066b850"/>
        <function-ref name="isOutput" scoped="" ref="0x4066b930"/>
        <function-ref name="get" scoped="" ref="0x4066ba10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066baf0"/>
        <function-ref name="set" scoped="" ref="0x4066bbd0"/>
        <function-ref name="clr" scoped="" ref="0x4066bcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFD" ref="0x407be730" loc="71:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420PinsC.nc">
      <component-ref qname="HplCC2420PinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x407be730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x407be908"/>
        <function-ref name="isInput" scoped="" ref="0x407be9e8"/>
        <function-ref name="toggle" scoped="" ref="0x407beac8"/>
        <function-ref name="isOutput" scoped="" ref="0x407beba8"/>
        <function-ref name="get" scoped="" ref="0x407bec88"/>
        <function-ref name="makeOutput" scoped="" ref="0x407bed68"/>
        <function-ref name="set" scoped="" ref="0x407bee48"/>
        <function-ref name="clr" scoped="" ref="0x407bef28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CaptureSFD" ref="0x407cda28" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x407cda28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407cdc00"/>
        <function-ref name="disable" scoped="" ref="0x407cdce0"/>
        <function-ref name="captured" scoped="" ref="0x407cddc0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407cdea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptCCA" ref="0x407cf188" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptCCA" scoped="" ref="0x407cf188"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cf360"/>
        <function-ref name="disable" scoped="" ref="0x407cf440"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407cf520"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407cf600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterruptFIFOP" ref="0x407cf898" loc="41:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsC.nc">
      <component-ref qname="HplCC2420InterruptsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x407cf898"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407cfa70"/>
        <function-ref name="disable" scoped="" ref="0x407cfb50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407cfc30"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407cfd10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407daf00" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407daf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407cc0f0"/>
        <function-ref name="disable" scoped="" ref="0x407cc1d0"/>
        <function-ref name="captured" scoped="" ref="0x407cc2b0"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407cc390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Capture" ref="0x407cc5a0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128GpioCaptureC.nc">
      <component-ref qname="HplCC2420InterruptsC.CaptureSFDC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Capture" scoped="" ref="0x407cc5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setEdge" scoped="" ref="0x407d8048"/>
        <function-ref name="test" scoped="" ref="0x407cbb38"/>
        <function-ref name="get" scoped="" ref="0x407ccbe8"/>
        <function-ref name="captured" scoped="" ref="0x407cb130"/>
        <function-ref name="reset" scoped="" ref="0x407cb3d0"/>
        <function-ref name="isOn" scoped="" ref="0x407cbdb0"/>
        <function-ref name="set" scoped="" ref="0x407cce60"/>
        <function-ref name="start" scoped="" ref="0x407cb648"/>
        <function-ref name="stop" scoped="" ref="0x407cb8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Interrupt" ref="0x407d68c0" loc="9:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Interrupt" scoped="" ref="0x407d68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407d6a98"/>
        <function-ref name="fired" scoped="" ref="0x407d6b78"/>
        <function-ref name="disable" scoped="" ref="0x407d6c58"/>
        <function-ref name="edge" scoped="" ref="0x407d6d38"/>
        <function-ref name="enable" scoped="" ref="0x407d6e18"/>
        <function-ref name="getValue" scoped="" ref="0x407d6ef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Interrupt" ref="0x407d62c8" loc="8:/opt/tinyos-2.1.0/tos/chips/atm128/pins/Atm128GpioInterruptC.nc">
      <component-ref qname="HplCC2420InterruptsC.InterruptFIFOPC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x407d62c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407d64a0"/>
        <function-ref name="disable" scoped="" ref="0x407d6580"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407d6660"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407d6740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int6" ref="0x407f6168" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int6" scoped="" ref="0x407f6168"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f6340"/>
        <function-ref name="fired" scoped="" ref="0x407f6420"/>
        <function-ref name="disable" scoped="" ref="0x407f6500"/>
        <function-ref name="edge" scoped="" ref="0x407f65e0"/>
        <function-ref name="enable" scoped="" ref="0x407f66c0"/>
        <function-ref name="getValue" scoped="" ref="0x407f67a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x407e14f8" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x407e14f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e16d0"/>
        <function-ref name="fired" scoped="" ref="0x407e17b0"/>
        <function-ref name="disable" scoped="" ref="0x407e1890"/>
        <function-ref name="edge" scoped="" ref="0x407e1970"/>
        <function-ref name="enable" scoped="" ref="0x407e1a50"/>
        <function-ref name="getValue" scoped="" ref="0x407e1b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int4" ref="0x407df010" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int4" scoped="" ref="0x407df010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407df1e8"/>
        <function-ref name="fired" scoped="" ref="0x407df2c8"/>
        <function-ref name="disable" scoped="" ref="0x407df3a8"/>
        <function-ref name="edge" scoped="" ref="0x407df488"/>
        <function-ref name="enable" scoped="" ref="0x407df568"/>
        <function-ref name="getValue" scoped="" ref="0x407df648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int7" ref="0x407f69e8" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int7" scoped="" ref="0x407f69e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f6bc0"/>
        <function-ref name="fired" scoped="" ref="0x407f6ca0"/>
        <function-ref name="disable" scoped="" ref="0x407f6d80"/>
        <function-ref name="edge" scoped="" ref="0x407f6e60"/>
        <function-ref name="enable" scoped="" ref="0x407f5010"/>
        <function-ref name="getValue" scoped="" ref="0x407f50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x407e1d78" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x407e1d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e0010"/>
        <function-ref name="fired" scoped="" ref="0x407e00f0"/>
        <function-ref name="disable" scoped="" ref="0x407e01d0"/>
        <function-ref name="edge" scoped="" ref="0x407e02b0"/>
        <function-ref name="enable" scoped="" ref="0x407e0390"/>
        <function-ref name="getValue" scoped="" ref="0x407e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int5" ref="0x407df890" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int5" scoped="" ref="0x407df890"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407dfa68"/>
        <function-ref name="fired" scoped="" ref="0x407dfb48"/>
        <function-ref name="disable" scoped="" ref="0x407dfc28"/>
        <function-ref name="edge" scoped="" ref="0x407dfd08"/>
        <function-ref name="enable" scoped="" ref="0x407dfde8"/>
        <function-ref name="getValue" scoped="" ref="0x407dfec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x407e4c18" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x407e4c18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e4df0"/>
        <function-ref name="fired" scoped="" ref="0x407e4ed0"/>
        <function-ref name="disable" scoped="" ref="0x407e1010"/>
        <function-ref name="edge" scoped="" ref="0x407e10f0"/>
        <function-ref name="enable" scoped="" ref="0x407e11d0"/>
        <function-ref name="getValue" scoped="" ref="0x407e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x407e06b8" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptC.nc">
      <component-ref qname="HplAtm128InterruptC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x407e06b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407e0890"/>
        <function-ref name="fired" scoped="" ref="0x407e0970"/>
        <function-ref name="disable" scoped="" ref="0x407e0a50"/>
        <function-ref name="edge" scoped="" ref="0x407e0b30"/>
        <function-ref name="enable" scoped="" ref="0x407e0c10"/>
        <function-ref name="getValue" scoped="" ref="0x407e0cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig6" ref="0x407f11a0" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig6" scoped="" ref="0x407f11a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f1378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig1" ref="0x407f0a60" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig1" scoped="" ref="0x407f0a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f0c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig4" ref="0x407f27d8" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig4" scoped="" ref="0x407f27d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f29b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig7" ref="0x407f1618" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig7" scoped="" ref="0x407f1618"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f17f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig2" ref="0x407f0ed8" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig2" scoped="" ref="0x407f0ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f20c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig5" ref="0x407f2c50" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig5" scoped="" ref="0x407f2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f2e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig0" ref="0x407f05e8" loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig0" scoped="" ref="0x407f05e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f07c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IntSig3" ref="0x407f2360" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSigP.nc">
      <component-ref qname="HplAtm128InterruptSigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IntSig3" scoped="" ref="0x407f2360"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f2538"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x407f3998" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x407f3998"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x407f3b70"/>
        <function-ref name="fired" scoped="" ref="0x407f3c50"/>
        <function-ref name="disable" scoped="" ref="0x407f3d30"/>
        <function-ref name="edge" scoped="" ref="0x407f3e10"/>
        <function-ref name="enable" scoped="" ref="0x407f3ef0"/>
        <function-ref name="getValue" scoped="" ref="0x407f8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x407f8190" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x407f8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407f8368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40805b68" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40805b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40805d40"/>
        <function-ref name="fired" scoped="" ref="0x40805e20"/>
        <function-ref name="disable" scoped="" ref="0x40805f00"/>
        <function-ref name="edge" scoped="" ref="0x40804010"/>
        <function-ref name="enable" scoped="" ref="0x408040f0"/>
        <function-ref name="getValue" scoped="" ref="0x408041d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40804350" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40804350"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40804528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40803c70" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40803c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40803e48"/>
        <function-ref name="fired" scoped="" ref="0x40803f28"/>
        <function-ref name="disable" scoped="" ref="0x4081c018"/>
        <function-ref name="edge" scoped="" ref="0x4081c0f8"/>
        <function-ref name="enable" scoped="" ref="0x4081c1d8"/>
        <function-ref name="getValue" scoped="" ref="0x4081c2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081c438" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081c438"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081c610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x4081bd60" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x4081bd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4081a010"/>
        <function-ref name="fired" scoped="" ref="0x4081a0f0"/>
        <function-ref name="disable" scoped="" ref="0x4081a1d0"/>
        <function-ref name="edge" scoped="" ref="0x4081a2b0"/>
        <function-ref name="enable" scoped="" ref="0x4081a390"/>
        <function-ref name="getValue" scoped="" ref="0x4081a470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x4081a5f0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x4081a5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4081a7c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40817050" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40817050"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40817228"/>
        <function-ref name="fired" scoped="" ref="0x40817308"/>
        <function-ref name="disable" scoped="" ref="0x408173e8"/>
        <function-ref name="edge" scoped="" ref="0x408174c8"/>
        <function-ref name="enable" scoped="" ref="0x408175a8"/>
        <function-ref name="getValue" scoped="" ref="0x40817688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40817808" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40817808"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408179e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x408152b0" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x408152b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40815488"/>
        <function-ref name="fired" scoped="" ref="0x40815568"/>
        <function-ref name="disable" scoped="" ref="0x40815648"/>
        <function-ref name="edge" scoped="" ref="0x40815728"/>
        <function-ref name="enable" scoped="" ref="0x40815808"/>
        <function-ref name="getValue" scoped="" ref="0x408158e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40815a68" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40815a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40815c40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40813538" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40813538"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40813710"/>
        <function-ref name="fired" scoped="" ref="0x408137f0"/>
        <function-ref name="disable" scoped="" ref="0x408138d0"/>
        <function-ref name="edge" scoped="" ref="0x408139b0"/>
        <function-ref name="enable" scoped="" ref="0x40813a90"/>
        <function-ref name="getValue" scoped="" ref="0x40813b70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40813cf0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40813cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40813ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Irq" ref="0x40811718" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Irq" scoped="" ref="0x40811718"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408118f0"/>
        <function-ref name="fired" scoped="" ref="0x408119d0"/>
        <function-ref name="disable" scoped="" ref="0x40811ab0"/>
        <function-ref name="edge" scoped="" ref="0x40811b90"/>
        <function-ref name="enable" scoped="" ref="0x40811c70"/>
        <function-ref name="getValue" scoped="" ref="0x40811d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IrqSignal" ref="0x40811ed0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptPinP.nc">
      <component-ref qname="HplAtm128InterruptC.IntPin7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IrqSignal" scoped="" ref="0x40811ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408100c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC_CCA" ref="0x40826d68" loc="51:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC_CCA" scoped="" ref="0x40826d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40823010"/>
        <function-ref name="isInput" scoped="" ref="0x408230f0"/>
        <function-ref name="toggle" scoped="" ref="0x408231d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408232b0"/>
        <function-ref name="get" scoped="" ref="0x40823390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40823470"/>
        <function-ref name="set" scoped="" ref="0x40823550"/>
        <function-ref name="clr" scoped="" ref="0x40823630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CCA" ref="0x408266b0" loc="47:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x408266b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40826888"/>
        <function-ref name="disable" scoped="" ref="0x40826968"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40826a48"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40826b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCATask" ref="0x40821670" loc="69:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420InterruptsP.nc">
      <component-ref qname="HplCC2420InterruptsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCATask" scoped="" ref="0x40821670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40821848"/>
        <function-ref name="runTask" scoped="" ref="0x40821928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x409805c8" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x409805c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409808a0"/>
        <function-ref name="write" scoped="" ref="0x40980980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x4099a868" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x4099a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4099aa40"/>
        <function-ref name="writeDone" scoped="" ref="0x4099ab20"/>
        <function-ref name="write" scoped="" ref="0x4099ac00"/>
        <function-ref name="beginRead" scoped="" ref="0x4099ace0"/>
        <function-ref name="readDone" scoped="" ref="0x4099adc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40986a00" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40986a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40982b68" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40982b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982d40"/>
        <function-ref name="write" scoped="" ref="0x40982e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4097f448" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4097f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f620"/>
        <function-ref name="write" scoped="" ref="0x4097f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4097f880" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4097f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097fa58"/>
        <function-ref name="write" scoped="" ref="0x4097fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409854e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409854e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409856c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x4099bcb8" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x4099bcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099be90"/>
        <function-ref name="write" scoped="" ref="0x4099a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40981448" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40981448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40981620"/>
        <function-ref name="write" scoped="" ref="0x40981700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40981cb8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40981cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40981e90"/>
        <function-ref name="write" scoped="" ref="0x40980010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4097fcb8" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4097fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097fe90"/>
        <function-ref name="write" scoped="" ref="0x4097e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x4097c2b0" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x4097c2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097c488"/>
        <function-ref name="write" scoped="" ref="0x4097c568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40987d88" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40987d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40986010"/>
        <function-ref name="abortRelease" scoped="" ref="0x409860f0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409861d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40984260" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40984260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40984438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409845b8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409845b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40984810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40984990" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40984990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40984b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40985b98" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40985b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40981880" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40981880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40981a58"/>
        <function-ref name="write" scoped="" ref="0x40981b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40981010" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40981010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409811e8"/>
        <function-ref name="write" scoped="" ref="0x409812c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409866a8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409866a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x4097c6e8" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x4097c6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097c8c0"/>
        <function-ref name="write" scoped="" ref="0x4097c9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x4099b880" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x4099b880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ba58"/>
        <function-ref name="write" scoped="" ref="0x4099bb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x4097e5c8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x4097e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097e7a0"/>
        <function-ref name="write" scoped="" ref="0x4097e880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40986350" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40986350"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40986528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40982730" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40982730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40982908"/>
        <function-ref name="write" scoped="" ref="0x409829e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40980190" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40980190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40980368"/>
        <function-ref name="write" scoped="" ref="0x40980448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x4099a190" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x4099a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4099a368"/>
        <function-ref name="writeDone" scoped="" ref="0x4099a448"/>
        <function-ref name="write" scoped="" ref="0x4099a528"/>
        <function-ref name="beginRead" scoped="" ref="0x4099a608"/>
        <function-ref name="readDone" scoped="" ref="0x4099a6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x4097e190" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x4097e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097e368"/>
        <function-ref name="write" scoped="" ref="0x4097e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40980b00" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40980b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40980cd8"/>
        <function-ref name="write" scoped="" ref="0x40980db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40986d58" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40986d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4097f010" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4097f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097f1e8"/>
        <function-ref name="write" scoped="" ref="0x4097f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409876d0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409876d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409878a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40987988"/>
        <function-ref name="request" scoped="" ref="0x40987a68"/>
        <function-ref name="granted" scoped="" ref="0x40987b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40987c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40984ce8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40984ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40984ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409823d8" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409823d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409825b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x4099b448" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x4099b448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099b620"/>
        <function-ref name="write" scoped="" ref="0x4099b700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x4099b010" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x4099b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099b1e8"/>
        <function-ref name="write" scoped="" ref="0x4099b2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40985ef0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40985ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409840e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x4097cb20" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x4097cb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097ccf8"/>
        <function-ref name="write" scoped="" ref="0x4097cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40985190" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40985190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40985840" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40985840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40985a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40982080" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40982080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40982258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x4097ea00" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x4097ea00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097ebd8"/>
        <function-ref name="write" scoped="" ref="0x4097ecb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x4097ee38" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x4097ee38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4097c050"/>
        <function-ref name="write" scoped="" ref="0x4097c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x4084db78" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x4084db78"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x4084dd50"/>
        <function-ref name="writeDone" scoped="" ref="0x4084de30"/>
        <function-ref name="write" scoped="" ref="0x4084df10"/>
        <function-ref name="beginRead" scoped="" ref="0x4084c010"/>
        <function-ref name="readDone" scoped="" ref="0x4084c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x4084d2e8" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x4084d2e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x4084d4c0"/>
        <function-ref name="abortRelease" scoped="" ref="0x4084d5a0"/>
        <function-ref name="attemptRelease" scoped="" ref="0x4084d680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x4084c5e0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x4084c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4084c7b8"/>
        <function-ref name="write" scoped="" ref="0x4084c898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x4084cda8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x4084cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4084b010"/>
        <function-ref name="write" scoped="" ref="0x4084b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4083bb10" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4083bb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4083bce8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4083bdc8"/>
        <function-ref name="request" scoped="" ref="0x4083bea8"/>
        <function-ref name="granted" scoped="" ref="0x4084d010"/>
        <function-ref name="isOwner" scoped="" ref="0x4084d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x4084b610" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiWireC.nc">
      <component-ref qname="CC2420SpiWireC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x4084b610"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x4084b7e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiPacket" ref="0x40856600" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x40856600"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408567d8"/>
        <function-ref name="sendDone" scoped="" ref="0x408568b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Fifo" ref="0x408464e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Fifo" scoped="" ref="0x408464e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x408466c0"/>
        <function-ref name="writeDone" scoped="" ref="0x408467a0"/>
        <function-ref name="write" scoped="" ref="0x40846880"/>
        <function-ref name="beginRead" scoped="" ref="0x40846960"/>
        <function-ref name="readDone" scoped="" ref="0x40846a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x408471d0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x408471d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x408473a8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40847488"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40847568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4085b2c8" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4085b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4085b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WorkingState" ref="0x40856ad0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WorkingState" scoped="" ref="0x40856ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40856ca8"/>
        <function-ref name="toIdle" scoped="" ref="0x40856d88"/>
        <function-ref name="isState" scoped="" ref="0x40856e68"/>
        <function-ref name="isIdle" scoped="" ref="0x4085d010"/>
        <function-ref name="requestState" scoped="" ref="0x4085d0f0"/>
        <function-ref name="forceState" scoped="" ref="0x4085d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x408442e8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x408442e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408444c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408445a0"/>
        <function-ref name="request" scoped="" ref="0x40844680"/>
        <function-ref name="granted" scoped="" ref="0x40844760"/>
        <function-ref name="isOwner" scoped="" ref="0x40844840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ram" ref="0x40846f10" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ram" scoped="" ref="0x40846f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40845108"/>
        <function-ref name="write" scoped="" ref="0x408451e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Reg" ref="0x408456d8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Reg" scoped="" ref="0x408456d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408458b0"/>
        <function-ref name="write" scoped="" ref="0x40845990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4085d340" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4085d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4085d518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4085d5f8"/>
        <function-ref name="led1On" scoped="" ref="0x4085d6d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4085d7b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4085d898"/>
        <function-ref name="get" scoped="" ref="0x4085d978"/>
        <function-ref name="led1Off" scoped="" ref="0x4085da58"/>
        <function-ref name="led2Off" scoped="" ref="0x4085ddd8"/>
        <function-ref name="set" scoped="" ref="0x4085db38"/>
        <function-ref name="led0On" scoped="" ref="0x4085dc18"/>
        <function-ref name="led2On" scoped="" ref="0x4085dcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408479e0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408479e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40847bb8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40847c98"/>
        <function-ref name="request" scoped="" ref="0x40847d78"/>
        <function-ref name="granted" scoped="" ref="0x40847e58"/>
        <function-ref name="isOwner" scoped="" ref="0x40846010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grant" ref="0x40854168" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grant" scoped="" ref="0x40854168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40854340"/>
        <function-ref name="runTask" scoped="" ref="0x40854420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Strobe" ref="0x40845e90" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiP.nc">
      <component-ref qname="CC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Strobe" scoped="" ref="0x40845e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40844080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4088ebc0" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420SpiWireC.WorkingStateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4088ebc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4088ed98"/>
        <function-ref name="toIdle" scoped="" ref="0x4088ee78"/>
        <function-ref name="isState" scoped="" ref="0x4088d010"/>
        <function-ref name="isIdle" scoped="" ref="0x4088d0f0"/>
        <function-ref name="requestState" scoped="" ref="0x4088d1d0"/>
        <function-ref name="forceState" scoped="" ref="0x4088d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x4088ccc0" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplC.nc">
      <component-ref qname="StateImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x4088ccc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4088ce98"/>
        <function-ref name="toIdle" scoped="" ref="0x40888010"/>
        <function-ref name="isState" scoped="" ref="0x408880f0"/>
        <function-ref name="isIdle" scoped="" ref="0x408881d0"/>
        <function-ref name="requestState" scoped="" ref="0x408882b0"/>
        <function-ref name="forceState" scoped="" ref="0x40888390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40888d68" loc="66:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40888d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x408a1468" loc="67:/opt/tinyos-2.1.0/tos/system/StateImplP.nc">
      <component-ref qname="StateImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x408a1468"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x408a1640"/>
        <function-ref name="toIdle" scoped="" ref="0x408a1720"/>
        <function-ref name="isState" scoped="" ref="0x408a1800"/>
        <function-ref name="isIdle" scoped="" ref="0x408a18e0"/>
        <function-ref name="requestState" scoped="" ref="0x408a19c0"/>
        <function-ref name="forceState" scoped="" ref="0x408a1aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x4095d4a8" loc="43:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x4095d4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095d680"/>
        <function-ref name="sendDone" scoped="" ref="0x4095d760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x4095d170" loc="42:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4095d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4095d348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40886758" loc="39:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40886758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40886930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40886a90" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiC.nc">
      <component-ref qname="CC2420SpiWireC.HplCC2420SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40886a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40886c68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40886d48"/>
        <function-ref name="request" scoped="" ref="0x40886e28"/>
        <function-ref name="granted" scoped="" ref="0x40886f08"/>
        <function-ref name="isOwner" scoped="" ref="0x4095d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408ab010" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408ab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408ab1e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408ab2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408afbb0" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408afbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408afd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408af830" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408af830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408afa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408ab760" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408ab760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408ab938"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408aba18"/>
        <function-ref name="request" scoped="" ref="0x408abaf8"/>
        <function-ref name="granted" scoped="" ref="0x408abbd8"/>
        <function-ref name="isOwner" scoped="" ref="0x408abcb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x408d91e0" loc="207:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x408d91e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408d93b8"/>
        <function-ref name="runTask" scoped="" ref="0x408d9498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x408a7010" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x408a7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408a71e8"/>
        <function-ref name="sendDone" scoped="" ref="0x408a72c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x408a5540" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x408a5540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408a5718"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408a57f8"/>
        <function-ref name="request" scoped="" ref="0x408a58d8"/>
        <function-ref name="granted" scoped="" ref="0x408a59b8"/>
        <function-ref name="isOwner" scoped="" ref="0x408a5a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x408aac00" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x408aac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x408aadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408aa8a0" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408aa8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408aaa78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x408b28f0" loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x408b28f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408b2ac8"/>
        <function-ref name="sleep" scoped="" ref="0x408a6e98"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408b2c88"/>
        <function-ref name="dataReady" scoped="" ref="0x408a5010"/>
        <function-ref name="initMaster" scoped="" ref="0x408b2e48"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408b2f28"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408a6018"/>
        <function-ref name="read" scoped="" ref="0x408a60f8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408a61d8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408a62b8"/>
        <function-ref name="setClock" scoped="" ref="0x408a6398"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408a6478"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408a6558"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408a66b8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408a6798"/>
        <function-ref name="write" scoped="" ref="0x408a6878"/>
        <function-ref name="enableSpi" scoped="" ref="0x408a6958"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408a6a38"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408a6b18"/>
        <function-ref name="getClock" scoped="" ref="0x408a6bf8"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408a6cd8"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408b2ba8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408b2d68"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408a6db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x408a7740" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408a7740"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408a7918"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408a79f8"/>
        <function-ref name="request" scoped="" ref="0x408a7ad8"/>
        <function-ref name="granted" scoped="" ref="0x408a7bb8"/>
        <function-ref name="isOwner" scoped="" ref="0x408a7c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408b00e8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408b00e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408b02c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408cac30" loc="85:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408cac30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408cae08"/>
        <function-ref name="userId" scoped="" ref="0x408caee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x408a8b38" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x408a8b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408a8d10"/>
        <function-ref name="sleep" scoped="" ref="0x408db1d0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408a8ed0"/>
        <function-ref name="dataReady" scoped="" ref="0x408db2b0"/>
        <function-ref name="initMaster" scoped="" ref="0x408dc0f0"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408dc1d0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408dc2b0"/>
        <function-ref name="read" scoped="" ref="0x408dc390"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408dc470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408dc550"/>
        <function-ref name="setClock" scoped="" ref="0x408dc630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408dc710"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408dc7f0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408dc950"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408dca30"/>
        <function-ref name="write" scoped="" ref="0x408dcb10"/>
        <function-ref name="enableSpi" scoped="" ref="0x408dcbf0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408dccd0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408dcdb0"/>
        <function-ref name="getClock" scoped="" ref="0x408dce90"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408db010"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408a8df0"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408dc010"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408db0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x408f1b10" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x408f1b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f1ce8"/>
        <function-ref name="isInput" scoped="" ref="0x408f1dc8"/>
        <function-ref name="toggle" scoped="" ref="0x408f1ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x408ef010"/>
        <function-ref name="get" scoped="" ref="0x408ef0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408ef1d0"/>
        <function-ref name="set" scoped="" ref="0x408ef2b0"/>
        <function-ref name="clr" scoped="" ref="0x408ef390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x408f2730" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x408f2730"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f2908"/>
        <function-ref name="isInput" scoped="" ref="0x408f29e8"/>
        <function-ref name="toggle" scoped="" ref="0x408f2ac8"/>
        <function-ref name="isOutput" scoped="" ref="0x408f2ba8"/>
        <function-ref name="get" scoped="" ref="0x408f2c88"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f2d68"/>
        <function-ref name="set" scoped="" ref="0x408f2e48"/>
        <function-ref name="clr" scoped="" ref="0x408f2f28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x408f0cc8" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x408f0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f0ea0"/>
        <function-ref name="isInput" scoped="" ref="0x408f2010"/>
        <function-ref name="toggle" scoped="" ref="0x408f20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f21d0"/>
        <function-ref name="get" scoped="" ref="0x408f22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f2390"/>
        <function-ref name="set" scoped="" ref="0x408f2470"/>
        <function-ref name="clr" scoped="" ref="0x408f2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x408f0808" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x408f0808"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408f09e0"/>
        <function-ref name="stop" scoped="" ref="0x408f0ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x408ef598" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x408ef598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408ef770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x408dbf10" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x408dbf10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x408f4108"/>
        <function-ref name="sleep" scoped="" ref="0x408f3550"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x408f42c8"/>
        <function-ref name="dataReady" scoped="" ref="0x408f3630"/>
        <function-ref name="initMaster" scoped="" ref="0x408f4488"/>
        <function-ref name="setMasterBit" scoped="" ref="0x408f4568"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x408f4648"/>
        <function-ref name="read" scoped="" ref="0x408f4728"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x408f4808"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x408f48e8"/>
        <function-ref name="setClock" scoped="" ref="0x408f49c8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x408f4aa8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x408f4b88"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x408f4ce8"/>
        <function-ref name="setDataOrder" scoped="" ref="0x408f4dc8"/>
        <function-ref name="write" scoped="" ref="0x408f4ea8"/>
        <function-ref name="enableSpi" scoped="" ref="0x408f3010"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x408f30f0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x408f31d0"/>
        <function-ref name="getClock" scoped="" ref="0x408f32b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x408f3390"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x408f41e8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x408f43a8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x408f3470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x408f1128" loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x408f1128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408f1300"/>
        <function-ref name="isInput" scoped="" ref="0x408f13e0"/>
        <function-ref name="toggle" scoped="" ref="0x408f14c0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f15a0"/>
        <function-ref name="get" scoped="" ref="0x408f1680"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f1760"/>
        <function-ref name="set" scoped="" ref="0x408f1840"/>
        <function-ref name="clr" scoped="" ref="0x408f1920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40944750" loc="76:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40944750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40944938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40944a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40943030" loc="79:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40943030"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40943218"/>
        <function-ref name="configure" scoped="" ref="0x409432f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40944010" loc="75:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40944010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409441f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409442d8"/>
        <function-ref name="request" scoped="" ref="0x409443b8"/>
        <function-ref name="granted" scoped="" ref="0x40944498"/>
        <function-ref name="isOwner" scoped="" ref="0x40944578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40944b58" loc="77:/opt/tinyos-2.1.0/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40944b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40944d30"/>
        <function-ref name="userId" scoped="" ref="0x40944e10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4109bd18" loc="34:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4109bd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4109bef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410d5090" loc="35:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410d5090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410d5268"/>
        <function-ref name="isEmpty" scoped="" ref="0x410d5348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410d5428"/>
        <function-ref name="dequeue" scoped="" ref="0x410d5508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410d37c8" loc="52:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410d37c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410d39b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d3a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410d20a8" loc="56:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410d20a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410d2290"/>
        <function-ref name="configure" scoped="" ref="0x410d2370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410d24d0" loc="57:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410d24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410d26a8"/>
        <function-ref name="isEmpty" scoped="" ref="0x410d2788"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410d2868"/>
        <function-ref name="dequeue" scoped="" ref="0x410d2948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410d3088" loc="51:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410d3088"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d3270"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410d3350"/>
        <function-ref name="request" scoped="" ref="0x410d3430"/>
        <function-ref name="granted" scoped="" ref="0x410d3510"/>
        <function-ref name="isOwner" scoped="" ref="0x410d35f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410d3bd0" loc="53:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410d3bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410d3da8"/>
        <function-ref name="userId" scoped="" ref="0x410d3e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410d2ac8" loc="69:/opt/tinyos-2.1.0/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410d2ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410d2ca0"/>
        <function-ref name="runTask" scoped="" ref="0x410d2d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4095b2c8" loc="45:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4095b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4095b4a0"/>
        <function-ref name="isInput" scoped="" ref="0x4095b580"/>
        <function-ref name="toggle" scoped="" ref="0x4095b660"/>
        <function-ref name="isOutput" scoped="" ref="0x4095b740"/>
        <function-ref name="get" scoped="" ref="0x4095b820"/>
        <function-ref name="makeOutput" scoped="" ref="0x4095b900"/>
        <function-ref name="set" scoped="" ref="0x4095b9e0"/>
        <function-ref name="clr" scoped="" ref="0x4095bac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4095c340" loc="40:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4095c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095c518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095c5f8"/>
        <function-ref name="request" scoped="" ref="0x4095c6d8"/>
        <function-ref name="granted" scoped="" ref="0x4095c7b8"/>
        <function-ref name="isOwner" scoped="" ref="0x4095c898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x4095cb00" loc="44:/opt/tinyos-2.1.0/tos/platforms/micaz/chips/cc2420/HplCC2420SpiP.nc">
      <component-ref qname="HplCC2420SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x4095cb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4095ccd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4095cdb8"/>
        <function-ref name="request" scoped="" ref="0x4095ce98"/>
        <function-ref name="granted" scoped="" ref="0x4095b010"/>
        <function-ref name="isOwner" scoped="" ref="0x4095b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40954890" loc="35:/opt/tinyos-2.1.0/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40954890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40954a68"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40954b48"/>
        <function-ref name="led1On" scoped="" ref="0x40954c28"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40954d08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40954de8"/>
        <function-ref name="get" scoped="" ref="0x40954ec8"/>
        <function-ref name="led1Off" scoped="" ref="0x40951010"/>
        <function-ref name="led2Off" scoped="" ref="0x40951390"/>
        <function-ref name="set" scoped="" ref="0x409510f0"/>
        <function-ref name="led0On" scoped="" ref="0x409511d0"/>
        <function-ref name="led2On" scoped="" ref="0x409512b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4096ccd8" loc="39:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4096ccd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096ceb0"/>
        <function-ref name="isInput" scoped="" ref="0x4096b010"/>
        <function-ref name="toggle" scoped="" ref="0x4096b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4096b1d0"/>
        <function-ref name="get" scoped="" ref="0x4096b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096b390"/>
        <function-ref name="set" scoped="" ref="0x4096b470"/>
        <function-ref name="clr" scoped="" ref="0x4096b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40951c10" loc="35:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40951c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40951de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4096b740" loc="40:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4096b740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096b918"/>
        <function-ref name="isInput" scoped="" ref="0x4096b9f8"/>
        <function-ref name="toggle" scoped="" ref="0x4096bad8"/>
        <function-ref name="isOutput" scoped="" ref="0x4096bbb8"/>
        <function-ref name="get" scoped="" ref="0x4096bc98"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096bd78"/>
        <function-ref name="set" scoped="" ref="0x4096be58"/>
        <function-ref name="clr" scoped="" ref="0x4096a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4096c010" loc="36:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4096c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4096c1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4096c2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4096c3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4096c488"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4096c568"/>
        <function-ref name="get" scoped="" ref="0x4096c648"/>
        <function-ref name="led1Off" scoped="" ref="0x4096c728"/>
        <function-ref name="led2Off" scoped="" ref="0x4096caa8"/>
        <function-ref name="set" scoped="" ref="0x4096c808"/>
        <function-ref name="led0On" scoped="" ref="0x4096c8e8"/>
        <function-ref name="led2On" scoped="" ref="0x4096c9c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4096a200" loc="41:/opt/tinyos-2.1.0/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4096a200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4096a3d8"/>
        <function-ref name="isInput" scoped="" ref="0x4096a4b8"/>
        <function-ref name="toggle" scoped="" ref="0x4096a598"/>
        <function-ref name="isOutput" scoped="" ref="0x4096a678"/>
        <function-ref name="get" scoped="" ref="0x4096a758"/>
        <function-ref name="makeOutput" scoped="" ref="0x4096a838"/>
        <function-ref name="set" scoped="" ref="0x4096a918"/>
        <function-ref name="clr" scoped="" ref="0x4096a9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x409788e8" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x409788e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40978ac0"/>
        <function-ref name="isInput" scoped="" ref="0x40978ba0"/>
        <function-ref name="toggle" scoped="" ref="0x40978c80"/>
        <function-ref name="isOutput" scoped="" ref="0x40978d60"/>
        <function-ref name="get" scoped="" ref="0x40978e40"/>
        <function-ref name="makeOutput" scoped="" ref="0x40978f20"/>
        <function-ref name="set" scoped="" ref="0x40977018"/>
        <function-ref name="clr" scoped="" ref="0x409770f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40977308" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40977308"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409774e0"/>
        <function-ref name="isInput" scoped="" ref="0x409775c0"/>
        <function-ref name="toggle" scoped="" ref="0x409776a0"/>
        <function-ref name="isOutput" scoped="" ref="0x40977780"/>
        <function-ref name="get" scoped="" ref="0x40977860"/>
        <function-ref name="makeOutput" scoped="" ref="0x40977940"/>
        <function-ref name="set" scoped="" ref="0x40977a20"/>
        <function-ref name="clr" scoped="" ref="0x40977b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x409766e0" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409766e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409768b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40977d10" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40977d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40977ee8"/>
        <function-ref name="isInput" scoped="" ref="0x40976010"/>
        <function-ref name="toggle" scoped="" ref="0x409760f0"/>
        <function-ref name="isOutput" scoped="" ref="0x409761d0"/>
        <function-ref name="get" scoped="" ref="0x409762b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40976390"/>
        <function-ref name="set" scoped="" ref="0x40976470"/>
        <function-ref name="clr" scoped="" ref="0x40976550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4098e5c8" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4098e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e8a0"/>
        <function-ref name="write" scoped="" ref="0x4098e980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409a8868" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409a8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a8a40"/>
        <function-ref name="writeDone" scoped="" ref="0x409a8b20"/>
        <function-ref name="write" scoped="" ref="0x409a8c00"/>
        <function-ref name="beginRead" scoped="" ref="0x409a8ce0"/>
        <function-ref name="readDone" scoped="" ref="0x409a8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40994a40" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40994a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40994c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40990b68" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40990b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40990d40"/>
        <function-ref name="write" scoped="" ref="0x40990e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4098d448" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4098d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098d620"/>
        <function-ref name="write" scoped="" ref="0x4098d700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4098d880" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4098d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098da58"/>
        <function-ref name="write" scoped="" ref="0x4098db38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409934e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409934e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409936c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409a9cb8" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409a9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9e90"/>
        <function-ref name="write" scoped="" ref="0x409a8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4098f448" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4098f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f620"/>
        <function-ref name="write" scoped="" ref="0x4098f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4098fcb8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4098fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098fe90"/>
        <function-ref name="write" scoped="" ref="0x4098e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4098dcb8" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4098dcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098de90"/>
        <function-ref name="write" scoped="" ref="0x409ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409aa2b0" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409aa2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa488"/>
        <function-ref name="write" scoped="" ref="0x409aa568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40995e40" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40995e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40994050"/>
        <function-ref name="abortRelease" scoped="" ref="0x40994130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40994210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40991260" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40991260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40991438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409915b8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409915b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40991810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40991990" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40991990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40991b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40993b98" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40993b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4098f880" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x4098f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098fa58"/>
        <function-ref name="write" scoped="" ref="0x4098fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4098f010" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4098f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098f1e8"/>
        <function-ref name="write" scoped="" ref="0x4098f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409946e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409946e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409948c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409aa6e8" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409aa6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa8c0"/>
        <function-ref name="write" scoped="" ref="0x409aa9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409a9880" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409a9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9a58"/>
        <function-ref name="write" scoped="" ref="0x409a9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409ab5c8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409ab5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab7a0"/>
        <function-ref name="write" scoped="" ref="0x409ab880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40994390" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40994390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40994568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40990730" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40990730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40990908"/>
        <function-ref name="write" scoped="" ref="0x409909e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4098e190" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4098e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098e368"/>
        <function-ref name="write" scoped="" ref="0x4098e448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409a8190" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409a8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409a8368"/>
        <function-ref name="writeDone" scoped="" ref="0x409a8448"/>
        <function-ref name="write" scoped="" ref="0x409a8528"/>
        <function-ref name="beginRead" scoped="" ref="0x409a8608"/>
        <function-ref name="readDone" scoped="" ref="0x409a86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409ab190" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409ab190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ab368"/>
        <function-ref name="write" scoped="" ref="0x409ab448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4098eb00" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4098eb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098ecd8"/>
        <function-ref name="write" scoped="" ref="0x4098edb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40994d98" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40994d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4098d010" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4098d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4098d1e8"/>
        <function-ref name="write" scoped="" ref="0x4098d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40995788" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40995788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40995960"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40995a40"/>
        <function-ref name="request" scoped="" ref="0x40995b20"/>
        <function-ref name="granted" scoped="" ref="0x40995c00"/>
        <function-ref name="isOwner" scoped="" ref="0x40995ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40991ce8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40991ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40991ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409903d8" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409903d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409905b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409a9448" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409a9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a9620"/>
        <function-ref name="write" scoped="" ref="0x409a9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409a9010" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409a9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a91e8"/>
        <function-ref name="write" scoped="" ref="0x409a92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40993ef0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40993ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409910e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409aab20" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409aab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aacf8"/>
        <function-ref name="write" scoped="" ref="0x409aadd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40993190" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40993190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40993840" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40993840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40993a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40990080" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40990080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40990258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409aba00" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409aba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409abbd8"/>
        <function-ref name="write" scoped="" ref="0x409abcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409abe38" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.SyncSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409abe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409aa050"/>
        <function-ref name="write" scoped="" ref="0x409aa130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x4099d5c8" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x4099d5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099d8a0"/>
        <function-ref name="write" scoped="" ref="0x4099d980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x409b8868" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409b8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409b8a40"/>
        <function-ref name="writeDone" scoped="" ref="0x409b8b20"/>
        <function-ref name="write" scoped="" ref="0x409b8c00"/>
        <function-ref name="beginRead" scoped="" ref="0x409b8ce0"/>
        <function-ref name="readDone" scoped="" ref="0x409b8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x409a4a40" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x409a4a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a4c18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x409a0b68" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x409a0b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0d40"/>
        <function-ref name="write" scoped="" ref="0x409a0e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x4099c448" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x4099c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099c620"/>
        <function-ref name="write" scoped="" ref="0x4099c700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x4099c880" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x4099c880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ca58"/>
        <function-ref name="write" scoped="" ref="0x4099cb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x409a24e8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409a24e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a26c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x409b9cb8" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409b9cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b9e90"/>
        <function-ref name="write" scoped="" ref="0x409b8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x4099f448" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x4099f448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099f620"/>
        <function-ref name="write" scoped="" ref="0x4099f700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x4099fcb8" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x4099fcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099fe90"/>
        <function-ref name="write" scoped="" ref="0x4099d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x4099ccb8" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x4099ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099ce90"/>
        <function-ref name="write" scoped="" ref="0x409bb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x409ba2b0" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x409ba2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba488"/>
        <function-ref name="write" scoped="" ref="0x409ba568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x409a5e50" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409a5e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409a4050"/>
        <function-ref name="abortRelease" scoped="" ref="0x409a4130"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409a4210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x409a1260" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409a1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a1438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x409a15b8" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x409a15b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x409a1990" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x409a1990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a1b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x409a2b98" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x409a2b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x4099f880" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x4099f880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099fa58"/>
        <function-ref name="write" scoped="" ref="0x4099fb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x4099f010" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x4099f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099f1e8"/>
        <function-ref name="write" scoped="" ref="0x4099f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x409a46e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x409a46e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a48c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x409ba6e8" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x409ba6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba8c0"/>
        <function-ref name="write" scoped="" ref="0x409ba9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x409b9880" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x409b9880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b9a58"/>
        <function-ref name="write" scoped="" ref="0x409b9b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x409bb5c8" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x409bb5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb7a0"/>
        <function-ref name="write" scoped="" ref="0x409bb880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x409a4390" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409a4390"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a4568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x409a0730" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x409a0730"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409a0908"/>
        <function-ref name="write" scoped="" ref="0x409a09e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x4099d190" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x4099d190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099d368"/>
        <function-ref name="write" scoped="" ref="0x4099d448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x409b8190" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x409b8190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409b8368"/>
        <function-ref name="writeDone" scoped="" ref="0x409b8448"/>
        <function-ref name="write" scoped="" ref="0x409b8528"/>
        <function-ref name="beginRead" scoped="" ref="0x409b8608"/>
        <function-ref name="readDone" scoped="" ref="0x409b86e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x409bb190" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x409bb190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bb368"/>
        <function-ref name="write" scoped="" ref="0x409bb448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x4099db00" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x4099db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099dcd8"/>
        <function-ref name="write" scoped="" ref="0x4099ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x409a4d98" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x409a4d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x4099c010" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x4099c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4099c1e8"/>
        <function-ref name="write" scoped="" ref="0x4099c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x409a5798" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x409a5798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409a5970"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409a5a50"/>
        <function-ref name="request" scoped="" ref="0x409a5b30"/>
        <function-ref name="granted" scoped="" ref="0x409a5c10"/>
        <function-ref name="isOwner" scoped="" ref="0x409a5cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x409a1ce8" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x409a1ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a1ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x409a03d8" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x409a03d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a05b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x409b9448" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x409b9448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b9620"/>
        <function-ref name="write" scoped="" ref="0x409b9700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x409b9010" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x409b9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409b91e8"/>
        <function-ref name="write" scoped="" ref="0x409b92c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x409a2ef0" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x409a2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a10e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x409bab20" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x409bab20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bacf8"/>
        <function-ref name="write" scoped="" ref="0x409badd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x409a2190" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409a2190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x409a2840" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x409a2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x409a0080" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x409a0080"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409a0258"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x409bba00" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x409bba00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409bbbd8"/>
        <function-ref name="write" scoped="" ref="0x409bbcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x409bbe38" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ControlC.RssiResource"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x409bbe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409ba050"/>
        <function-ref name="write" scoped="" ref="0x409ba130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x409b4968" loc="43:/opt/tinyos-2.1.0/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x409b4968"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x409b4b40"/>
        <function-ref name="changed" scoped="" ref="0x409b4c20"/>
        <function-ref name="amGroup" scoped="" ref="0x409b4d00"/>
        <function-ref name="setAddress" scoped="" ref="0x409b4de0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409c3390" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409c3390"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409c3568"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409c3648"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409c3728"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409c3808"/>
        <function-ref name="setCca" scoped="" ref="0x409c38e8"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409c39c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409c0468" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409c0468"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409c0640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Transmit" ref="0x409c6c50" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Transmit" scoped="" ref="0x409c6c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c6e28"/>
        <function-ref name="cancel" scoped="" ref="0x409c6f08"/>
        <function-ref name="modify" scoped="" ref="0x409c3010"/>
        <function-ref name="sendDone" scoped="" ref="0x409c30f0"/>
        <function-ref name="resend" scoped="" ref="0x409c31d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409c67c8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409c67c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409c69a0"/>
        <function-ref name="stop" scoped="" ref="0x409c6a80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409c08d0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitC.nc">
      <component-ref qname="CC2420TransmitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409c08d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409c0aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioBackoff" ref="0x409cf748" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioBackoff" scoped="" ref="0x409cf748"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioBackoff"/>
      </instance>
      <interface-functions>
        <function-ref name="requestCca" scoped="" ref="0x409cf920"/>
        <function-ref name="requestInitialBackoff" scoped="" ref="0x409cfa00"/>
        <function-ref name="setCongestionBackoff" scoped="" ref="0x409cfae0"/>
        <function-ref name="setInitialBackoff" scoped="" ref="0x409cfbc0"/>
        <function-ref name="setCca" scoped="" ref="0x409cfca0"/>
        <function-ref name="requestCongestionBackoff" scoped="" ref="0x409cfd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x409ea2b0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x409ea2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x409eadb0"/>
        <function-ref name="clear" scoped="" ref="0x409e8170"/>
        <function-ref name="isValid" scoped="" ref="0x409eaa00"/>
        <function-ref name="set" scoped="" ref="0x409e8520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="EnergyIndicator" ref="0x409cd0c8" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="EnergyIndicator" scoped="" ref="0x409cd0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409cd2a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXONCCA" ref="0x409de598" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x409de598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409de770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CaptureSFD" ref="0x409e0840" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CaptureSFD" scoped="" ref="0x409e0840"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x409e0a18"/>
        <function-ref name="disable" scoped="" ref="0x409e0af8"/>
        <function-ref name="captured" scoped="" ref="0x409e0bd8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x409e0cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BackoffTimer" ref="0x409cdb18" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BackoffTimer" scoped="" ref="0x409cdb18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409eb068"/>
        <function-ref name="fired" scoped="" ref="0x409cc820"/>
        <function-ref name="startAt" scoped="" ref="0x409ccd10"/>
        <function-ref name="isRunning" scoped="" ref="0x409cca98"/>
        <function-ref name="getAlarm" scoped="" ref="0x409eb2e0"/>
        <function-ref name="start" scoped="" ref="0x409cc308"/>
        <function-ref name="stop" scoped="" ref="0x409cc5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x409eb590" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x409eb590"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x409eb768"/>
        <function-ref name="getRssi" scoped="" ref="0x409eb848"/>
        <function-ref name="getPower" scoped="" ref="0x409eb928"/>
        <function-ref name="getLqi" scoped="" ref="0x409eba08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO_RAM" ref="0x409df338" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x409df338"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409df510"/>
        <function-ref name="write" scoped="" ref="0x409df5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXCTRL" ref="0x409df840" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x409df840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dfa18"/>
        <function-ref name="write" scoped="" ref="0x409dfaf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Receive" ref="0x409fac48" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x409fac48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409fae20"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x409faf00"/>
        <function-ref name="sfd" scoped="" ref="0x409dc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409cf010" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Transmit"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409cf1e8"/>
        <function-ref name="cancel" scoped="" ref="0x409cf2c8"/>
        <function-ref name="modify" scoped="" ref="0x409cf3a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409cf488"/>
        <function-ref name="resend" scoped="" ref="0x409cf568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ChipSpiResource" ref="0x409e1588" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x409e1588"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x409e1760"/>
        <function-ref name="abortRelease" scoped="" ref="0x409e1840"/>
        <function-ref name="attemptRelease" scoped="" ref="0x409e1920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHTX" ref="0x409de9c8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x409de9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409deba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x409e79a8" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x409e79a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409e7b80"/>
        <function-ref name="isInput" scoped="" ref="0x409e7c60"/>
        <function-ref name="toggle" scoped="" ref="0x409e7d40"/>
        <function-ref name="isOutput" scoped="" ref="0x409e7e20"/>
        <function-ref name="get" scoped="" ref="0x409e7f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x409e6010"/>
        <function-ref name="set" scoped="" ref="0x409e60f0"/>
        <function-ref name="clr" scoped="" ref="0x409e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409d0758" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409d0758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409d0930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x409ebc10" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x409ebc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x409ebde8"/>
        <function-ref name="getMetadata" scoped="" ref="0x409ebec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeSyncOffset" ref="0x409e0170" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x409e0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409e0348"/>
        <function-ref name="isSet" scoped="" ref="0x409e0428"/>
        <function-ref name="cancel" scoped="" ref="0x409e0508"/>
        <function-ref name="set" scoped="" ref="0x409e05e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MDMCTRL1" ref="0x409dee08" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x409dee08"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x409dd0f0"/>
        <function-ref name="write" scoped="" ref="0x409dd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x409e6e10" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x409e6e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x409e1010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x409e10f0"/>
        <function-ref name="request" scoped="" ref="0x409e11d0"/>
        <function-ref name="granted" scoped="" ref="0x409e12b0"/>
        <function-ref name="isOwner" scoped="" ref="0x409e1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CCA" ref="0x409e0eb8" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CCA" scoped="" ref="0x409e0eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409e7188"/>
        <function-ref name="isInput" scoped="" ref="0x409e7268"/>
        <function-ref name="toggle" scoped="" ref="0x409e7348"/>
        <function-ref name="isOutput" scoped="" ref="0x409e7428"/>
        <function-ref name="get" scoped="" ref="0x409e7508"/>
        <function-ref name="makeOutput" scoped="" ref="0x409e75e8"/>
        <function-ref name="set" scoped="" ref="0x409e76c8"/>
        <function-ref name="clr" scoped="" ref="0x409e77a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SNOP" ref="0x409dfd28" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x409dfd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409dff00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFD" ref="0x409e63d0" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFD" scoped="" ref="0x409e63d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409e65a8"/>
        <function-ref name="isInput" scoped="" ref="0x409e6688"/>
        <function-ref name="toggle" scoped="" ref="0x409e6768"/>
        <function-ref name="isOutput" scoped="" ref="0x409e6848"/>
        <function-ref name="get" scoped="" ref="0x409e6928"/>
        <function-ref name="makeOutput" scoped="" ref="0x409e6a08"/>
        <function-ref name="set" scoped="" ref="0x409e6ae8"/>
        <function-ref name="clr" scoped="" ref="0x409e6bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409dc1a0" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409dc1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409dc378"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409dc458"/>
        <function-ref name="led1On" scoped="" ref="0x409dc538"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409dc618"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409dc6f8"/>
        <function-ref name="get" scoped="" ref="0x409dc7d8"/>
        <function-ref name="led1Off" scoped="" ref="0x409dc8b8"/>
        <function-ref name="led2Off" scoped="" ref="0x409dcc38"/>
        <function-ref name="set" scoped="" ref="0x409dc998"/>
        <function-ref name="led0On" scoped="" ref="0x409dca78"/>
        <function-ref name="led2On" scoped="" ref="0x409dcb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409d0af8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409d0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d0cd0"/>
        <function-ref name="stop" scoped="" ref="0x409d0db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TXFIFO" ref="0x409e1b48" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x409e1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x409e1d20"/>
        <function-ref name="writeDone" scoped="" ref="0x409e1e00"/>
        <function-ref name="write" scoped="" ref="0x409e1ee0"/>
        <function-ref name="beginRead" scoped="" ref="0x409df010"/>
        <function-ref name="readDone" scoped="" ref="0x409df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="STXON" ref="0x409de168" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x409de168"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x409de340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ByteIndicator" ref="0x409cd550" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/transmit/CC2420TransmitP.nc">
      <component-ref qname="CC2420TransmitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ByteIndicator" scoped="" ref="0x409cd550"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x409cd728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40a4b368" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40a4b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4b640"/>
        <function-ref name="write" scoped="" ref="0x40a4b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40a45550" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40a45550"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a45728"/>
        <function-ref name="writeDone" scoped="" ref="0x40a45808"/>
        <function-ref name="write" scoped="" ref="0x40a458e8"/>
        <function-ref name="beginRead" scoped="" ref="0x40a459c8"/>
        <function-ref name="readDone" scoped="" ref="0x40a45aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40a2f840" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40a2f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2fa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40a4e920" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40a4e920"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4eaf8"/>
        <function-ref name="write" scoped="" ref="0x40a4ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40a4a190" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40a4a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4a368"/>
        <function-ref name="write" scoped="" ref="0x40a4a448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40a4a5c8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40a4a5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4a7a0"/>
        <function-ref name="write" scoped="" ref="0x40a4a880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40a50260" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40a50260"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a50438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40a46a00" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40a46a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a46bd8"/>
        <function-ref name="write" scoped="" ref="0x40a46cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40a4c270" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40a4c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4c448"/>
        <function-ref name="write" scoped="" ref="0x40a4c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40a4cae0" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40a4cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4ccb8"/>
        <function-ref name="write" scoped="" ref="0x40a4cd98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40a4aa00" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40a4aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4abd8"/>
        <function-ref name="write" scoped="" ref="0x40a4acb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40a48010" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40a48010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a481e8"/>
        <function-ref name="write" scoped="" ref="0x40a482c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40a30bd0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40a30bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40a30da8"/>
        <function-ref name="abortRelease" scoped="" ref="0x40a30e88"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40a2f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40a4f010" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40a4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40a4f368" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a4f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4f5c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40a4f740" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40a4f740"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4f918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40a50910" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40a50910"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a50ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40a4c6a8" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40a4c6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4c880"/>
        <function-ref name="write" scoped="" ref="0x40a4c960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40a4ed58" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40a4ed58"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4c010"/>
        <function-ref name="write" scoped="" ref="0x40a4c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40a2f4e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40a2f4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2f6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40a48448" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40a48448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a48620"/>
        <function-ref name="write" scoped="" ref="0x40a48700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40a465c8" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40a465c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a467a0"/>
        <function-ref name="write" scoped="" ref="0x40a46880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40a492b0" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40a492b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a49488"/>
        <function-ref name="write" scoped="" ref="0x40a49568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40a2f190" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40a2f190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2f368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40a4e4e8" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40a4e4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4e6c0"/>
        <function-ref name="write" scoped="" ref="0x40a4e7a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40a4cf18" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40a4cf18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4b108"/>
        <function-ref name="write" scoped="" ref="0x40a4b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40a46e38" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a46e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a45050"/>
        <function-ref name="writeDone" scoped="" ref="0x40a45130"/>
        <function-ref name="write" scoped="" ref="0x40a45210"/>
        <function-ref name="beginRead" scoped="" ref="0x40a452f0"/>
        <function-ref name="readDone" scoped="" ref="0x40a453d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40a4ae38" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40a4ae38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a49050"/>
        <function-ref name="write" scoped="" ref="0x40a49130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40a4b8a0" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40a4b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4ba78"/>
        <function-ref name="write" scoped="" ref="0x40a4bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40a2fb98" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40a2fb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a2fd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40a4bcd8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40a4bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a4beb0"/>
        <function-ref name="write" scoped="" ref="0x40a4a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40a30518" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40a30518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a306f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a307d0"/>
        <function-ref name="request" scoped="" ref="0x40a308b0"/>
        <function-ref name="granted" scoped="" ref="0x40a30990"/>
        <function-ref name="isOwner" scoped="" ref="0x40a30a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40a4fa98" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40a4fa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4fc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40a4e190" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40a4e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4e368"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40a46190" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40a46190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a46368"/>
        <function-ref name="write" scoped="" ref="0x40a46448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40a48cb8" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40a48cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a48e90"/>
        <function-ref name="write" scoped="" ref="0x40a46010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40a50c68" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a50c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a50e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40a48880" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40a48880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a48a58"/>
        <function-ref name="write" scoped="" ref="0x40a48b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40a2fef0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40a2fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a500e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40a505b8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40a505b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a50790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40a4fdf0" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40a4fdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a4e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40a496e8" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40a496e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a498c0"/>
        <function-ref name="write" scoped="" ref="0x40a499a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40a49b20" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420TransmitC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40a49b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40a49cf8"/>
        <function-ref name="write" scoped="" ref="0x40a49dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a602d8" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a602d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a604b0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a60590"/>
        <function-ref name="sfd" scoped="" ref="0x40a60670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a60818" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a60818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a609f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a60cb0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a60cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a60e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a41d98" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveC.nc">
      <component-ref qname="CC2420ReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a41d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a60010"/>
        <function-ref name="stop" scoped="" ref="0x40a600f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFO" ref="0x40a5ba18" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFO" scoped="" ref="0x40a5ba18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a5bbf0"/>
        <function-ref name="isInput" scoped="" ref="0x40a5bcd0"/>
        <function-ref name="toggle" scoped="" ref="0x40a5bdb0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a5be90"/>
        <function-ref name="get" scoped="" ref="0x40a5a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a5a0f0"/>
        <function-ref name="set" scoped="" ref="0x40a5a1d0"/>
        <function-ref name="clr" scoped="" ref="0x40a5a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Config" ref="0x40a57990" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Config" scoped="" ref="0x40a57990"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Config"/>
      </instance>
      <interface-functions>
        <function-ref name="setAutoAck" scoped="" ref="0x40a57b68"/>
        <function-ref name="isAddressRecognitionEnabled" scoped="" ref="0x40a57c48"/>
        <function-ref name="setAddressRecognition" scoped="" ref="0x40a57d28"/>
        <function-ref name="syncDone" scoped="" ref="0x40a57e08"/>
        <function-ref name="isHwAddressRecognitionDefault" scoped="" ref="0x40a57ee8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40a56010"/>
        <function-ref name="setChannel" scoped="" ref="0x40a560f0"/>
        <function-ref name="isAutoAckEnabled" scoped="" ref="0x40a561d0"/>
        <function-ref name="setPanAddr" scoped="" ref="0x40a562b0"/>
        <function-ref name="isHwAutoAckDefault" scoped="" ref="0x40a56390"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40a56470"/>
        <function-ref name="sync" scoped="" ref="0x40a56550"/>
        <function-ref name="getChannel" scoped="" ref="0x40a56630"/>
        <function-ref name="getPanAddr" scoped="" ref="0x40a56790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveDone_task" ref="0x40a6e178" loc="115:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveDone_task" scoped="" ref="0x40a6e178"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a6e350"/>
        <function-ref name="runTask" scoped="" ref="0x40a6e430"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FIFOP" ref="0x40a5a4c8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FIFOP" scoped="" ref="0x40a5a4c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a5a6a0"/>
        <function-ref name="isInput" scoped="" ref="0x40a5a780"/>
        <function-ref name="toggle" scoped="" ref="0x40a5a860"/>
        <function-ref name="isOutput" scoped="" ref="0x40a5a940"/>
        <function-ref name="get" scoped="" ref="0x40a5aa20"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a5ab00"/>
        <function-ref name="set" scoped="" ref="0x40a5abe0"/>
        <function-ref name="clr" scoped="" ref="0x40a5acc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40a56b40" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40a56b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a556b8"/>
        <function-ref name="clear" scoped="" ref="0x40a55a68"/>
        <function-ref name="isValid" scoped="" ref="0x40a55308"/>
        <function-ref name="set" scoped="" ref="0x40a55e18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420Packet" ref="0x40a58e68" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a58e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a57050"/>
        <function-ref name="getRssi" scoped="" ref="0x40a57130"/>
        <function-ref name="getPower" scoped="" ref="0x40a57210"/>
        <function-ref name="getLqi" scoped="" ref="0x40a572f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Receive" ref="0x40a5c1f8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Receive" scoped="" ref="0x40a5c1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a5c3d0"/>
        <function-ref name="sfd_dropped" scoped="" ref="0x40a5c4b0"/>
        <function-ref name="sfd" scoped="" ref="0x40a5c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SACK" ref="0x40a58600" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40a58600"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a587d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x40a5b010" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40a5b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a5b1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a5b2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a5b3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a5b488"/>
        <function-ref name="get" scoped="" ref="0x40a5b568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a5b648"/>
        <function-ref name="set" scoped="" ref="0x40a5b728"/>
        <function-ref name="clr" scoped="" ref="0x40a5b808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a5f920" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a5f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a5faf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40a574f8" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a574f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a576d0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a577b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a5c738" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a5c738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a5c910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x40a596d0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x40a596d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40a598a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40a59988"/>
        <function-ref name="request" scoped="" ref="0x40a59a68"/>
        <function-ref name="granted" scoped="" ref="0x40a59b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40a59c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RXFIFO" ref="0x40a59e50" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40a59e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40a58050"/>
        <function-ref name="writeDone" scoped="" ref="0x40a58130"/>
        <function-ref name="write" scoped="" ref="0x40a58210"/>
        <function-ref name="beginRead" scoped="" ref="0x40a582f0"/>
        <function-ref name="readDone" scoped="" ref="0x40a583d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketIndicator" ref="0x40a5cbd0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketIndicator" scoped="" ref="0x40a5cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveIndicator"/>
      </instance>
      <interface-functions>
        <function-ref name="isReceiving" scoped="" ref="0x40a5cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a53288" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a53288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a53460"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a53540"/>
        <function-ref name="led1On" scoped="" ref="0x40a53620"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a53700"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a537e0"/>
        <function-ref name="get" scoped="" ref="0x40a538c0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a539a0"/>
        <function-ref name="led2Off" scoped="" ref="0x40a53d20"/>
        <function-ref name="set" scoped="" ref="0x40a53a80"/>
        <function-ref name="led0On" scoped="" ref="0x40a53b60"/>
        <function-ref name="led2On" scoped="" ref="0x40a53c40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InterruptFIFOP" ref="0x40a59010" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterruptFIFOP" scoped="" ref="0x40a59010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40a591e8"/>
        <function-ref name="disable" scoped="" ref="0x40a592c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40a593a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40a59488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SFLUSHRX" ref="0x40a58a30" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40a58a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40a58c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a5fcc0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/receive/CC2420ReceiveP.nc">
      <component-ref qname="CC2420ReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a5fcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a5fe98"/>
        <function-ref name="stop" scoped="" ref="0x40a5c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40aa5788" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40aa5788"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40aa5960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40a84598" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40a84598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a84770"/>
        <function-ref name="getRssi" scoped="" ref="0x40a84850"/>
        <function-ref name="getPower" scoped="" ref="0x40a84930"/>
        <function-ref name="getLqi" scoped="" ref="0x40a84a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40aa5de0" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40aa5de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40aa4920"/>
        <function-ref name="clear" scoped="" ref="0x40aa4cd0"/>
        <function-ref name="isValid" scoped="" ref="0x40aa4570"/>
        <function-ref name="set" scoped="" ref="0x40aa20a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40aa52d8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40aa52d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40aa54b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40aa5590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40aa0010" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40aa0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aa01e8"/>
        <function-ref name="isSet" scoped="" ref="0x40aa02c8"/>
        <function-ref name="cancel" scoped="" ref="0x40aa03a8"/>
        <function-ref name="set" scoped="" ref="0x40aa0488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40aa27e0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40aa27e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40aa13c0"/>
        <function-ref name="clear" scoped="" ref="0x40aa1770"/>
        <function-ref name="isValid" scoped="" ref="0x40aa1010"/>
        <function-ref name="set" scoped="" ref="0x40aa1b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a84c80" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketC.nc">
      <component-ref qname="CC2420PacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a84c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a84e58"/>
        <function-ref name="noAck" scoped="" ref="0x40aa5010"/>
        <function-ref name="wasAcked" scoped="" ref="0x40aa50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40a9b010" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40a9b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40a9b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420Packet" ref="0x40aa0dd8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420Packet" scoped="" ref="0x40aa0dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="setPower" scoped="" ref="0x40a9c010"/>
        <function-ref name="getRssi" scoped="" ref="0x40a9c0f0"/>
        <function-ref name="getPower" scoped="" ref="0x40a9c1d0"/>
        <function-ref name="getLqi" scoped="" ref="0x40a9c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40a97eb0" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40a97eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40a960c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40a961a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a96280"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a96360"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40a96440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStamp32khz" ref="0x40a9b668" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp32khz" scoped="" ref="0x40a9b668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a9a198"/>
        <function-ref name="clear" scoped="" ref="0x40a9a548"/>
        <function-ref name="isValid" scoped="" ref="0x40a9bdb8"/>
        <function-ref name="set" scoped="" ref="0x40a9a8f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CC2420PacketBody" ref="0x40a9caa0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40a9caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40a9cc78"/>
        <function-ref name="getMetadata" scoped="" ref="0x40a9cd58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40a97888" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40a97888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a97a60"/>
        <function-ref name="isSet" scoped="" ref="0x40a97b40"/>
        <function-ref name="cancel" scoped="" ref="0x40a97c20"/>
        <function-ref name="set" scoped="" ref="0x40a97d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime32khz" ref="0x40ab7440" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime32khz" scoped="" ref="0x40ab7440"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ab7a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x40ab7e98" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x40ab7e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ab94f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40a99100" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40a99100"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40a99c00"/>
        <function-ref name="clear" scoped="" ref="0x40a97010"/>
        <function-ref name="isValid" scoped="" ref="0x40a99850"/>
        <function-ref name="set" scoped="" ref="0x40a973c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40a9c520" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/packet/CC2420PacketP.nc">
      <component-ref qname="CC2420PacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40a9c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40a9c6f8"/>
        <function-ref name="noAck" scoped="" ref="0x40a9c7d8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40a9c8b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40add5d8" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40add5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40addc20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40adc010" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="CC2420PacketC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40adc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038ae10"/>
            <typename><typedef-ref name="T32khz" ref="0x40389010"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40adc760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40adcc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40adc9d8"/>
        <function-ref name="overflow" scoped="" ref="0x40adcec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40ad47f0" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40ad47f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ad1330"/>
        <function-ref name="fired" scoped="" ref="0x40ad3590"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ad3c98"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ad3a40"/>
        <function-ref name="getdt" scoped="" ref="0x40ad17e0"/>
        <function-ref name="gett0" scoped="" ref="0x40ad1588"/>
        <function-ref name="isRunning" scoped="" ref="0x40ad37e8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ad4e18"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ad1010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ad30b8"/>
        <function-ref name="stop" scoped="" ref="0x40ad3338"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ad1b40" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ad1b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad0200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ad4040" loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ad4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ad4218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x40aee4f0" loc="29:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x40aee4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40aeec40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40aed150"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40aeeeb8"/>
        <function-ref name="overflow" scoped="" ref="0x40aed3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40acd240" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40acd240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40acd418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x40acd808" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x40acd808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aefd58"/>
        <function-ref name="fired" scoped="" ref="0x40aef528"/>
        <function-ref name="startAt" scoped="" ref="0x40aefa18"/>
        <function-ref name="isRunning" scoped="" ref="0x40aef7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40aee010"/>
        <function-ref name="start" scoped="" ref="0x40aef010"/>
        <function-ref name="stop" scoped="" ref="0x40aef2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40b20198" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b20198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b1f640"/>
        <function-ref name="fired" scoped="" ref="0x40b20e00"/>
        <function-ref name="startAt" scoped="" ref="0x40b1f300"/>
        <function-ref name="isRunning" scoped="" ref="0x40b1f088"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b1f8b8"/>
        <function-ref name="start" scoped="" ref="0x40b208e8"/>
        <function-ref name="stop" scoped="" ref="0x40b20b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40aead50" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40aead50"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x4033aae0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x4033aae0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aeaf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b1fbe8" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b1fbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1e380"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b1e870"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b1e5f8"/>
        <function-ref name="overflow" scoped="" ref="0x40b1eae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x41137790" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x41137790"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getControl" scoped="" ref="0x41137968"/>
        <function-ref name="getInterruptFlag" scoped="" ref="0x41137a48"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x41137b28"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x41137c08"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x41137ce8"/>
        <function-ref name="setControl" scoped="" ref="0x41137dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x410fd990" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410fd990"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4113de40"/>
        <function-ref name="fired" scoped="" ref="0x4113d610"/>
        <function-ref name="startAt" scoped="" ref="0x4113db00"/>
        <function-ref name="isRunning" scoped="" ref="0x4113d888"/>
        <function-ref name="getAlarm" scoped="" ref="0x4113b0d8"/>
        <function-ref name="start" scoped="" ref="0x4113d0f8"/>
        <function-ref name="stop" scoped="" ref="0x4113d398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410fd558" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410fd558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410fd730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4113b408" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4113b408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4113bb58"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4113a068"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4113bdd0"/>
        <function-ref name="overflow" scoped="" ref="0x4113a2e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x41135a20" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x41135a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="controlBusy" scoped="" ref="0x41135bf8"/>
        <function-ref name="compareBusy" scoped="" ref="0x41135cd8"/>
        <function-ref name="setTimer0Asynchronous" scoped="" ref="0x41135db8"/>
        <function-ref name="countBusy" scoped="" ref="0x41135e98"/>
        <function-ref name="getAssr" scoped="" ref="0x41134010"/>
        <function-ref name="setAssr" scoped="" ref="0x411340f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x41136010" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x41136010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x41135578"/>
        <function-ref name="fired" scoped="" ref="0x41136b70"/>
        <function-ref name="get" scoped="" ref="0x41136658"/>
        <function-ref name="reset" scoped="" ref="0x41136de8"/>
        <function-ref name="isOn" scoped="" ref="0x411357f0"/>
        <function-ref name="set" scoped="" ref="0x411368d0"/>
        <function-ref name="start" scoped="" ref="0x41135088"/>
        <function-ref name="stop" scoped="" ref="0x41135300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4113a5d0" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm128AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4113a5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x41137048"/>
        <function-ref name="test" scoped="" ref="0x41139b30"/>
        <function-ref name="get" scoped="" ref="0x4113ac18"/>
        <function-ref name="setScale" scoped="" ref="0x411372c0"/>
        <function-ref name="getScale" scoped="" ref="0x41137560"/>
        <function-ref name="reset" scoped="" ref="0x411393c8"/>
        <function-ref name="overflow" scoped="" ref="0x41139150"/>
        <function-ref name="isOn" scoped="" ref="0x41139da8"/>
        <function-ref name="set" scoped="" ref="0x4113ae90"/>
        <function-ref name="start" scoped="" ref="0x41139640"/>
        <function-ref name="stop" scoped="" ref="0x411398b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b29d08" loc="63:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b29d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b29ee0"/>
        <function-ref name="runTask" scoped="" ref="0x40b28010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b2b398" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b2b398"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b29840"/>
        <function-ref name="fired" scoped="" ref="0x40b29010"/>
        <function-ref name="startAt" scoped="" ref="0x40b29500"/>
        <function-ref name="isRunning" scoped="" ref="0x40b29288"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b29ab8"/>
        <function-ref name="start" scoped="" ref="0x40b2bae8"/>
        <function-ref name="stop" scoped="" ref="0x40b2bd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b1b0a0" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b1b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b2cb88"/>
        <function-ref name="fired" scoped="" ref="0x40b1be20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b2c548"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b2c2f0"/>
        <function-ref name="getdt" scoped="" ref="0x40b2b048"/>
        <function-ref name="gett0" scoped="" ref="0x40b2cde0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b2c098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b1b6c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b2c868"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b1b948"/>
        <function-ref name="stop" scoped="" ref="0x40b1bbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b6e4b8" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b6e4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b6e690"/>
        <function-ref name="runTask" scoped="" ref="0x40b6e770"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b71220" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b71220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b6fd58"/>
        <function-ref name="fired" scoped="" ref="0x40b6f010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b6f718"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b6f4c0"/>
        <function-ref name="getdt" scoped="" ref="0x40b6e268"/>
        <function-ref name="gett0" scoped="" ref="0x40b6e010"/>
        <function-ref name="isRunning" scoped="" ref="0x40b6f268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b71848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b6fa38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b71ac8"/>
        <function-ref name="stop" scoped="" ref="0x40b71d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b4dea8" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b4dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b72a48"/>
        <function-ref name="fired" scoped="" ref="0x40b4cc88"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b723e8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b72180"/>
        <function-ref name="getdt" scoped="" ref="0x40b72f18"/>
        <function-ref name="gett0" scoped="" ref="0x40b72cb0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b4cef0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b4c500"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b72718"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b4c790"/>
        <function-ref name="stop" scoped="" ref="0x40b4ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40b6d970" loc="37:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40b6d970"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40b6b360" loc="38:/opt/tinyos-2.1.0/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b6b360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b6bab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b6a010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b6bd28"/>
        <function-ref name="overflow" scoped="" ref="0x40b6a288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b68458" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="CC2420PacketC.DummyTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b68458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b62010"/>
        <function-ref name="fired" scoped="" ref="0x40b67268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b67970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b67718"/>
        <function-ref name="getdt" scoped="" ref="0x40b624c0"/>
        <function-ref name="gett0" scoped="" ref="0x40b62268"/>
        <function-ref name="isRunning" scoped="" ref="0x40b674c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b68a80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b67c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b68d00"/>
        <function-ref name="stop" scoped="" ref="0x40b67010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40b61670" loc="38:/opt/tinyos-2.1.0/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40b61670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b85170"/>
        <function-ref name="fired" scoped="" ref="0x40b86408"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b86b10"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b868b8"/>
        <function-ref name="getdt" scoped="" ref="0x40b85620"/>
        <function-ref name="gett0" scoped="" ref="0x40b853c8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b86660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b61c98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b86e30"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b61f18"/>
        <function-ref name="stop" scoped="" ref="0x40b861b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL1" ref="0x40b7a190" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL1" scoped="" ref="0x40b7a190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7a468"/>
        <function-ref name="write" scoped="" ref="0x40b7a548"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO" ref="0x40b74430" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO" scoped="" ref="0x40b74430"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b74608"/>
        <function-ref name="writeDone" scoped="" ref="0x40b746e8"/>
        <function-ref name="write" scoped="" ref="0x40b747c8"/>
        <function-ref name="beginRead" scoped="" ref="0x40b748a8"/>
        <function-ref name="readDone" scoped="" ref="0x40b74988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXCAL" ref="0x40b80598" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXCAL" scoped="" ref="0x40b80598"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL0" ref="0x40b7c7a0" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL0" scoped="" ref="0x40b7c7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7c978"/>
        <function-ref name="write" scoped="" ref="0x40b7ca58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL1" ref="0x40b79010" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL1" scoped="" ref="0x40b79010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b791e8"/>
        <function-ref name="write" scoped="" ref="0x40b792c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BATTMON" ref="0x40b79448" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BATTMON" scoped="" ref="0x40b79448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b79620"/>
        <function-ref name="write" scoped="" ref="0x40b79700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXONCCA" ref="0x40b7f010" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXONCCA" scoped="" ref="0x40b7f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXFIFO_RAM" ref="0x40b75880" loc="87:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXFIFO_RAM" scoped="" ref="0x40b75880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75a58"/>
        <function-ref name="write" scoped="" ref="0x40b75b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSSI" ref="0x40b7b030" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSI" scoped="" ref="0x40b7b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7b208"/>
        <function-ref name="write" scoped="" ref="0x40b7b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TXCTRL" ref="0x40b7b8a0" loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TXCTRL" scoped="" ref="0x40b7b8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7ba78"/>
        <function-ref name="write" scoped="" ref="0x40b7bb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG0" ref="0x40b79880" loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG0" scoped="" ref="0x40b79880"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b79a58"/>
        <function-ref name="write" scoped="" ref="0x40b79b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANAND" ref="0x40b78e38" loc="79:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANAND" scoped="" ref="0x40b78e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76050"/>
        <function-ref name="write" scoped="" ref="0x40b76130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ChipSpiResource" ref="0x40b81988" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ChipSpiResource" scoped="" ref="0x40b81988"/></type-interface>
      <instance>
        <interfacedef-ref qname="ChipSpiResource"/>
      </instance>
      <interface-functions>
        <function-ref name="releasing" scoped="" ref="0x40b81b60"/>
        <function-ref name="abortRelease" scoped="" ref="0x40b81c40"/>
        <function-ref name="attemptRelease" scoped="" ref="0x40b81d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHTX" ref="0x40b7fd70" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHTX" scoped="" ref="0x40b7fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACK" ref="0x40b7e190" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACK" scoped="" ref="0x40b7e190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SACKPEND" ref="0x40b7e568" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SACKPEND" scoped="" ref="0x40b7e568"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7e740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCOFF" ref="0x40b7f6c0" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCOFF" scoped="" ref="0x40b7f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SYNCWORD" ref="0x40b7b468" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SYNCWORD" scoped="" ref="0x40b7b468"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7b640"/>
        <function-ref name="write" scoped="" ref="0x40b7b720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MDMCTRL1" ref="0x40b7cbd8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MDMCTRL1" scoped="" ref="0x40b7cbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7cdb0"/>
        <function-ref name="write" scoped="" ref="0x40b7ce90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SXOSCON" ref="0x40b80240" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SXOSCON" scoped="" ref="0x40b80240"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANOR" ref="0x40b762b0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANOR" scoped="" ref="0x40b762b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76488"/>
        <function-ref name="write" scoped="" ref="0x40b76568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SHORTADR" ref="0x40b75448" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SHORTADR" scoped="" ref="0x40b75448"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b75620"/>
        <function-ref name="write" scoped="" ref="0x40b75700"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDL" ref="0x40b78190" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDL" scoped="" ref="0x40b78190"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78368"/>
        <function-ref name="write" scoped="" ref="0x40b78448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SNOP" ref="0x40b81ea0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SNOP" scoped="" ref="0x40b81ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b800c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MAIN" ref="0x40b7c368" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MAIN" scoped="" ref="0x40b7c368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7c540"/>
        <function-ref name="write" scoped="" ref="0x40b7c620"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXCTRL0" ref="0x40b7bcd8" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXCTRL0" scoped="" ref="0x40b7bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7beb0"/>
        <function-ref name="write" scoped="" ref="0x40b7a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RXFIFO" ref="0x40b75cb8" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RXFIFO" scoped="" ref="0x40b75cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Fifo"/>
      </instance>
      <interface-functions>
        <function-ref name="continueRead" scoped="" ref="0x40b75e90"/>
        <function-ref name="writeDone" scoped="" ref="0x40b74010"/>
        <function-ref name="write" scoped="" ref="0x40b740f0"/>
        <function-ref name="beginRead" scoped="" ref="0x40b741d0"/>
        <function-ref name="readDone" scoped="" ref="0x40b742b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IOCFG1" ref="0x40b79cb8" loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IOCFG1" scoped="" ref="0x40b79cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b79e90"/>
        <function-ref name="write" scoped="" ref="0x40b78010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSCTRL" ref="0x40b7a6c8" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSCTRL" scoped="" ref="0x40b7a6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7a8a0"/>
        <function-ref name="write" scoped="" ref="0x40b7a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXON" ref="0x40b808f0" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXON" scoped="" ref="0x40b808f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SECCTRL0" ref="0x40b7ab00" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SECCTRL0" scoped="" ref="0x40b7ab00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b7acd8"/>
        <function-ref name="write" scoped="" ref="0x40b7adb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b812d0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b812d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b814a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b81588"/>
        <function-ref name="request" scoped="" ref="0x40b81668"/>
        <function-ref name="granted" scoped="" ref="0x40b81748"/>
        <function-ref name="isOwner" scoped="" ref="0x40b81828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRXDEC" ref="0x40b7e8c0" loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRXDEC" scoped="" ref="0x40b7e8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7ea98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SAES" ref="0x40b7c010" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SAES" scoped="" ref="0x40b7c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PANID" ref="0x40b75010" loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PANID" scoped="" ref="0x40b75010"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b751e8"/>
        <function-ref name="write" scoped="" ref="0x40b752c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IEEEADR" ref="0x40b76b20" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IEEEADR" scoped="" ref="0x40b76b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Ram"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76cf8"/>
        <function-ref name="write" scoped="" ref="0x40b76dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SFLUSHRX" ref="0x40b7fa18" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SFLUSHRX" scoped="" ref="0x40b7fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AGCCTRL" ref="0x40b766e8" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AGCCTRL" scoped="" ref="0x40b766e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b768c0"/>
        <function-ref name="write" scoped="" ref="0x40b769a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXON" ref="0x40b80c48" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXON" scoped="" ref="0x40b80c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b80e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SRFOFF" ref="0x40b7f368" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SRFOFF" scoped="" ref="0x40b7f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7f540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="STXENC" ref="0x40b7ec18" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="STXENC" scoped="" ref="0x40b7ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Strobe"/>
      </instance>
      <interface-functions>
        <function-ref name="strobe" scoped="" ref="0x40b7edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MANFIDH" ref="0x40b785c8" loc="77:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MANFIDH" scoped="" ref="0x40b785c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b787a0"/>
        <function-ref name="write" scoped="" ref="0x40b78880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FSMTC" ref="0x40b78a00" loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/spi/CC2420SpiC.nc">
      <component-ref qname="CC2420ReceiveC.Spi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FSMTC" scoped="" ref="0x40b78a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420Register"/>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b78bd8"/>
        <function-ref name="write" scoped="" ref="0x40b78cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40b8a2a8" loc="35:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b8a2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b8a480"/>
        <function-ref name="rand32" scoped="" ref="0x40b8a560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40b889a8" loc="34:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40b889a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b8a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b8d770" loc="33:/opt/tinyos-2.1.0/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b8d770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b8d948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40baccf8" loc="37:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40baccf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40baced0"/>
        <function-ref name="rand32" scoped="" ref="0x40bab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40bac438" loc="36:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40bac438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40baca60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b8af00" loc="35:/opt/tinyos-2.1.0/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b8af00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40b8b010" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="CC2420CsmaC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b8b1e8"/>
        <function-ref name="toIdle" scoped="" ref="0x40b8b2c8"/>
        <function-ref name="isState" scoped="" ref="0x40b8b3a8"/>
        <function-ref name="isIdle" scoped="" ref="0x40b8b488"/>
        <function-ref name="requestState" scoped="" ref="0x40b8b568"/>
        <function-ref name="forceState" scoped="" ref="0x40b8b648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ba15a8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ba15a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba1780"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba1860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba1940"/>
        <function-ref name="cancel" scoped="" ref="0x40ba1a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba1b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bade08" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendC.nc">
      <component-ref qname="UniqueSendC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bade08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ba1010"/>
        <function-ref name="getPayload" scoped="" ref="0x40ba10f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ba11d0"/>
        <function-ref name="cancel" scoped="" ref="0x40ba12b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ba1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40b9ef00" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40b9ef00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9d0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40b9d1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9d2b0"/>
        <function-ref name="cancel" scoped="" ref="0x40b9d390"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40b9e448" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b9e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b9e620"/>
        <function-ref name="getPayload" scoped="" ref="0x40b9e700"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b9e7e0"/>
        <function-ref name="cancel" scoped="" ref="0x40b9e8c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b9e9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x40b9dda0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40b9dda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40b9c010"/>
        <function-ref name="rand32" scoped="" ref="0x40b9c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b9eb10" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b9eb10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b9ece8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40b9c2d8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40b9c2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40b9c4b0"/>
        <function-ref name="getMetadata" scoped="" ref="0x40b9c590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="State" ref="0x40b9d5e8" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueSendP.nc">
      <component-ref qname="UniqueSendP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40b9d5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b9d7c0"/>
        <function-ref name="toIdle" scoped="" ref="0x40b9d8a0"/>
        <function-ref name="isState" scoped="" ref="0x40b9d980"/>
        <function-ref name="isIdle" scoped="" ref="0x40b9da60"/>
        <function-ref name="requestState" scoped="" ref="0x40b9db40"/>
        <function-ref name="forceState" scoped="" ref="0x40b9dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40ba02d0" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="UniqueSendC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40ba02d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ba04a8"/>
        <function-ref name="toIdle" scoped="" ref="0x40ba0588"/>
        <function-ref name="isState" scoped="" ref="0x40ba0668"/>
        <function-ref name="isIdle" scoped="" ref="0x40ba0748"/>
        <function-ref name="requestState" scoped="" ref="0x40ba0828"/>
        <function-ref name="forceState" scoped="" ref="0x40ba0908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb7260" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb7260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb7438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ba3958" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ba3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ba3b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40ba3d80" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveC.nc">
      <component-ref qname="UniqueReceiveC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40ba3d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bb4a80" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bb4a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb4c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb4658" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb4658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb4830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bb7ec0" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bb7ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb40c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bb4e40" loc="50:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bb4e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bb3050"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bb3130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DuplicateReceive" ref="0x40bb4310" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/unique/UniqueReceiveP.nc">
      <component-ref qname="UniqueReceiveP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DuplicateReceive" scoped="" ref="0x40bb4310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bb44e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bcaa20" loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bcaa20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bcabf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bcadd0" loc="69:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bcadd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc9010"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc90f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc91d0"/>
        <function-ref name="cancel" scoped="" ref="0x40bc92b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bb9f08" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bb9f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bca0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bca1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bca2b0"/>
        <function-ref name="cancel" scoped="" ref="0x40bca390"/>
        <function-ref name="sendDone" scoped="" ref="0x40bca470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bca5f8" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkC.nc">
      <component-ref qname="CC2420TinyosNetworkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bca5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bca7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bc50c8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bc50c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc52a0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc5380"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc5460"/>
        <function-ref name="cancel" scoped="" ref="0x40bc5540"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc5620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bc5830" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bc5830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bc9e30" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bc9e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bc6050"/>
        <function-ref name="getPayload" scoped="" ref="0x40bc6130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bc6210"/>
        <function-ref name="cancel" scoped="" ref="0x40bc62f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bc63d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NonTinyosReceive" ref="0x40bc6ca8" loc="48:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NonTinyosReceive" scoped="" ref="0x40bc6ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc6e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CC2420PacketBody" ref="0x40bc5bf0" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CC2420PacketBody" scoped="" ref="0x40bc5bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="CC2420PacketBody"/>
      </instance>
      <interface-functions>
        <function-ref name="getHeader" scoped="" ref="0x40bc5dc8"/>
        <function-ref name="getMetadata" scoped="" ref="0x40bc5ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bc6558" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lowpan/CC2420TinyosNetworkP.nc">
      <component-ref qname="CC2420TinyosNetworkP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bc6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bc6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bde010" loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bde010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bde1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40bde2c8"/>
        <function-ref name="start" scoped="" ref="0x40bde3a8"/>
        <function-ref name="stop" scoped="" ref="0x40bde488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bdeed0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bdeed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bdd0c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bdd1a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bdd280"/>
        <function-ref name="cancel" scoped="" ref="0x40bdd360"/>
        <function-ref name="sendDone" scoped="" ref="0x40bdd440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40bdd650" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40bdd650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdd828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40bb89a8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40bb89a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bb8b80"/>
        <function-ref name="getPayload" scoped="" ref="0x40bb8c60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bb8d40"/>
        <function-ref name="cancel" scoped="" ref="0x40bb8e20"/>
        <function-ref name="sendDone" scoped="" ref="0x40bb8f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40be0470" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40be0470"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40be0648"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40be0728"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40be0808"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40be08e8"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40be09c8"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40be0aa8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40be0b88"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40be0c68"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40be0d48"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40be0e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendState" ref="0x40bde680" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendState" scoped="" ref="0x40bde680"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bde858"/>
        <function-ref name="toIdle" scoped="" ref="0x40bde938"/>
        <function-ref name="isState" scoped="" ref="0x40bdea18"/>
        <function-ref name="isIdle" scoped="" ref="0x40bdeaf8"/>
        <function-ref name="requestState" scoped="" ref="0x40bdebd8"/>
        <function-ref name="forceState" scoped="" ref="0x40bdecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40bdda70" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40bdda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bddc48"/>
        <function-ref name="stopDone" scoped="" ref="0x40bddd28"/>
        <function-ref name="start" scoped="" ref="0x40bdde08"/>
        <function-ref name="stop" scoped="" ref="0x40bddee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40be00a8" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplC.nc">
      <component-ref qname="DummyLplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40be00a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be0280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bdc6b0" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/lpl/DummyLplP.nc">
      <component-ref qname="DummyLplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bdc6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="getLocalSleepInterval" scoped="" ref="0x40bdc888"/>
        <function-ref name="getRxDutyCycle" scoped="" ref="0x40bdc968"/>
        <function-ref name="sleepIntervalToDutyCycle" scoped="" ref="0x40bdca48"/>
        <function-ref name="getLocalDutyCycle" scoped="" ref="0x40bdcb28"/>
        <function-ref name="setRxSleepInterval" scoped="" ref="0x40bdcc08"/>
        <function-ref name="setLocalDutyCycle" scoped="" ref="0x40bdcce8"/>
        <function-ref name="setRxDutyCycle" scoped="" ref="0x40bdcdc8"/>
        <function-ref name="dutyCycleToSleepInterval" scoped="" ref="0x40bdcea8"/>
        <function-ref name="getRxSleepInterval" scoped="" ref="0x40bd9010"/>
        <function-ref name="setLocalSleepInterval" scoped="" ref="0x40bd90f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="State" ref="0x40bdb338" loc="67:/opt/tinyos-2.1.0/tos/system/StateC.nc">
      <component-ref qname="DummyLplC.StateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="State" scoped="" ref="0x40bdb338"/></type-interface>
      <instance>
        <interfacedef-ref qname="State"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40bdb510"/>
        <function-ref name="toIdle" scoped="" ref="0x40bdb5f0"/>
        <function-ref name="isState" scoped="" ref="0x40bdb6d0"/>
        <function-ref name="isIdle" scoped="" ref="0x40bdb7b0"/>
        <function-ref name="requestState" scoped="" ref="0x40bdb890"/>
        <function-ref name="forceState" scoped="" ref="0x40bdb970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40bf4148" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40bf4148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bf4320"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf4400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf44e0"/>
        <function-ref name="cancel" scoped="" ref="0x40bf45c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40bf46a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40be12b8" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40be12b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40be1490"/>
        <function-ref name="getPayload" scoped="" ref="0x40be1570"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be1650"/>
        <function-ref name="cancel" scoped="" ref="0x40be1730"/>
        <function-ref name="sendDone" scoped="" ref="0x40be1810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40be19b8" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyC.nc">
      <component-ref qname="PacketLinkDummyC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40be19b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40be1b90"/>
        <function-ref name="setRetries" scoped="" ref="0x40be1c70"/>
        <function-ref name="getRetries" scoped="" ref="0x40be1d50"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40be1e30"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40be1f10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40bf15f0" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf15f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bf17c8"/>
        <function-ref name="noAck" scoped="" ref="0x40bf18a8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bf1988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40bf4de8" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/link/PacketLinkDummyP.nc">
      <component-ref qname="PacketLinkDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40bf4de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40bf1010"/>
        <function-ref name="setRetries" scoped="" ref="0x40bf10f0"/>
        <function-ref name="getRetries" scoped="" ref="0x40bf11d0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40bf12b0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40bf1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40c0be08" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="OscilloscopeAppC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c0be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c08900"/>
        <function-ref name="fired" scoped="" ref="0x40c0aba0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c082c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c08068"/>
        <function-ref name="getdt" scoped="" ref="0x40c08db0"/>
        <function-ref name="gett0" scoped="" ref="0x40c08b58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c0adf8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c0a448"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c085e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c0a6c8"/>
        <function-ref name="stop" scoped="" ref="0x40c0a948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c06aa0" loc="19:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c06aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e29100"/>
        <function-ref name="readDone" scoped="" ref="0x40e29358"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x40c06438" loc="18:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagYC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x40c06438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x40c06610"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x40c066f0"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x40c067d0"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x40c068b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualY" ref="0x40c24220" loc="44:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualY" scoped="" ref="0x40c24220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c24848"/>
        <function-ref name="readDone" scoped="" ref="0x40c24aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagX" ref="0x40c271b8" loc="38:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagX" scoped="" ref="0x40c271b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c277e0"/>
        <function-ref name="readDone" scoped="" ref="0x40c27a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MagY" ref="0x40c261b8" loc="39:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagY" scoped="" ref="0x40c261b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c267e0"/>
        <function-ref name="readDone" scoped="" ref="0x40c26a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x40c00750" loc="37:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x40c00750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x40c00928"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x40c00a08"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x40c00ae8"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x40c00bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualX" ref="0x40c25220" loc="43:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagReadP.nc">
      <component-ref qname="MagReadP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualX" scoped="" ref="0x40c25220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c25848"/>
        <function-ref name="readDone" scoped="" ref="0x40c25aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x40c1bde0" loc="25:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x40c1bde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c1d010"/>
        <function-ref name="getChannel" scoped="" ref="0x40c1d0f0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c1d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x40c1b808" loc="24:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x40c1b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c1b9e0"/>
        <function-ref name="getChannel" scoped="" ref="0x40c1bac0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c1bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c1fcd0" loc="23:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c1fcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c1fea8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c1e010"/>
        <function-ref name="request" scoped="" ref="0x40c1e0f0"/>
        <function-ref name="granted" scoped="" ref="0x40c1e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c1e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x40c1f3b8" loc="22:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagConfigP.nc">
      <component-ref qname="MagConfigP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x40c1f3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x40c1f590"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x40c1f670"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x40c1f750"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x40c1f830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40c1d870" loc="7:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40c1d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40c1da48"/>
        <function-ref name="stopDone" scoped="" ref="0x40c1db28"/>
        <function-ref name="start" scoped="" ref="0x40c1dc08"/>
        <function-ref name="stop" scoped="" ref="0x40c1dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigY" ref="0x40c19b48" loc="10:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigY" scoped="" ref="0x40c19b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c19d20"/>
        <function-ref name="getChannel" scoped="" ref="0x40c19e00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c19ee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagPower" ref="0x40c15458" loc="13:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagPower" scoped="" ref="0x40c15458"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c15630"/>
        <function-ref name="isInput" scoped="" ref="0x40c15710"/>
        <function-ref name="toggle" scoped="" ref="0x40c157f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c158d0"/>
        <function-ref name="get" scoped="" ref="0x40c159b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c15a90"/>
        <function-ref name="set" scoped="" ref="0x40c15b70"/>
        <function-ref name="clr" scoped="" ref="0x40c15c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcX" ref="0x40c3b720" loc="14:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcX" scoped="" ref="0x40c3b720"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c3b8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MagAdcY" ref="0x40c3bb28" loc="15:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MagAdcY" scoped="" ref="0x40c3bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c3bd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigX" ref="0x40c19550" loc="9:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigX" scoped="" ref="0x40c19550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40c19728"/>
        <function-ref name="getChannel" scoped="" ref="0x40c19808"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40c198e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40c3ac18" loc="17:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40c3ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c3adf0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c3aed0"/>
        <function-ref name="request" scoped="" ref="0x40c34010"/>
        <function-ref name="granted" scoped="" ref="0x40c340f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c341d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40c35c70" loc="16:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40c35c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3c2e8"/>
        <function-ref name="writeDone" scoped="" ref="0x40c3a558"/>
        <function-ref name="write" scoped="" ref="0x40c3c908"/>
        <function-ref name="readDone" scoped="" ref="0x40c3cf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Mag" ref="0x40c1de68" loc="8:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mag" scoped="" ref="0x40c1de68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Mag"/>
      </instance>
      <interface-functions>
        <function-ref name="gainAdjustY" scoped="" ref="0x40c19050"/>
        <function-ref name="gainAdjustYDone" scoped="" ref="0x40c19130"/>
        <function-ref name="gainAdjustXDone" scoped="" ref="0x40c19210"/>
        <function-ref name="gainAdjustX" scoped="" ref="0x40c192f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c17168" loc="12:/opt/tinyos-2.1.0/tos/sensorboards/mts300/MagP.nc">
      <component-ref qname="MagP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c17168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c16c70"/>
        <function-ref name="fired" scoped="" ref="0x40c17ee8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c16630"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c163d8"/>
        <function-ref name="getdt" scoped="" ref="0x40c15150"/>
        <function-ref name="gett0" scoped="" ref="0x40c16ec8"/>
        <function-ref name="isRunning" scoped="" ref="0x40c16180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c17790"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c16950"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c17a10"/>
        <function-ref name="stop" scoped="" ref="0x40c17c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW0" ref="0x40c1cb48" loc="20:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW0" scoped="" ref="0x40c1cb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1cd20"/>
        <function-ref name="isInput" scoped="" ref="0x40c1ce00"/>
        <function-ref name="toggle" scoped="" ref="0x40c1cee0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c48010"/>
        <function-ref name="get" scoped="" ref="0x40c480f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c481d0"/>
        <function-ref name="set" scoped="" ref="0x40c482b0"/>
        <function-ref name="clr" scoped="" ref="0x40c48390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40c41678" loc="34:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40c41678"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c418d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW3" ref="0x40c479e8" loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW3" scoped="" ref="0x40c479e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c47bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c47ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40c47d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40c47e60"/>
        <function-ref name="get" scoped="" ref="0x40c46010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c460f0"/>
        <function-ref name="set" scoped="" ref="0x40c461d0"/>
        <function-ref name="clr" scoped="" ref="0x40c462b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW6" ref="0x40c45850" loc="26:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW6" scoped="" ref="0x40c45850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c45a28"/>
        <function-ref name="isInput" scoped="" ref="0x40c45b08"/>
        <function-ref name="toggle" scoped="" ref="0x40c45be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c45cc8"/>
        <function-ref name="get" scoped="" ref="0x40c45da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c45e88"/>
        <function-ref name="set" scoped="" ref="0x40c44010"/>
        <function-ref name="clr" scoped="" ref="0x40c440f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40c402b8" loc="37:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40c402b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c40490"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40c40a58" loc="39:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40c40a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c40c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int1" ref="0x40c43740" loc="29:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int1" scoped="" ref="0x40c43740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c43918"/>
        <function-ref name="isInput" scoped="" ref="0x40c439f8"/>
        <function-ref name="toggle" scoped="" ref="0x40c43ad8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c43bb8"/>
        <function-ref name="get" scoped="" ref="0x40c43c98"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c43d78"/>
        <function-ref name="set" scoped="" ref="0x40c43e58"/>
        <function-ref name="clr" scoped="" ref="0x40c42010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW1" ref="0x40c48570" loc="21:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW1" scoped="" ref="0x40c48570"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c48748"/>
        <function-ref name="isInput" scoped="" ref="0x40c48828"/>
        <function-ref name="toggle" scoped="" ref="0x40c48908"/>
        <function-ref name="isOutput" scoped="" ref="0x40c489e8"/>
        <function-ref name="get" scoped="" ref="0x40c48ac8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c48ba8"/>
        <function-ref name="set" scoped="" ref="0x40c48c88"/>
        <function-ref name="clr" scoped="" ref="0x40c48d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW4" ref="0x40c46490" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW4" scoped="" ref="0x40c46490"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c46668"/>
        <function-ref name="isInput" scoped="" ref="0x40c46748"/>
        <function-ref name="toggle" scoped="" ref="0x40c46828"/>
        <function-ref name="isOutput" scoped="" ref="0x40c46908"/>
        <function-ref name="get" scoped="" ref="0x40c469e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c46ac8"/>
        <function-ref name="set" scoped="" ref="0x40c46ba8"/>
        <function-ref name="clr" scoped="" ref="0x40c46c88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40c41ac8" loc="35:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40c41ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c41ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW7" ref="0x40c442d0" loc="27:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW7" scoped="" ref="0x40c442d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c444a8"/>
        <function-ref name="isInput" scoped="" ref="0x40c44588"/>
        <function-ref name="toggle" scoped="" ref="0x40c44668"/>
        <function-ref name="isOutput" scoped="" ref="0x40c44748"/>
        <function-ref name="get" scoped="" ref="0x40c44828"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c44908"/>
        <function-ref name="set" scoped="" ref="0x40c449e8"/>
        <function-ref name="clr" scoped="" ref="0x40c44ac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40c40e28" loc="40:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40c40e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c3f050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int2" ref="0x40c42200" loc="30:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int2" scoped="" ref="0x40c42200"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c423d8"/>
        <function-ref name="isInput" scoped="" ref="0x40c424b8"/>
        <function-ref name="toggle" scoped="" ref="0x40c42598"/>
        <function-ref name="isOutput" scoped="" ref="0x40c42678"/>
        <function-ref name="get" scoped="" ref="0x40c42758"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c42838"/>
        <function-ref name="set" scoped="" ref="0x40c42918"/>
        <function-ref name="clr" scoped="" ref="0x40c429f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW2" ref="0x40c47010" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW2" scoped="" ref="0x40c47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c471e8"/>
        <function-ref name="isInput" scoped="" ref="0x40c472c8"/>
        <function-ref name="toggle" scoped="" ref="0x40c473a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40c47488"/>
        <function-ref name="get" scoped="" ref="0x40c47568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c47648"/>
        <function-ref name="set" scoped="" ref="0x40c47728"/>
        <function-ref name="clr" scoped="" ref="0x40c47808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PW5" ref="0x40c46e68" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PW5" scoped="" ref="0x40c46e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c45050"/>
        <function-ref name="isInput" scoped="" ref="0x40c45130"/>
        <function-ref name="toggle" scoped="" ref="0x40c45210"/>
        <function-ref name="isOutput" scoped="" ref="0x40c452f0"/>
        <function-ref name="get" scoped="" ref="0x40c453d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c454b0"/>
        <function-ref name="set" scoped="" ref="0x40c45590"/>
        <function-ref name="clr" scoped="" ref="0x40c45670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40c41e98" loc="36:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40c41e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c400c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int0" ref="0x40c44cb8" loc="28:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int0" scoped="" ref="0x40c44cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c44e90"/>
        <function-ref name="isInput" scoped="" ref="0x40c43010"/>
        <function-ref name="toggle" scoped="" ref="0x40c430f0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c431d0"/>
        <function-ref name="get" scoped="" ref="0x40c432b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c43390"/>
        <function-ref name="set" scoped="" ref="0x40c43470"/>
        <function-ref name="clr" scoped="" ref="0x40c43550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40c40688" loc="38:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40c40688"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c40860"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40c3f248" loc="41:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40c3f248"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c3f420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Int3" ref="0x40c42be8" loc="31:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusC.nc">
      <component-ref qname="MicaBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Int3" scoped="" ref="0x40c42be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c42dc0"/>
        <function-ref name="isInput" scoped="" ref="0x40c42ea0"/>
        <function-ref name="toggle" scoped="" ref="0x40c41010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c410f0"/>
        <function-ref name="get" scoped="" ref="0x40c411d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c412b0"/>
        <function-ref name="set" scoped="" ref="0x40c41390"/>
        <function-ref name="clr" scoped="" ref="0x40c41470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc0" ref="0x40c3fd78" loc="18:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc0" scoped="" ref="0x40c3fd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c65010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc3" ref="0x40c659a8" loc="21:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc3" scoped="" ref="0x40c659a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c65b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc5" ref="0x40c64208" loc="23:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc5" scoped="" ref="0x40c64208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c643e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc1" ref="0x40c65208" loc="19:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc1" scoped="" ref="0x40c65208"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c653e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc6" ref="0x40c645d8" loc="24:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc6" scoped="" ref="0x40c645d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c647b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc2" ref="0x40c655d8" loc="20:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc2" scoped="" ref="0x40c655d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c657b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc4" ref="0x40c65d78" loc="22:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc4" scoped="" ref="0x40c65d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Adc7" ref="0x40c649a8" loc="25:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusP.nc">
      <component-ref qname="MicaBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Adc7" scoped="" ref="0x40c649a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MicaBusAdc"/>
      </instance>
      <interface-functions>
        <function-ref name="getChannel" scoped="" ref="0x40c64b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c59858" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c59858"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c59a30"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c59b10"/>
        <function-ref name="request" scoped="" ref="0x40c59bf0"/>
        <function-ref name="granted" scoped="" ref="0x40c59cd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c59db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40d33010" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="MagConfigP.I2CPot"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40d33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d33658"/>
        <function-ref name="writeDone" scoped="" ref="0x40d328e0"/>
        <function-ref name="write" scoped="" ref="0x40d33c78"/>
        <function-ref name="readDone" scoped="" ref="0x40d322c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c7c5f0" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c7c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c7c7c8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c7c8a8"/>
        <function-ref name="request" scoped="" ref="0x40c7c988"/>
        <function-ref name="granted" scoped="" ref="0x40c7ca68"/>
        <function-ref name="isOwner" scoped="" ref="0x40c7cb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40c7b158" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40c7b158"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c7b7a0"/>
        <function-ref name="writeDone" scoped="" ref="0x40c79a20"/>
        <function-ref name="write" scoped="" ref="0x40c7bdc0"/>
        <function-ref name="readDone" scoped="" ref="0x40c79400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c76068" loc="82:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c76068"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c76250"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c76330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c98010" loc="86:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c98010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c981f8"/>
        <function-ref name="configure" scoped="" ref="0x40c982d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c76470" loc="83:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c76470"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c76648"/>
        <function-ref name="requested" scoped="" ref="0x40c76728"/>
        <function-ref name="granted" scoped="" ref="0x40c76808"/>
        <function-ref name="isOwner" scoped="" ref="0x40c768e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c769c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c77908" loc="81:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c77908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c77af0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c77bd0"/>
        <function-ref name="request" scoped="" ref="0x40c77cb0"/>
        <function-ref name="granted" scoped="" ref="0x40c77d90"/>
        <function-ref name="isOwner" scoped="" ref="0x40c77e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c76b08" loc="84:/opt/tinyos-2.1.0/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c76b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c76ce0"/>
        <function-ref name="userId" scoped="" ref="0x40c76dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41195bd8" loc="34:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41195bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41195db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41195f10" loc="35:/opt/tinyos-2.1.0/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41195f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41192108"/>
        <function-ref name="isEmpty" scoped="" ref="0x411921e8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411922c8"/>
        <function-ref name="dequeue" scoped="" ref="0x411923a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411917e8" loc="55:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411917e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411919d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41191ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411907d0" loc="60:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411907d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411909b8"/>
        <function-ref name="configure" scoped="" ref="0x41190a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41190bf8" loc="61:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41190bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41190dd0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41190eb0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4118f010"/>
        <function-ref name="dequeue" scoped="" ref="0x4118f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41191bf0" loc="56:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41191bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41191dc8"/>
        <function-ref name="requested" scoped="" ref="0x41191ea8"/>
        <function-ref name="granted" scoped="" ref="0x41190010"/>
        <function-ref name="isOwner" scoped="" ref="0x411900f0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411901d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4118f230" loc="62:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4118f230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4118f408"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4118f4e8"/>
        <function-ref name="led1On" scoped="" ref="0x4118f5c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4118f6a8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4118f788"/>
        <function-ref name="get" scoped="" ref="0x4118f868"/>
        <function-ref name="led1Off" scoped="" ref="0x4118f948"/>
        <function-ref name="led0On" scoped="" ref="0x4118fcc8"/>
        <function-ref name="set" scoped="" ref="0x4118fb08"/>
        <function-ref name="led2On" scoped="" ref="0x4118fa28"/>
        <function-ref name="led2Off" scoped="" ref="0x4118fbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411910a8" loc="54:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411910a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41191290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41191370"/>
        <function-ref name="request" scoped="" ref="0x41191450"/>
        <function-ref name="granted" scoped="" ref="0x41191530"/>
        <function-ref name="isOwner" scoped="" ref="0x41191610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41190310" loc="57:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41190310"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411904e8"/>
        <function-ref name="userId" scoped="" ref="0x411905c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4118fe48" loc="75:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4118fe48"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4118e050"/>
        <function-ref name="runTask" scoped="" ref="0x4118e130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40c97738" loc="52:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40c97738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40c97910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40c97a50" loc="53:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c97a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c97c28"/>
        <function-ref name="requested" scoped="" ref="0x40c97d08"/>
        <function-ref name="granted" scoped="" ref="0x40c97de8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c97ec8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c96010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40c97340" loc="50:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40c97340"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c97518"/>
        <function-ref name="stop" scoped="" ref="0x40c975f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40c96150" loc="54:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c96150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c96328"/>
        <function-ref name="userId" scoped="" ref="0x40c96408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40cc2010" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40cc2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40cc21e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40cc50e0" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40cc50e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cc5728"/>
        <function-ref name="writeDone" scoped="" ref="0x40cc49a8"/>
        <function-ref name="write" scoped="" ref="0x40cc5d48"/>
        <function-ref name="readDone" scoped="" ref="0x40cc4388"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40cba138" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40cba138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cba320"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cba400"/>
        <function-ref name="request" scoped="" ref="0x40cba4e0"/>
        <function-ref name="granted" scoped="" ref="0x40cba5c0"/>
        <function-ref name="isOwner" scoped="" ref="0x40cba6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40cba928" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40cba928"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb9010"/>
        <function-ref name="writeDone" scoped="" ref="0x40cc62c0"/>
        <function-ref name="write" scoped="" ref="0x40cb9640"/>
        <function-ref name="readDone" scoped="" ref="0x40cb9c70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40cc6940" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40cc6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40cc6b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40cc6c08"/>
        <function-ref name="request" scoped="" ref="0x40cc6ce8"/>
        <function-ref name="granted" scoped="" ref="0x40cc6dc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40cc6ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40d0fc60" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40d0fc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40d0fe38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40d0e010" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40d0e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40d0e1e8"/>
        <function-ref name="sendCommand" scoped="" ref="0x40d0e2c8"/>
        <function-ref name="setStart" scoped="" ref="0x40d0e3a8"/>
        <function-ref name="status" scoped="" ref="0x40d0e488"/>
        <function-ref name="hasAcks" scoped="" ref="0x40d0e568"/>
        <function-ref name="isEnabled" scoped="" ref="0x40d0e648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d0e728"/>
        <function-ref name="read" scoped="" ref="0x40d0e808"/>
        <function-ref name="init" scoped="" ref="0x40d0e8e8"/>
        <function-ref name="enableAck" scoped="" ref="0x40d0e9c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d0eaa8"/>
        <function-ref name="hasStart" scoped="" ref="0x40d0eb88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d0ec68"/>
        <function-ref name="commandComplete" scoped="" ref="0x40d0edc8"/>
        <function-ref name="enable" scoped="" ref="0x40d0eea8"/>
        <function-ref name="write" scoped="" ref="0x40d0d010"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40d0d0f0"/>
        <function-ref name="off" scoped="" ref="0x40d0d1d0"/>
        <function-ref name="setStop" scoped="" ref="0x40d0d2b0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40d0d390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d0d470"/>
        <function-ref name="hasStop" scoped="" ref="0x40d0d550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40d0d6d0" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40d0d6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d0d8a8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d0d988"/>
        <function-ref name="led1On" scoped="" ref="0x40d0da68"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d0db48"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d0dc28"/>
        <function-ref name="get" scoped="" ref="0x40d0dd08"/>
        <function-ref name="led1Off" scoped="" ref="0x40d0dde8"/>
        <function-ref name="led2On" scoped="" ref="0x40d0c1d0"/>
        <function-ref name="set" scoped="" ref="0x40d0c010"/>
        <function-ref name="led2Off" scoped="" ref="0x40d0dec8"/>
        <function-ref name="led0On" scoped="" ref="0x40d0c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40d0c350" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40d0c350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d0c528"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d0c608"/>
        <function-ref name="led1On" scoped="" ref="0x40d0c6e8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d0c7c8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d0c8a8"/>
        <function-ref name="get" scoped="" ref="0x40d0c988"/>
        <function-ref name="led1Off" scoped="" ref="0x40d0ca68"/>
        <function-ref name="led2On" scoped="" ref="0x40d0cde8"/>
        <function-ref name="set" scoped="" ref="0x40d0cc28"/>
        <function-ref name="led2Off" scoped="" ref="0x40d0cb48"/>
        <function-ref name="led0On" scoped="" ref="0x40d0cd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40ced908" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40ced908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40cedae0"/>
        <function-ref name="stop" scoped="" ref="0x40cedbc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40ceddb0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ceddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40c22600"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40c22768"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cec410"/>
        <function-ref name="writeDone" scoped="" ref="0x40d0f688"/>
        <function-ref name="write" scoped="" ref="0x40ceca30"/>
        <function-ref name="readDone" scoped="" ref="0x40d0f068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40d0a9b0" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40d0a9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40d0ab88"/>
        <function-ref name="sendCommand" scoped="" ref="0x40d0ac68"/>
        <function-ref name="setStart" scoped="" ref="0x40d0ad48"/>
        <function-ref name="status" scoped="" ref="0x40d0ae28"/>
        <function-ref name="hasAcks" scoped="" ref="0x40d0af08"/>
        <function-ref name="isEnabled" scoped="" ref="0x40d07010"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d070f0"/>
        <function-ref name="read" scoped="" ref="0x40d071d0"/>
        <function-ref name="init" scoped="" ref="0x40d072b0"/>
        <function-ref name="enableAck" scoped="" ref="0x40d07390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d07470"/>
        <function-ref name="hasStart" scoped="" ref="0x40d07550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d07630"/>
        <function-ref name="commandComplete" scoped="" ref="0x40d07790"/>
        <function-ref name="enable" scoped="" ref="0x40d07870"/>
        <function-ref name="write" scoped="" ref="0x40d07950"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40d07a30"/>
        <function-ref name="off" scoped="" ref="0x40d07b10"/>
        <function-ref name="setStop" scoped="" ref="0x40d07bf0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40d07cd0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d07db0"/>
        <function-ref name="hasStop" scoped="" ref="0x40d07e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40d06a80" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40d06a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40d06c58"/>
        <function-ref name="sendCommand" scoped="" ref="0x40d06d38"/>
        <function-ref name="setStart" scoped="" ref="0x40d06e18"/>
        <function-ref name="status" scoped="" ref="0x40d06ef8"/>
        <function-ref name="hasAcks" scoped="" ref="0x40d30010"/>
        <function-ref name="isEnabled" scoped="" ref="0x40d300f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40d301d0"/>
        <function-ref name="read" scoped="" ref="0x40d302b0"/>
        <function-ref name="init" scoped="" ref="0x40d30390"/>
        <function-ref name="enableAck" scoped="" ref="0x40d30470"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40d30550"/>
        <function-ref name="hasStart" scoped="" ref="0x40d30630"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40d30710"/>
        <function-ref name="commandComplete" scoped="" ref="0x40d30870"/>
        <function-ref name="enable" scoped="" ref="0x40d30950"/>
        <function-ref name="write" scoped="" ref="0x40d30a30"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40d30b10"/>
        <function-ref name="off" scoped="" ref="0x40d30bf0"/>
        <function-ref name="setStop" scoped="" ref="0x40d30cd0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40d30db0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40d30e90"/>
        <function-ref name="hasStop" scoped="" ref="0x40d2f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40d2f240" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40d2f240"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2f418"/>
        <function-ref name="isInput" scoped="" ref="0x40d2f4f8"/>
        <function-ref name="toggle" scoped="" ref="0x40d2f5d8"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2f6b8"/>
        <function-ref name="get" scoped="" ref="0x40d2f798"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2f878"/>
        <function-ref name="set" scoped="" ref="0x40d2f958"/>
        <function-ref name="clr" scoped="" ref="0x40d2fa38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40d2fc40" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40d2fc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d2fe18"/>
        <function-ref name="isInput" scoped="" ref="0x40d2fef8"/>
        <function-ref name="toggle" scoped="" ref="0x40d2e010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d2e0f0"/>
        <function-ref name="get" scoped="" ref="0x40d2e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d2e2b0"/>
        <function-ref name="set" scoped="" ref="0x40d2e390"/>
        <function-ref name="clr" scoped="" ref="0x40d2e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d3f1b8" loc="35:/opt/tinyos-2.1.0/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d3f1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d3f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40d3f520" loc="36:/opt/tinyos-2.1.0/tos/system/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40d3f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40d3f6f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40d3f7d8"/>
        <function-ref name="led1On" scoped="" ref="0x40d3f8b8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40d3f998"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40d3fa78"/>
        <function-ref name="get" scoped="" ref="0x40d3fb58"/>
        <function-ref name="led1Off" scoped="" ref="0x40d3fc38"/>
        <function-ref name="led2Off" scoped="" ref="0x40d3e010"/>
        <function-ref name="set" scoped="" ref="0x40d3fd18"/>
        <function-ref name="led0On" scoped="" ref="0x40d3fdf8"/>
        <function-ref name="led2On" scoped="" ref="0x40d3fed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d5fa80" loc="37:/opt/tinyos-2.1.0/tos/system/TimerMilliC.nc">
      <component-ref qname="MagConfigP.WarmupTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d5fa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4038a9d0"/>
            <typename><typedef-ref name="TMilli" ref="0x4038ab98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d5d650"/>
        <function-ref name="fired" scoped="" ref="0x40d5e830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d5d010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d5ece0"/>
        <function-ref name="getdt" scoped="" ref="0x40d5db00"/>
        <function-ref name="gett0" scoped="" ref="0x40d5d8a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d5ea88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d5e0d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d5d330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d5e358"/>
        <function-ref name="stop" scoped="" ref="0x40d5e5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d6e488" loc="82:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d6e488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d6e670"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d6e750"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d6d3e8" loc="86:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d6d3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d6d5d0"/>
        <function-ref name="configure" scoped="" ref="0x40d6d6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40d6e890" loc="83:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d6ea68"/>
        <function-ref name="requested" scoped="" ref="0x40d6eb48"/>
        <function-ref name="granted" scoped="" ref="0x40d6ec28"/>
        <function-ref name="isOwner" scoped="" ref="0x40d6ed08"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d6ede8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d59cf0" loc="81:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d59cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d59ed8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d6e010"/>
        <function-ref name="request" scoped="" ref="0x40d6e0f0"/>
        <function-ref name="granted" scoped="" ref="0x40d6e1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d6e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d6ef28" loc="84:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="MagConfigP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6ef28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d6d110"/>
        <function-ref name="userId" scoped="" ref="0x40d6d1f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411c9208" loc="34:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411c9208"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411c93e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x411c9540" loc="35:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="MagConfigP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x411c9540"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411c9718"/>
        <function-ref name="isEmpty" scoped="" ref="0x411c97f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411c98d8"/>
        <function-ref name="dequeue" scoped="" ref="0x411c99b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x411c8e28" loc="55:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x411c8e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x411c7050"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411c7130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x411c7dc8" loc="60:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x411c7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x411c5010"/>
        <function-ref name="configure" scoped="" ref="0x411c50f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x411c5250" loc="61:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x411c5250"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x411c5428"/>
        <function-ref name="isEmpty" scoped="" ref="0x411c5508"/>
        <function-ref name="isEnqueued" scoped="" ref="0x411c55e8"/>
        <function-ref name="dequeue" scoped="" ref="0x411c56c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x411c7270" loc="56:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411c7270"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411c7448"/>
        <function-ref name="requested" scoped="" ref="0x411c7528"/>
        <function-ref name="granted" scoped="" ref="0x411c7608"/>
        <function-ref name="isOwner" scoped="" ref="0x411c76e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411c77c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x411c5808" loc="62:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x411c5808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x411c59e0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x411c5ac0"/>
        <function-ref name="led1On" scoped="" ref="0x411c5ba0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x411c5c80"/>
        <function-ref name="led2Toggle" scoped="" ref="0x411c5d60"/>
        <function-ref name="get" scoped="" ref="0x411c5e40"/>
        <function-ref name="led1Off" scoped="" ref="0x411c5f20"/>
        <function-ref name="led0On" scoped="" ref="0x411c42b8"/>
        <function-ref name="set" scoped="" ref="0x411c40f8"/>
        <function-ref name="led2On" scoped="" ref="0x411c4018"/>
        <function-ref name="led2Off" scoped="" ref="0x411c41d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x411c86e8" loc="54:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x411c86e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411c88d0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x411c89b0"/>
        <function-ref name="request" scoped="" ref="0x411c8a90"/>
        <function-ref name="granted" scoped="" ref="0x411c8b70"/>
        <function-ref name="isOwner" scoped="" ref="0x411c8c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x411c7908" loc="57:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411c7908"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411c7ae0"/>
        <function-ref name="userId" scoped="" ref="0x411c7bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x411c4438" loc="75:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="MagConfigP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x411c4438"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411c4610"/>
        <function-ref name="runTask" scoped="" ref="0x411c46f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40d6b538" loc="59:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40d6b538"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d6b710"/>
        <function-ref name="stopDone" scoped="" ref="0x40d6b7f0"/>
        <function-ref name="start" scoped="" ref="0x40d6b8d0"/>
        <function-ref name="stop" scoped="" ref="0x40d6b9b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40d6baf0" loc="61:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40d6baf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40d6bcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40d6be08" loc="62:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d6be08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d6a010"/>
        <function-ref name="requested" scoped="" ref="0x40d6a0f0"/>
        <function-ref name="granted" scoped="" ref="0x40d6a1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d6a2b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d6a390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40d6a4d0" loc="63:/opt/tinyos-2.1.0/tos/lib/power/SplitControlPowerManagerC.nc">
      <component-ref qname="MagConfigP.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d6a4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d6a6a8"/>
        <function-ref name="userId" scoped="" ref="0x40d6a788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x411ebbe0" loc="51:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x411ebbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x411ebdb8"/>
        <function-ref name="stopDone" scoped="" ref="0x411ebe98"/>
        <function-ref name="start" scoped="" ref="0x411e9010"/>
        <function-ref name="stop" scoped="" ref="0x411e90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x411e9230" loc="53:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x411e9230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x411e9408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopTask" ref="0x411e8030" loc="68:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopTask" scoped="" ref="0x411e8030"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411e8208"/>
        <function-ref name="runTask" scoped="" ref="0x411e82e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x411e9548" loc="54:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x411e9548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x411e9720"/>
        <function-ref name="requested" scoped="" ref="0x411e9800"/>
        <function-ref name="granted" scoped="" ref="0x411e98e0"/>
        <function-ref name="isOwner" scoped="" ref="0x411e99c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x411e9aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTask" ref="0x411e8468" loc="63:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTask" scoped="" ref="0x411e8468"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411e8640"/>
        <function-ref name="runTask" scoped="" ref="0x411e8720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x411eb7e8" loc="50:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x411eb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x411eb9c0"/>
        <function-ref name="stop" scoped="" ref="0x411ebaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x411e9be0" loc="55:/opt/tinyos-2.1.0/tos/lib/power/PowerManagerP.nc">
      <component-ref qname="MagConfigP.PowerManager.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x411e9be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x411e9db8"/>
        <function-ref name="userId" scoped="" ref="0x411e9e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d9be78" loc="24:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d9be78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d7a4d8"/>
        <function-ref name="readDone" scoped="" ref="0x40d7a740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40d7aba0" loc="26:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40d7aba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d9a1f0"/>
        <function-ref name="readDone" scoped="" ref="0x40d9a458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d9a7d8" loc="27:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcX"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d9a7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d9a9c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d9aaa0"/>
        <function-ref name="request" scoped="" ref="0x40d9ab80"/>
        <function-ref name="granted" scoped="" ref="0x40d9ac60"/>
        <function-ref name="isOwner" scoped="" ref="0x40d9ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d99d30" loc="24:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d99d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d98380"/>
        <function-ref name="readDone" scoped="" ref="0x40d985e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40d98a48" loc="26:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40d98a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d97098"/>
        <function-ref name="readDone" scoped="" ref="0x40d97300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d97680" loc="27:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="MagReadP.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d97680"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d97868"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d97948"/>
        <function-ref name="request" scoped="" ref="0x40d97a28"/>
        <function-ref name="granted" scoped="" ref="0x40d97b08"/>
        <function-ref name="isOwner" scoped="" ref="0x40d97be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41162230" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41162230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41162408"/>
        <function-ref name="configure" scoped="" ref="0x411624e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41163168" loc="22:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41163168"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41163790"/>
        <function-ref name="readDone" scoped="" ref="0x411639e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x41163cf0" loc="24:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="OscilloscopeAppC.Sensor.AdcY"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x41163cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x41163ec8"/>
        <function-ref name="getChannel" scoped="" ref="0x41162010"/>
        <function-ref name="getPrescaler" scoped="" ref="0x411620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d90998" loc="18:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d90998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dbd010"/>
        <function-ref name="readDone" scoped="" ref="0x40dbd268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40dbadf8" loc="19:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40dbadf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40dbc468"/>
        <function-ref name="readDone" scoped="" ref="0x40dbc6e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40dbcd98" loc="22:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40dbcd98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40dbb010"/>
        <function-ref name="getChannel" scoped="" ref="0x40dbb0f0"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40dbb1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40dbb670" loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40dbb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dbb848"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40dbb928"/>
        <function-ref name="request" scoped="" ref="0x40dbba08"/>
        <function-ref name="granted" scoped="" ref="0x40dbbae8"/>
        <function-ref name="isOwner" scoped="" ref="0x40dbbbc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40db3418" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40db3418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40db35f0"/>
        <function-ref name="configure" scoped="" ref="0x40db36d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40daeb88" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40daeb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40daed60"/>
        <function-ref name="dataReady" scoped="" ref="0x40daee40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40db19e8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40db19e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40db1bc0"/>
        <function-ref name="cancel" scoped="" ref="0x40db1ca0"/>
        <function-ref name="dataReady" scoped="" ref="0x40db1d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40db8620" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40db8620"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40db87f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40db88d8"/>
        <function-ref name="request" scoped="" ref="0x40db89b8"/>
        <function-ref name="granted" scoped="" ref="0x40db8a98"/>
        <function-ref name="isOwner" scoped="" ref="0x40db8b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dab040" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dab040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dab218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40dabe08" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40dabe08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40daa010"/>
        <function-ref name="dataReady" scoped="" ref="0x40daa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40dab880" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40dab880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40daba58"/>
        <function-ref name="cancel" scoped="" ref="0x40dabb38"/>
        <function-ref name="dataReady" scoped="" ref="0x40dabc18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40dd1818" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40dd1818"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40dd19f0"/>
        <function-ref name="getAdmux" scoped="" ref="0x40dd1ad0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40dd1bb0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40dd1c90"/>
        <function-ref name="enableAdc" scoped="" ref="0x40dd1d70"/>
        <function-ref name="setAdmux" scoped="" ref="0x40dd1e50"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40da9010"/>
        <function-ref name="isComplete" scoped="" ref="0x40da90f0"/>
        <function-ref name="cancel" scoped="" ref="0x40da91d0"/>
        <function-ref name="disableAdc" scoped="" ref="0x40da92b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40da9390"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40da9470"/>
        <function-ref name="startConversion" scoped="" ref="0x40da9550"/>
        <function-ref name="isStarted" scoped="" ref="0x40da96b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40da9790"/>
        <function-ref name="setContinuous" scoped="" ref="0x40da9870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40da9950"/>
        <function-ref name="getValue" scoped="" ref="0x40da9a30"/>
        <function-ref name="dataReady" scoped="" ref="0x40da9b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40dab3f0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40dab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dab5c8"/>
        <function-ref name="stop" scoped="" ref="0x40dab6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40da9ce8" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40da9ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40da9ec0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40da8010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40da80f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40da81d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40da82b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40db0e78" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40db0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40de3070"/>
        <function-ref name="getAdmux" scoped="" ref="0x40de3150"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40de3230"/>
        <function-ref name="isEnabled" scoped="" ref="0x40de3310"/>
        <function-ref name="enableAdc" scoped="" ref="0x40de33f0"/>
        <function-ref name="setAdmux" scoped="" ref="0x40de34d0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40de35b0"/>
        <function-ref name="isComplete" scoped="" ref="0x40de3690"/>
        <function-ref name="cancel" scoped="" ref="0x40de3770"/>
        <function-ref name="disableAdc" scoped="" ref="0x40de3850"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40de3930"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40de3a10"/>
        <function-ref name="startConversion" scoped="" ref="0x40de3af0"/>
        <function-ref name="isStarted" scoped="" ref="0x40de3c50"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40de3d30"/>
        <function-ref name="setContinuous" scoped="" ref="0x40de3e10"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40de3ef0"/>
        <function-ref name="getValue" scoped="" ref="0x40de2010"/>
        <function-ref name="dataReady" scoped="" ref="0x40de20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40de2aa8" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40de2aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40de2c80"/>
        <function-ref name="getAdmux" scoped="" ref="0x40de2d60"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40de2e40"/>
        <function-ref name="isEnabled" scoped="" ref="0x40de2f20"/>
        <function-ref name="enableAdc" scoped="" ref="0x40ddf018"/>
        <function-ref name="setAdmux" scoped="" ref="0x40ddf0f8"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40ddf1d8"/>
        <function-ref name="isComplete" scoped="" ref="0x40ddf2b8"/>
        <function-ref name="cancel" scoped="" ref="0x40ddf398"/>
        <function-ref name="disableAdc" scoped="" ref="0x40ddf478"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40ddf558"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40ddf638"/>
        <function-ref name="startConversion" scoped="" ref="0x40ddf718"/>
        <function-ref name="isStarted" scoped="" ref="0x40ddf878"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40ddf958"/>
        <function-ref name="setContinuous" scoped="" ref="0x40ddfa38"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40ddfb18"/>
        <function-ref name="getValue" scoped="" ref="0x40ddfbf8"/>
        <function-ref name="dataReady" scoped="" ref="0x40ddfcd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40ddfec0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40ddfec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40dde0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40de4750" loc="82:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40de4750"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40de4938"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40de4a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40de06e0" loc="86:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40de06e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40de08c8"/>
        <function-ref name="configure" scoped="" ref="0x40de09a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40de4b58" loc="83:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40de4b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de4d30"/>
        <function-ref name="requested" scoped="" ref="0x40de4e10"/>
        <function-ref name="granted" scoped="" ref="0x40de4ef0"/>
        <function-ref name="isOwner" scoped="" ref="0x40de0010"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40de00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40de4010" loc="81:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40de4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40de41f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40de42d8"/>
        <function-ref name="request" scoped="" ref="0x40de43b8"/>
        <function-ref name="granted" scoped="" ref="0x40de4498"/>
        <function-ref name="isOwner" scoped="" ref="0x40de4578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40de0230" loc="84:/opt/tinyos-2.1.0/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40de0230"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40de0408"/>
        <function-ref name="userId" scoped="" ref="0x40de04e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41210758" loc="34:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41210758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41210930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41210a90" loc="35:/opt/tinyos-2.1.0/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41210a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41210c68"/>
        <function-ref name="isEmpty" scoped="" ref="0x41210d48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41210e28"/>
        <function-ref name="dequeue" scoped="" ref="0x41210f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4120e3a8" loc="55:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4120e3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4120e590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4120e670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4120d338" loc="60:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4120d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4120d520"/>
        <function-ref name="configure" scoped="" ref="0x4120d600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4120d760" loc="61:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4120d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4120d938"/>
        <function-ref name="isEmpty" scoped="" ref="0x4120da18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4120daf8"/>
        <function-ref name="dequeue" scoped="" ref="0x4120dbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4120e7b0" loc="56:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4120e7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4120e988"/>
        <function-ref name="requested" scoped="" ref="0x4120ea68"/>
        <function-ref name="granted" scoped="" ref="0x4120eb48"/>
        <function-ref name="isOwner" scoped="" ref="0x4120ec28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4120ed08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4120dd18" loc="62:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4120dd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4120def0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4120c010"/>
        <function-ref name="led1On" scoped="" ref="0x4120c0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4120c1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4120c2b0"/>
        <function-ref name="get" scoped="" ref="0x4120c390"/>
        <function-ref name="led1Off" scoped="" ref="0x4120c470"/>
        <function-ref name="led0On" scoped="" ref="0x4120c7f0"/>
        <function-ref name="set" scoped="" ref="0x4120c630"/>
        <function-ref name="led2On" scoped="" ref="0x4120c550"/>
        <function-ref name="led2Off" scoped="" ref="0x4120c710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4120fbf0" loc="54:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4120fbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4120fdd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4120feb8"/>
        <function-ref name="request" scoped="" ref="0x4120e010"/>
        <function-ref name="granted" scoped="" ref="0x4120e0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x4120e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4120ee48" loc="57:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4120ee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4120d050"/>
        <function-ref name="userId" scoped="" ref="0x4120d130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4120c970" loc="75:/opt/tinyos-2.1.0/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4120c970"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4120cb48"/>
        <function-ref name="runTask" scoped="" ref="0x4120cc28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40dee230" loc="62:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40dee230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40dee408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40dee548" loc="63:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40dee548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40dee720"/>
        <function-ref name="requested" scoped="" ref="0x40dee800"/>
        <function-ref name="granted" scoped="" ref="0x40dee8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x40dee9c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40deeaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40defda8" loc="60:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40defda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40dee010"/>
        <function-ref name="stop" scoped="" ref="0x40dee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40deebe0" loc="64:/opt/tinyos-2.1.0/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40deebe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40deedb8"/>
        <function-ref name="userId" scoped="" ref="0x40deee98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41233230" loc="52:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41233230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41233408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41233548" loc="53:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41233548"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41233720"/>
        <function-ref name="requested" scoped="" ref="0x41233800"/>
        <function-ref name="granted" scoped="" ref="0x412338e0"/>
        <function-ref name="isOwner" scoped="" ref="0x412339c0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41233aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41234de0" loc="50:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41234de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41233010"/>
        <function-ref name="stop" scoped="" ref="0x412330f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41233be0" loc="54:/opt/tinyos-2.1.0/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41233be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41233db8"/>
        <function-ref name="userId" scoped="" ref="0x41233e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e155f8" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e155f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e15c20"/>
        <function-ref name="readDone" scoped="" ref="0x40e15e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40e14598" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40e14598"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e14be0"/>
        <function-ref name="readDone" scoped="" ref="0x40e14e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40e12ab0" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40e12ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40e12c88"/>
        <function-ref name="getChannel" scoped="" ref="0x40e12d68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40e12e48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40e12238" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40e12238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40e12410"/>
        <function-ref name="cancel" scoped="" ref="0x40e124f0"/>
        <function-ref name="dataReady" scoped="" ref="0x40e125d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40e081e0" loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40e081e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e083b8"/>
        <function-ref name="runTask" scoped="" ref="0x40e08498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40e17e40" loc="24:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40e17e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e164b8"/>
        <function-ref name="readDone" scoped="" ref="0x40e16720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40e16b80" loc="26:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40e16b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40e2f1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40e2f448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40e2f7c8" loc="27:/opt/tinyos-2.1.0/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e2f7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e2f9b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e2fa90"/>
        <function-ref name="request" scoped="" ref="0x40e2fb70"/>
        <function-ref name="granted" scoped="" ref="0x40e2fc50"/>
        <function-ref name="isOwner" scoped="" ref="0x40e2fd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40e27870" loc="41:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e27870"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e27a48"/>
        <function-ref name="getPayload" scoped="" ref="0x40e27b28"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e27c08"/>
        <function-ref name="cancel" scoped="" ref="0x40e27ce8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e27dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e27f08" loc="42:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e27f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e7b0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e7b1d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40e7b2b0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e7b390"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e7b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e7b5b0" loc="43:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e7b5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e7b788"/>
        <function-ref name="source" scoped="" ref="0x40e7b868"/>
        <function-ref name="address" scoped="" ref="0x40e7b948"/>
        <function-ref name="destination" scoped="" ref="0x40e7ba28"/>
        <function-ref name="setSource" scoped="" ref="0x40e7bb08"/>
        <function-ref name="setDestination" scoped="" ref="0x40e7bbe8"/>
        <function-ref name="type" scoped="" ref="0x40e7bcc8"/>
        <function-ref name="setType" scoped="" ref="0x40e7bda8"/>
        <function-ref name="isForMe" scoped="" ref="0x40e7be88"/>
        <function-ref name="setGroup" scoped="" ref="0x40e7a010"/>
        <function-ref name="localGroup" scoped="" ref="0x40e7a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40e7a250" loc="44:/opt/tinyos-2.1.0/tos/system/AMSenderC.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40e7a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e7a428"/>
        <function-ref name="noAck" scoped="" ref="0x40e7a508"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e7a5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x412271f0" loc="36:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x412271f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412273c8"/>
        <function-ref name="getPayload" scoped="" ref="0x412274a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41227588"/>
        <function-ref name="cancel" scoped="" ref="0x41227668"/>
        <function-ref name="sendDone" scoped="" ref="0x41227748"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x412278b8" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412278b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41227a90"/>
        <function-ref name="getPayload" scoped="" ref="0x41227b70"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41227c50"/>
        <function-ref name="cancel" scoped="" ref="0x41227d30"/>
        <function-ref name="sendDone" scoped="" ref="0x41227e10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x41226010" loc="39:/opt/tinyos-2.1.0/tos/system/AMQueueEntryP.nc">
      <component-ref qname="OscilloscopeAppC.AMSenderC.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41226010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x412261e8"/>
        <function-ref name="source" scoped="" ref="0x412262c8"/>
        <function-ref name="address" scoped="" ref="0x412263a8"/>
        <function-ref name="destination" scoped="" ref="0x41226488"/>
        <function-ref name="setSource" scoped="" ref="0x41226568"/>
        <function-ref name="setDestination" scoped="" ref="0x41226648"/>
        <function-ref name="type" scoped="" ref="0x41226728"/>
        <function-ref name="setType" scoped="" ref="0x41226808"/>
        <function-ref name="isForMe" scoped="" ref="0x412268e8"/>
        <function-ref name="setGroup" scoped="" ref="0x412269c8"/>
        <function-ref name="localGroup" scoped="" ref="0x41226aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e4ada8" loc="35:/opt/tinyos-2.1.0/tos/system/AMQueueP.nc">
      <component-ref qname="AMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e4ada8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e47010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e470f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e471d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e472b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e47390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40e81598" loc="40:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40e81598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e81780"/>
        <function-ref name="getPayload" scoped="" ref="0x40e81860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e81940"/>
        <function-ref name="cancel" scoped="" ref="0x40e81a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40e81b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e82da0" loc="38:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e82da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e81010"/>
        <function-ref name="getPayload" scoped="" ref="0x40e810f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e811d0"/>
        <function-ref name="cancel" scoped="" ref="0x40e812b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e81390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40e80850" loc="42:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e80850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e80a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e80b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40e80be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e80cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e80da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40e80f28" loc="161:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40e80f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e7f110"/>
        <function-ref name="runTask" scoped="" ref="0x40e7f1f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40e7f370" loc="118:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40e7f370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e7f548"/>
        <function-ref name="runTask" scoped="" ref="0x40e7f628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40e81c40" loc="41:/opt/tinyos-2.1.0/tos/system/AMQueueImplP.nc">
      <component-ref qname="AMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e81c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e81e18"/>
        <function-ref name="source" scoped="" ref="0x40e81ef8"/>
        <function-ref name="address" scoped="" ref="0x40e80010"/>
        <function-ref name="destination" scoped="" ref="0x40e800f0"/>
        <function-ref name="setSource" scoped="" ref="0x40e801d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40e802b0"/>
        <function-ref name="type" scoped="" ref="0x40e80390"/>
        <function-ref name="setType" scoped="" ref="0x40e80470"/>
        <function-ref name="isForMe" scoped="" ref="0x40e80550"/>
        <function-ref name="setGroup" scoped="" ref="0x40e80630"/>
        <function-ref name="localGroup" scoped="" ref="0x40e80710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40e73010" loc="38:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40e73010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e731e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e732c8"/>
        <function-ref name="getPayload" scoped="" ref="0x40e733a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e73488"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e73568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e78cc8" loc="37:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e78cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e78ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40e736a8" loc="39:/opt/tinyos-2.1.0/tos/system/AMReceiverC.nc">
      <component-ref qname="OscilloscopeAppC.AMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40e736a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40e73880"/>
        <function-ref name="source" scoped="" ref="0x40e73960"/>
        <function-ref name="address" scoped="" ref="0x40e73a40"/>
        <function-ref name="destination" scoped="" ref="0x40e73b20"/>
        <function-ref name="setSource" scoped="" ref="0x40e73c00"/>
        <function-ref name="setDestination" scoped="" ref="0x40e73ce0"/>
        <function-ref name="type" scoped="" ref="0x40e73dc0"/>
        <function-ref name="setType" scoped="" ref="0x40e73ea0"/>
        <function-ref name="isForMe" scoped="" ref="0x40e72010"/>
        <function-ref name="setGroup" scoped="" ref="0x40e720f0"/>
        <function-ref name="localGroup" scoped="" ref="0x40e721d0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Boot" loc="39:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x403d2bf0" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="47:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40403d88" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40403828" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40403a40" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40403c20" loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4040aa88" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="115:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4040a728" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4040a908" loc="124:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4040a1c8" loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="102:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4040bb80" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4040ba28" loc="85:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40409898" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40409540" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40409738" loc="99:/opt/tinyos-2.1.0/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="66:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x403d52c0" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403d5168" loc="92:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x403d4020" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="111:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x403d5eb0" loc="117:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x403d1a30" loc="83:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x403d57d0" loc="109:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006/12/12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x403d7948" loc="49:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403d7948"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x403d7df8" loc="55:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404195d0" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403d7948"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404192a0" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40419470" loc="63:/opt/tinyos-2.1.0/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x403d7948"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x404075d0" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
              <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40407088" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40407268" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40407448" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
      <documentation loc="22:/opt/tinyos-2.1.0/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4041f678" loc="50:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4041fac0" loc="56:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4041e010" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4041e880" loc="72:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x4041d580" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4041da28" loc="106:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4041e438" loc="66:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4041c188" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4041c030" loc="123:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4041f250" loc="45:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4041ed00" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x4041d138" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4040ed20" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4040ed20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40414520" loc="125:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="121:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4040c2c8" loc="72:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40415460" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40415118" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40415300" loc="103:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x4040cc18" loc="87:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40414e98" loc="140:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="135:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40414968" loc="133:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4040c758" loc="81:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4040f388" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4040f230" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40415e48" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40415b00" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40415ce8" loc="118:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x4040fa20" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4040f8c8" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4040fef0" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="40:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4042f4a8" loc="51:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4043a010" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4043cdd8" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4043d5c0" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4043dbf8" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4043daa0" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4043c2d8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4043c180" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4043c830" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="27:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4044cee0" loc="33:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4044b2e8" loc="34:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4044c750" loc="31:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4044bab8" loc="36:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4044cb10" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4044b6c0" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4044c010" loc="29:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4044c3a0" loc="30:/opt/tinyos-2.1.0/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x4033f898" loc="46:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x403421c8" loc="61:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x4033fcd8" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="44:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x40348138" loc="56:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x40348650" loc="64:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="57:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
      <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x403b3418" loc="59:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="42:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.1.0/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.6 2008/06/11 00:46:27 razvanm Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x403c3d50" loc="54:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x40377798"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="38:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x403bc870" loc="44:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4052f5d0" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052f478" loc="54:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4052e010" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052fe48" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4053a010" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40539c58" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40539e38" loc="115:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40539670" loc="95:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4052ec70" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4052e930" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4052eb10" loc="83:/opt/tinyos-2.1.0/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x405383e0" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405383e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40538548" loc="24:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40538548"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40544748" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40538548"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405445f0" loc="52:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40543200" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405430a8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40538bd0" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="26:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40538a78" loc="38:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40543cc0" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40538548"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40543950" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40543b60" loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40538548"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="33:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40530f28" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40530dd0" loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40548a30" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="50:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405488d8" loc="60:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x405474e0" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40547388" loc="74:/opt/tinyos-2.1.0/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="50:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4053f230" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="153:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4053f0d8" loc="166:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40537b68" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40537a10" loc="77:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40531a10" loc="57:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40537168" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40537010" loc="67:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x405354c0" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40535158" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40535360" loc="110:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40542780" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40542418" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40542620" loc="92:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40541bc0" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="127:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40541a68" loc="136:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4053e720" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4053e3f0" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4053e5c0" loc="151:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x403f9d60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40541088" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40535f08" loc="125:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4053feb0" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="168:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4053fb50" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4053fd50" loc="176:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4053d780" loc="184:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
        <documentation loc="178:/opt/tinyos-2.1.0/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioBackoff" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <short>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.</short>
        <long>&#10; Interface to request and specify backoff periods for messages&#10; &#10; We use a call back method for setting the backoff as opposed to &#10; events that return backoff values.  &#10; &#10; This is because of fan-out issues with multiple components wanting to&#10; affect backoffs for whatever they're interested in:&#10; If you signal out an *event* to request an initial backoff and&#10; several components happen to be listening, then those components&#10; would be required to return a backoff value.  We don't want that&#10; behavior.&#10; With this strategy, components can listen for the requests and then&#10; decide if they want to affect the behavior.  If the component wants to&#10; affect the behavior, it calls back using the setXYZBackoff(..) command.&#10; If several components call back, then the last component to get its &#10; word in has the final say. &#10;&#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="requestCca" ref="0x40559010" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on whether or not to use CCA on the outbound packet.</short>
          <long>&#10; Request for input on whether or not to use CCA on the outbound packet.&#10; Replies should come in the form of setCca(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055ae58" loc="95:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestInitialBackoff" ref="0x4055be78" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; </short>
          <long>  &#10; Request for input on the initial backoff&#10; Reply using setInitialBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055bd20" loc="81:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCongestionBackoff" ref="0x4055b010" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestCongestionBackoff event&#10; </short>
          <long>&#10; Must be called within a requestCongestionBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x4055dde0" loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInitialBackoff" ref="0x4055d858" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Must be called within a requestInitialBackoff event&#10; </short>
          <long>&#10; Must be called within a requestInitialBackoff event&#10; @param backoffTime the amount of time in some unspecified units to backoff&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="backoffTime" ref="0x4055d700" loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCca" ref="0x4055b608" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Enable CCA for the outbound packet.</short>
          <long>&#10; Enable CCA for the outbound packet.  Must be called within a requestCca&#10; event&#10; @param ccaOn TRUE to enable CCA, which is the default.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ccaOn" ref="0x4055b4b0" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="requestCongestionBackoff" ref="0x4055a788" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
          <short>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; </short>
          <long>&#10; Request for input on the congestion backoff&#10; Reply using setCongestionBackoff(..)&#10; @param msg pointer to the message being sent&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioBackoff"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055a630" loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/RadioBackoff.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x405678d8" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40567560" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40567778" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Packet" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author David Moss&#10; @author Chad Metcalf&#10;</long>
      </documentation>
      <function command="" provided="0" name="setPower" ref="0x40555e80" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Set transmission power for a given packet.</short>
          <long>&#10; Set transmission power for a given packet. Valid ranges are&#10; between 0 and 31.&#10;&#10; @param p_msg the message.&#10; @param power transmission power.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40555b28" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="power" ref="0x40555d20" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRssi" ref="0x40552588" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get rssi value for a given packet.</short>
          <long>&#10; Get rssi value for a given packet. For received packets, it is&#10; the received signal strength when receiving that packet. For sent&#10; packets, it is the received signal strength of the ack if an ack&#10; was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="signed char" size="I:1" alignment="I:1">
            <typename><typedef-ref name="int8_t" ref="0x4020c1d0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40552430" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPower" ref="0x40555660" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get transmission power setting for current packet.</short>
          <long>&#10; Get transmission power setting for current packet.&#10;&#10; @param the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40555508" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLqi" ref="0x40552c50" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
          <short>&#10; Get lqi value for a given packet.</short>
          <long>&#10; Get lqi value for a given packet. For received packets, it is the&#10; link quality indicator value when receiving that packet. For sent&#10; packets, it is the link quality indicator value of the ack if an&#10; ack was received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x40552af8" loc="72:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getLocalSleepInterval" ref="0x40565c08" loc="58:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxDutyCycle" ref="0x40562240" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's duty cycle configured in this message&#10;     in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405620e8" loc="114:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sleepIntervalToDutyCycle" ref="0x4055f4f0" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="124:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; </short>
          <long>&#10; Convert a sleep interval, in units of [ms], to a duty cycle&#10; in units of [percentage*100]&#10; @param sleepInterval The sleep interval in units of [ms]&#10; @return The duty cycle in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepInterval" ref="0x4055f398" loc="130:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalDutyCycle" ref="0x40564898" loc="81:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return this node's radio duty cycle rate, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxSleepInterval" ref="0x40563170" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx sleep interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param sleepInterval The receiving node's sleep interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40564d58" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="sleepIntervalMs" ref="0x40563010" loc="90:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalDutyCycle" ref="0x40564240" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].</short>
          <long>&#10; Set this node's radio duty cycle rate, in units of [percentage*100].&#10; For example, to get a 0.05% duty cycle,&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(5);&#10; &#60;/code>&#10;&#10; For a 100% duty cycle (always on),&#10; &#60;code>&#10;   call LowPowerListening.setDutyCycle(10000);&#10; &#60;/code>&#10;&#10; This is the equivalent of setting the local sleep interval explicitly.&#10; &#10; @param dutyCycle The duty cycle percentage, in units of [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x405640e8" loc="76:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRxDutyCycle" ref="0x40561758" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified Rx duty cycle rate.&#10; Duty cycle is in units of [percentage*100], i.e. 0.25% duty cycle = 25.&#10; &#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param dutyCycle The duty cycle of the receiving mote, in units of &#10;     [percentage*100]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405613c8" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dutyCycle" ref="0x405615f8" loc="107:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dutyCycleToSleepInterval" ref="0x40562c40" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="116:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; </short>
          <long>&#10; Convert a duty cycle, in units of [percentage*100], to&#10; the sleep interval of the mote in milliseconds&#10; @param dutyCycle The duty cycle in units of [percentage*100]&#10; @return The equivalent sleep interval, in units of [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dutyCycle" ref="0x40562ae8" loc="122:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRxSleepInterval" ref="0x40563c00" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's sleep interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40563aa8" loc="96:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalSleepInterval" ref="0x405655d8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio sleep interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio sleep interval, in milliseconds.&#10; Once every interval, the node will sleep and perform an Rx check &#10; on the radio.  Setting the sleep interval to 0 will keep the radio&#10; always on.&#10;&#10; This is the equivalent of setting the local duty cycle rate.&#10;&#10; @param sleepIntervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sleepIntervalMs" ref="0x40565480" loc="53:/opt/tinyos-2.1.0/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40569878" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40569720" loc="65:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40551c70" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405518d8" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40551b10" loc="46:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x4056af08" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056adb0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x4056a890" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4056a4f8" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x4056a730" loc="53:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x405681c0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40568068" loc="71:/opt/tinyos-2.1.0/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x4055e350" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4055e1f8" loc="47:/opt/tinyos-2.1.0/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="44:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4057a428" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057a0e8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4057a2c8" loc="64:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40577010" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="104:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40576bd0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40576db0" loc="114:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40576670" loc="101:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40578088" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="66:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4057af10" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40578d20" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405789c8" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40578bc0" loc="89:/opt/tinyos-2.1.0/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Config" loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio configurations. All get() and set()&#10; commands are single-phase. After setting some values, a call to&#10; sync() is required for the changes to propagate to the cc2420&#10; hardware chip. This interface allows setting multiple parameters&#10; before calling sync().&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2008/06/16 15:33:32 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="setAutoAck" ref="0x4058a248" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="93:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync must be called for acknowledgement changes to take effect&#10; </short>
          <long>&#10; Sync must be called for acknowledgement changes to take effect&#10; @param enableAutoAck TRUE to enable auto acknowledgements&#10; @param hwAutoAck TRUE to default to hardware auto acks, FALSE to&#10;     default to software auto acknowledgements&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAutoAck" ref="0x4057bea0" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
          <variable name="hwAutoAck" ref="0x4058a0e8" loc="99:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAddressRecognitionEnabled" ref="0x4057b508" loc="86:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddressRecognition" ref="0x4057cec0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @param enableAddressRecognition TRUE to turn address recognition on&#10; @param useHwAddressRecognition TRUE to perform address recognition first&#10;     in hardware. This doesn't affect software address recognition. The&#10;     driver must sync with the chip after changing this value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enableAddressRecognition" ref="0x4057cad0" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
          <variable name="useHwAddressRecognition" ref="0x4057cd60" loc="80:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="syncDone" ref="0x4057f700" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4057f5a8" loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAddressRecognitionDefault" ref="0x4057ba20" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if address recognition is performed first in hardware.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x4057eb98" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4057ea40" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4057e168" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4057e010" loc="59:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAutoAckEnabled" ref="0x4058ad30" loc="110:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="107:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if auto acks are enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPanAddr" ref="0x4057c5c0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x4057c468" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isHwAutoAckDefault" ref="0x4058a7e8" loc="105:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="101:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if hardware auto acks are the default, FALSE if software&#10;     acks are the default&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x4057e5c0" loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the short address of the radio.</short>
          <long>&#10; Change the short address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sync" ref="0x4057f0f8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Sync configuration changes with the radio hardware.</short>
          <long>&#10; Sync configuration changes with the radio hardware. This only&#10; applies to set commands below.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4057fb10" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the channel of the radio, between 11 and 26&#10;</short>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPanAddr" ref="0x4057c010" loc="70:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Config.nc">
          <short>&#10; Change the PAN address of the radio.</short>
          <long>&#10; Change the PAN address of the radio.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Config"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40589d38" loc="50:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x405865c8" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x405861c8" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40589848" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x405894e0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x403f8010"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x405896e8" loc="45:/opt/tinyos-2.1.0/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x403f8270"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420PacketBody" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <short>&#10; Internal interface for the CC2420 to get portions of a packet.</short>
        <long>&#10; Internal interface for the CC2420 to get portions of a packet.&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="getHeader" ref="0x405818d0" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_header_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_header_t" ref="0x403db0f8"/>
              <typename><typedef-ref name="cc2420_header_t" ref="0x403da128"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40581738" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMetadata" ref="0x40580380" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
          <short>&#10; </short>
          <long>&#10; @return pointer to the cc2420_metadata_t of the given message&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420PacketBody"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:12" alignment="I:1"><nx_struct-ref name="cc2420_metadata_t" ref="0x403da7e8"/>
              <typename><typedef-ref name="cc2420_metadata_t" ref="0x403d9780"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x405801e8" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420PacketBody.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Transmit" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <short>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction for the transmit path implementaiton of the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x405d8710" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send a message&#10;&#10; </short>
          <long>&#10; Send a message&#10;&#10; @param p_msg message to send.&#10; @param useCca TRUE if this Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405d83c8" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="useCca" ref="0x405d85b0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x405d7250" loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Cancel sending of the message.</short>
          <long>&#10; Cancel sending of the message.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="modify" ref="0x405d6960" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Modify the contents of a packet.</short>
          <long>&#10; Modify the contents of a packet. This command can only be used&#10; when an SFD capture event for the sending packet is signalled.&#10;&#10; @param offset in the message to start modifying.&#10; @param buf to data to write&#10; @param len of bytes to write&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x405d6170" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="buf" ref="0x405d6618" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x405d67f8" loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x405d7c58" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Signal that a message has been sent&#10;&#10; </short>
          <long>&#10; Signal that a message has been sent&#10;&#10; @param p_msg message to send.&#10; @param error notifaction of how the operation went.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="p_msg" ref="0x405d7900" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x405d7af8" loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resend" ref="0x405d8d60" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
          <short>&#10; Send the previous message again&#10; </short>
          <long>&#10; Send the previous message again&#10; @param useCca TRUE if this re-Tx should use clear channel assessments&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Transmit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="useCca" ref="0x405d8c08" loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Transmit.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="29:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x405d4698" loc="41:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x405d41f0" loc="35:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
        <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x405d2df8" loc="74:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405da2d8" loc="84:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Power" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <short>&#10; An HAL abstraction of the ChipCon CC2420 radio.</short>
        <long>&#10; An HAL abstraction of the ChipCon CC2420 radio. This abstraction&#10; deals specifically with radio power operations (e.g. voltage&#10; regulator, oscillator, etc). However, it does not include&#10; transmission power, see the CC2420Config interface.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2007/07/04 00:37:14 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="startOscillator" ref="0x405cd740" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the oscillator.</short>
          <long>&#10; Start the oscillator. On SUCCESS, &#60;code>startOscillator&#60;/code>&#10; will be signalled when the oscillator has been started.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rfOff" ref="0x405cca10" loc="97:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Disable RX.</short>
          <long>&#10; Disable RX.&#10;&#10; @return SUCCESS if receive mode has been disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rxOn" ref="0x405cc5a8" loc="90:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="85:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Enable RX.</short>
          <long>&#10; Enable RX.&#10;&#10; @return SUCCESS if receive mode has been enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startVReg" ref="0x405c38c0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Start the voltage regulator on the CC2420.</short>
          <long>&#10; Start the voltage regulator on the CC2420. On SUCCESS,&#10; &#60;code>startVReg()&#60;/code> will be signalled when the voltage&#10; regulator is fully on.&#10;&#10; @return SUCCESS if the request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopVReg" ref="0x405cd268" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the voltage regulator immediately.</short>
          <long>&#10; Stop the voltage regulator immediately.&#10;&#10; @return SUCCESS always&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startOscillatorDone" ref="0x405cdc58" loc="76:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the oscillator has been started.</short>
          <long>&#10; Signals that the oscillator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stopOscillator" ref="0x405cc138" loc="83:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="78:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Stop the oscillator.</short>
          <long>&#10; Stop the oscillator.&#10;&#10; @return SUCCESS if the oscillator was stopped, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="startVRegDone" ref="0x405c3dc8" loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Power.nc">
          <short>&#10; Signals that the voltage regulator has been started.</short>
          <long>&#10; Signals that the voltage regulator has been started.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Power"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="67:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
      <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2007/04/15 20:05:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x405cf0f8" loc="110:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x405d17a8" loc="87:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x405d11a8" loc="78:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x405d1c58" loc="92:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="89:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x405cf7f0" loc="118:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
        <documentation loc="112:/opt/tinyos-2.1.0/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="State" loc="38:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <short>&#10; State machine interface&#10; </short>
        <long>&#10; State machine interface&#10; @author David Moss - dmm@rincon.com&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x405df5d0" loc="71:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Get the current state&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toIdle" ref="0x405e0728" loc="56:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Set the current state back to S_IDLE&#10;</short>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isState" ref="0x405df168" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in the given state&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="myState" ref="0x405df010" loc="66:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isIdle" ref="0x405e0b40" loc="61:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the state machine is in S_IDLE&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestState" ref="0x405d5be0" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.</short>
          <long>&#10; This will allow a state change so long as the current&#10; state is S_IDLE.&#10; @return SUCCESS if the state is change, FAIL if it isn't&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405d5a88" loc="45:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="forceState" ref="0x405e02a0" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
          <short>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.</short>
          <long>&#10; Force the state machine to go into a certain state,&#10; regardless of the current state it's in.&#10;</long>
        </documentation>
        <interfacedef-ref qname="State"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="reqState" ref="0x405e0148" loc="51:/opt/tinyos-2.1.0/tos/interfaces/State.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Register" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <short>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio.</short>
        <long>&#10; Interface representing one of the Read/Write registers on the&#10; CC2420 radio. The return values (when appropriate) refer to the&#10; status byte returned on the CC2420 SO pin. A full list of RW&#10; registers can be found on page 61 of the CC2420 datasheet (rev&#10; 1.2). Page 25 of the same document describes the protocol for&#10; interacting with these registers over the CC2420 SPI bus.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x406169b0" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Read a 16-bit data word from the register.</short>
          <long>&#10; Read a 16-bit data word from the register.&#10;&#10; @param data pointer to place the register value.&#10; @return status byte from the read.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40616858" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
                <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40621088" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
          <short>&#10; Write a 16-bit data word to the register.</short>
          <long>&#10; Write a 16-bit data word to the register.&#10; &#10; @param data value to write to register.&#10; @return status byte from the write.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Register"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40616ef0" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Register.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061d038" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061d038"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4061d1a0" loc="45:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4061b548" loc="98:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4061c138" loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4061ce00" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4061cab0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          </variable>
          <variable name="dt" ref="0x4061cca0" loc="92:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4061c5a8" loc="77:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4061b9d8" loc="105:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="100:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4061d7d0" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4061d678" loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061d1a0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4061dcb0" loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Strobe" loc="36:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <short>&#10; Interface representing one of the CC2420 command strobe registers.</short>
        <long>&#10; Interface representing one of the CC2420 command strobe registers.&#10; Writing to one of these registers enacts a command on the CC2420,&#10; such as power-up, transmission, or clear a FIFO.&#10;&#10; @author Philip Levis&#10; @version $Revision: 1.2 $ $Date: 2008/06/11 00:46:23 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="strobe" ref="0x40622ec0" loc="45:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Strobe.nc">
          <short>&#10; Send a command strobe to the register.</short>
          <long>&#10; Send a command strobe to the register. The return value is the&#10; CC2420 status register. Table 5 on page 27 of the CC2420&#10; datasheet (v1.2) describes the contents of this register.&#10; &#10; @return Status byte from the CC2420.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Strobe"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Ram" loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <short>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing theRAM of a ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="read" ref="0x40625a40" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Read data from a RAM.</short>
          <long>&#10; Read data from a RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40625200" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406256d8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406258d8" loc="52:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40623850" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
          <short>&#10; Write data to RAM.</short>
          <long>&#10; Write data to RAM. This operation is sychronous.&#10;&#10; @param offset within the field.&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Ram"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="offset" ref="0x40623010" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x406234e8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x406236e8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Ram.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="32:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.4 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x40627b98" loc="57:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40627738" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40627328" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x40618d88" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl16" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <short>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 16-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406942d8" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ab8e0"/>
            <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403abb08"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCapture" ref="0x40696ca0" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039dc30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4039de58"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40696b48" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039dc30"/>
              <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4039de58"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406957e8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a4398"/>
            <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403a45c0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCompare" ref="0x406845c0" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
          <short>Timer control registers: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40399aa8"/>
            <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40399cd0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x40695df8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a4398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403a45c0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x40695ca0" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a4398"/>
              <typename><typedef-ref name="Atm128_ETIMSK_t" ref="0x403a45c0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406948e8" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ab8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403abb08"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40694790" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403ab8e0"/>
              <typename><typedef-ref name="Atm128_ETIFR_t" ref="0x403abb08"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlClock" ref="0x40696010" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a32c0"/>
            <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a34e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCtrlCapture" ref="0x40684ae0" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x4039dc30"/>
            <typename><typedef-ref name="Atm128TimerCtrlCapture_t" ref="0x4039de58"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlCompare" ref="0x40696658" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40399aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40399cd0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x40696500" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40399aa8"/>
              <typename><typedef-ref name="Atm128TimerCtrlCompare_t" ref="0x40399cd0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setCtrlClock" ref="0x40695328" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl16"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a32c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a34e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406951d0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl16.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x403a32c0"/>
              <typename><typedef-ref name="Atm128TimerCtrlClock_t" ref="0x403a34e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Capture" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <short>&#10; HPL Interface to Atmega128 capture capabilities.</short>
        <long>&#10; HPL Interface to Atmega128 capture capabilities.&#10; @param size_type Integer type of capture register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x40686af8" loc="31:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <interfacedef-ref qname="HplAtm128Capture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setEdge" ref="0x4068f650" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Sets the capture edge.</short>
          <long> &#10; Sets the capture edge.&#10; @param up   TRUE = detect rising edge, FALSE = detect falling edge&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="up" ref="0x4068f4f8" loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40690c30" loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="63:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Did a capture interrupt occur?&#10; </short>
          <long> &#10; Did a capture interrupt occur?&#10; @return TRUE if capture triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40692010" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Get the time to be captured.</short>
          <long> &#10; Get the time to be captured.&#10; @return  the capture time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x40692b60" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Signalled on capture interrupt.</short>
          <long> &#10; Signalled on capture interrupt.&#10; @param t     the time of the capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40692a08" loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40690010" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Clear the capture interrupt flag.</short>
          <long> Clear the capture interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4068f0c8" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Is capture interrupt on? &#10; </short>
          <long> &#10; Is capture interrupt on? &#10; @return TRUE if capture enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40692588" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> &#10; Set the time to be captured.</short>
          <long> &#10; Set the time to be captured.&#10; @param t     the time of the next capture event&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40692430" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40686af8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40690418" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Enable the capture interrupt.</short>
          <long> Enable the capture interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40690810" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Capture.nc">
          <short> Turn off capture interrupts.</short>
          <long> Turn off capture interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Capture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x4068eb98" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068eb98"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x4069ead8" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4069fa90" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4069f0c8" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068eb98"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4069fe98" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4069d010" loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4069f650" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068eb98"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x4069f4f8" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4068eb98"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4069e2b8" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4069e6b0" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x40679610" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40679610"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x40689db0" loc="89:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40689520" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40679b00" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40679610"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x40687350" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406871f8" loc="95:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x406877e0" loc="101:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4068a8e0" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4068a4c0" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40689988" loc="84:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4068a090" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40679610"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x40679f20" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x40679610"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4068ace8" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406890f8" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega128 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getControl" ref="0x406a8368" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40393c78"/>
            <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40393ea0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptFlag" ref="0x406a7930" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40395cd0"/>
            <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40395ef8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x406a8e40" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40397590"/>
            <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403977b8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x406a7480" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40397590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403977b8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x406a7328" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40397590"/>
              <typename><typedef-ref name="Atm128_TIMSK_t" ref="0x403977b8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x406a6010" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40395cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40395ef8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x406a7de0" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40395cd0"/>
              <typename><typedef-ref name="Atm128_TIFR_t" ref="0x40395ef8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControl" ref="0x406a8988" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40393c78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40393ea0"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x406a8830" loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerCtrl8.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40393c78"/>
              <typename><typedef-ref name="Atm128TimerControl_t" ref="0x40393ea0"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="15:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="controlBusy" ref="0x406a2b88" loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR0 is busy (should not be updated if true)&#10; @return TRUE if TCCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareBusy" ref="0x406a1070" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR0 is busy (should not be updated if true)&#10; @return TRUE if OCR0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer0Asynchronous" ref="0x406a2770" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 0 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x406a1530" loc="50:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT0) is busy (should not be updated if true)&#10; @return TRUE if TCNT0 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x406a5c58" loc="21:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="17:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer0 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40391e08"/>
            <typename><typedef-ref name="Atm128Assr_t" ref="0x40390048"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x406a2290" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
        <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer0 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer0 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40391e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40390048"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x406a2138" loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x40391e08"/>
              <typename><typedef-ref name="Atm128Assr_t" ref="0x40390048"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40770db8" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40770db8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40770f20" loc="46:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40770f20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4076a420" loc="53:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40770f20"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4076ae48" loc="65:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
          <long>&#10; Cancel a pending overflow interrupt.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4076a948" loc="60:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="55:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40769288" loc="71:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="35:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x407d2e20" loc="43:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407cd7e8" loc="55:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="52:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x407cd3a0" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x407cd248" loc="50:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x407d2918" loc="42:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Interrupt" loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; </short>
        <long>&#10; Interface to an Atmega128 external interrupt pin&#10;&#10; @author Joe Polastre&#10; @author Martin Turon&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407d4d20" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Clears the ATmega128 Interrupt Pending Flag for a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407e9c80" loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short>&#10; Signalled when an interrupt occurs on a port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407d4928" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Disables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="edge" ref="0x407e97b8" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Sets whether the edge should be high to low or low to high.</short>
          <long> &#10; Sets whether the edge should be high to low or low to high.&#10; @param TRUE if the interrupt should be triggered on a low to high&#10;        edge transition, false for interrupts on a high to low transition&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="low_to_high" ref="0x407e9660" loc="59:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407d4520" loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Enables ATmega128 hardware interrupt on a particular port&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407e91a8" loc="52:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
        <documentation loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128Interrupt.nc">
          <short> &#10; Gets the current value of the input voltage of a port&#10;&#10; </short>
          <long> &#10; Gets the current value of the input voltage of a port&#10;&#10; @return TRUE if the pin is set high, FALSE if it is set low&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Interrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128InterruptSig" loc="36:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
      <documentation loc="28:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <short>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).</short>
        <long>&#10; Interface to an Atmega128 external interrupt pin that exposes just the&#10; interrupt vector routine for easy linking to generic components (see&#10; HplAtm128Interrupt for the full interface).&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @see HplAtm128Interrupt&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407f03d8" loc="41:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
        <documentation loc="38:/opt/tinyos-2.1.0/tos/chips/atm128/pins/HplAtm128InterruptSig.nc">
          <short>&#10; Signalled when an interrupt occurs on a pin&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128InterruptSig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Fifo" loc="40:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <short>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.</short>
        <long>&#10; HAL abstraction for accessing the FIFO registers of a ChipCon&#10; CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.2 $ $Date: 2008/06/03 04:43:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="continueRead" ref="0x40839170" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Continue reading from the FIFO without having to send the address&#10; byte again.</short>
          <long>&#10; Continue reading from the FIFO without having to send the address&#10; byte again. The &#60;code>readDone&#60;/code> event will be signalled&#10; upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return SUCCESS always.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4083adc0" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40839010" loc="62:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40850880" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="84:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a write operation.</short>
          <long>&#10; Signals the completion of a write operation.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes written.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40850320" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40850520" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40850718" loc="91:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40838ad8" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start writing the FIFO.</short>
          <long>&#10; Start writing the FIFO. The &#60;code>writeDone&#60;/code> event will be&#10; signalled upon completion.&#10;&#10; @param data a pointer to the send buffer.&#10; @param length number of bytes to write.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40838778" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40838978" loc="82:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="beginRead" ref="0x4083a530" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Start reading from the FIFO.</short>
          <long>&#10; Start reading from the FIFO. The &#60;code>readDone&#60;/code> event will&#10; be signalled upon completion.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes to read.&#10; @return status byte returned when sending the last address byte&#10; of the SPI transaction.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="cc2420_status_t" ref="0x403d4d08"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4083a1d0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x4083a3d0" loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40839f18" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
          <short>&#10; Signals the completion of a read operation.</short>
          <long>&#10; Signals the completion of a read operation.&#10;&#10; @param data a pointer to the receive buffer.&#10; @param length number of bytes read.&#10; @param error notification of how the operation went&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Fifo"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408399b8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40839bb8" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40839db0" loc="71:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Fifo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ChipSpiResource" loc="17:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
      <documentation loc="2:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <short>&#10; Interface for the SPI resource for an entire chip.</short>
        <long>&#10; Interface for the SPI resource for an entire chip.  The chip accesses&#10; the platform SPI resource one time, but can have multiple clients &#10; using the SPI bus on top.  When all of the clients are released, the&#10; chip will normally try to release itself from the platforms SPI bus.&#10; In some cases, this isn't desirable - so even though upper components&#10; aren't actively using the SPI bus, they can tell the chip to hold onto&#10; it so they can have immediate access when they need. &#10;&#10; Any component that aborts a release MUST attempt the release at a later&#10; time if they don't acquire and release the SPI bus naturally after the&#10; abort.&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="releasing" ref="0x408329f8" loc="24:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="19:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; The SPI bus is about to be automatically released.</short>
          <long>&#10; The SPI bus is about to be automatically released.  Modules that aren't&#10; using the SPI bus but still want the SPI bus to stick around must call&#10; abortRelease() within the event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="abortRelease" ref="0x40832ee8" loc="31:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Abort the release of the SPI bus.</short>
          <long>&#10; Abort the release of the SPI bus.  This must be called only with the&#10; releasing() event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="attemptRelease" ref="0x4082e3e8" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
        <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ChipSpiResource.nc">
          <short>&#10; Release the SPI bus if there are no objections&#10; </short>
          <long>&#10; Release the SPI bus if there are no objections&#10; @return SUCCESS if the SPI bus is released from the chip.&#10;      FAIL if the SPI bus is already in use.&#10;      EBUSY if some component aborted the release.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ChipSpiResource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="43:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
      <documentation loc="24:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.7 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4085a458" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4085bec0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4085a100" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4085a2f0" loc="59:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40858aa8" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
        <documentation loc="61:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x40858328" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x40858540" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40858730" loc="71:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40858938" loc="72:/opt/tinyos-2.1.0/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="27:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x4085b090" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
        <documentation loc="29:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40844f20" loc="34:/opt/tinyos-2.1.0/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x408bb8e8" loc="69:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x408b4070" loc="109:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x408b7158" loc="100:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x408b4658" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x408b4500" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x408bb498" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x408b6168" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x408b6010" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x408b8370" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x408b8218" loc="96:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x408ba1a8" loc="80:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x408b2738" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x408b25e0" loc="125:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x408b87c8" loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x408b3010" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x408b4e88" loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x408b3898" loc="120:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x408b6bf8" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x408b6aa0" loc="108:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x408b21a8" loc="124:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x408b76e8" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x408b7590" loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x408ba740" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408ba5e8" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x408b8d18" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x408b8bc0" loc="99:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x408b6618" loc="106:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x408b4a80" loc="112:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x408b3420" loc="115:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x408b3cf0" loc="122:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x408b7b20" loc="103:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x408bbd10" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="71:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x408bad08" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408babb0" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="72:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="59:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x408ca4e8" loc="80:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="73:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x408ca9e8" loc="88:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="82:/opt/tinyos-2.1.0/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="65:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x408f0038" loc="74:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408f0520" loc="84:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="76:/opt/tinyos-2.1.0/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="36:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.4 $&#10; @date $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4091cd28" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40919328" loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="44:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40917018" loc="55:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x4091bb40" loc="49:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="35:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2006/12/12 18:23:15 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4092f940" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a cleint id&#10;&#10; </short>
          <long>&#10; Enqueue a cleint id&#10;&#10; @param cleintId - the cleint id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4091a2f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4092f7e8" loc="69:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4091a2f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x40930590" loc="43:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="37:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40930c50" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given cleint id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4091a2f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40930af8" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4091a2f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x4092f258" loc="60:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
        <documentation loc="54:/opt/tinyos-2.1.0/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the cleint id of the next resource in the queue.</short>
          <long>&#10; Retreive the cleint id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The cleint id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4091a2f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveIndicator" loc="37:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <short>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; </short>
        <long>&#10; Interface to obtain energy, byte, and packet receive check readings&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="isReceiving" ref="0x409c01d8" loc="43:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
        <documentation loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/ReceiveIndicator.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the indicator is showing we are actively receiving at this&#10; level&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveIndicator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CC2420Receive" loc="42:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <short>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.</short>
        <long>&#10; Low-level abstraction of the receive path implementation for the&#10; ChipCon CC2420 radio.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2008/06/17 07:28:24 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x409faa28" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="57:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Signals that a message has been received.</short>
          <long>&#10; Signals that a message has been received.&#10;&#10; @param type of the message received.&#10; @param message pointer to message received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="type" ref="0x409fa4a8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="message" ref="0x409fa8c8" loc="63:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd_dropped" ref="0x409fa010" loc="55:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that the packet has been dropped by the radio&#10; (e.g.</short>
          <long>&#10; Notification that the packet has been dropped by the radio&#10; (e.g. due to address rejection).&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sfd" ref="0x409ddb48" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
          <short>&#10; Notification that an SFD capture has occured.</short>
          <long>&#10; Notification that an SFD capture has occured.&#10;&#10; @param time at which the capture happened.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CC2420Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x409dd9f0" loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/CC2420Receive.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeSyncOffset" loc="32:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
      <function command="" provided="0" name="get" ref="0x409e5a70" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns the offset of where the timesync timestamp is sotred in a&#10; CC2420 packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e5918" loc="47:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x409e5168" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to examine.&#10;&#10; Returns TRUE if the current message should be timestamped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e5010" loc="39:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x409e4c58" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10; Cancels any pending requests to timestamp the message in MAC.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e4b00" loc="61:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409e4370" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' message to modify.&#10;&#10;  Sets the current message to be timestamped in the MAC layer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeSyncOffset"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409e4218" loc="54:/opt/tinyos-2.1.0/tos/chips/cc2420/interfaces/PacketTimeSyncOffset.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:52" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404045c0"/>
                <typename><typedef-ref name="message_t" ref="0x404033a0"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
      <documentation loc="25:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40a96b90" loc="42:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a96b90"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40ab7090" loc="50:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x4020d400"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
      <documentation loc="23:/opt/tinyos-2.1.0/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.11 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40b8deb8" loc="42:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8deb8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40b88538" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
        <documentation loc="44:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8deb8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b883e0" loc="53:/opt/tinyos-2.1.0/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40b8deb8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Mag" loc="51:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
      <documentation loc="47:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo&#10;</long>
      </documentation>
      <function command="" provided="0" name="gainAdjustY" ref="0x40c04c60" loc="60:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40c04b08" loc="60:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustYDone" ref="0x40c017f8" loc="70:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c016a0" loc="70:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="gainAdjustXDone" ref="0x40c01240" loc="65:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40c010e8" loc="65:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="gainAdjustX" ref="0x40c046d8" loc="55:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
        <interfacedef-ref qname="Mag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40c04580" loc="55:/opt/tinyos-2.1.0/tos/sensorboards/mts300/Mag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40c1b090" loc="32:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c1eb70" loc="25:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40c1b580" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MicaBusAdc" loc="16:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusAdc.nc">
      <documentation loc="11:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusAdc.nc">
        <short>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus.</short>
        <long>&#10; A simplistic beginning to providing a standard interface to the mica-family&#10; 51-pin bus. Just provides the PW0-PW7 digital I/O pins.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getChannel" ref="0x40c3b4b0" loc="20:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusAdc.nc">
        <documentation loc="17:/opt/tinyos-2.1.0/tos/platforms/mica/MicaBusAdc.nc">
          <short>&#10; Return the A/D channel number to use for one of the ADCn pins.</short>
          <long>&#10; Return the A/D channel number to use for one of the ADCn pins.&#10;</long>
        </documentation>
        <interfacedef-ref qname="MicaBusAdc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="48:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
      <documentation loc="32:/opt/tinyos-2.1.0/tos/types/I2C.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <typedef name="addr_size" ref="0x40c141e8" loc="48:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40c141e8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40c14e90" loc="65:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
        <documentation loc="49:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40c229c8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40c14710" loc="65:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40c229c8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40c14910" loc="65:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40c14b10" loc="65:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40c14d20" loc="65:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40c354b0" loc="101:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
        <documentation loc="93:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c36ce8" loc="101:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40c36ee8" loc="101:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40c35130" loc="101:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40c35340" loc="101:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40c371d8" loc="81:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40c229c8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40c38a28" loc="81:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40c229c8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40c38c28" loc="81:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40c38e28" loc="81:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40c37068" loc="81:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40c363b0" loc="91:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40c37c20" loc="91:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40c37e20" loc="91:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40c36030" loc="91:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40c36240" loc="91:/opt/tinyos-2.1.0/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007/02/04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40c71568" loc="56:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40c6f010" loc="73:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x40c71038" loc="46:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40c71a78" loc="65:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40c6f5e8" loc="81:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.1.0/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="45:/opt/tinyos-2.1.0/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="31:/opt/tinyos-2.1.0/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x40cbe4d8" loc="52:/opt/tinyos-2.1.0/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="46:/opt/tinyos-2.1.0/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40caf0f8" loc="46:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="30:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.4 2006/12/12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40ce51a8" loc="47:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40ce5588" loc="48:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40ce5eb8" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ce5d60" loc="53:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40ce6d80" loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40ce2550" loc="58:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40cdf800" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40ce2ad0" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40ce2978" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40cde5a8" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40ce65f8" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40ce64a0" loc="42:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40ce2168" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40ce2010" loc="57:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40ce1010" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40ce32d8" loc="54:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40ce1918" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40ce5990" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40cdf400" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40cdf2a8" loc="76:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40cde1c0" loc="81:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40cde068" loc="81:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40ce14b0" loc="65:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40ce6988" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40ce37e0" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ce3688" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40ce1ed8" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40ce1d80" loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40cdfc48" loc="78:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40ce3bc8" loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008/06/16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40dbdb10" loc="52:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40dbdb10"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40dba010" loc="58:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40dba7e0" loc="66:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40dbdb10"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40dba4b0" loc="66:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x40344bd0"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40dba680" loc="66:/opt/tinyos-2.1.0/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40dbdb10"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="68:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40daf3a0" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40db4b30" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40db4d58" loc="91:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40daf010" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40daf230" loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40dae708" loc="110:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="94:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40dafcc0" loc="110:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40dafeb0" loc="110:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x40dae0d0" loc="110:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40dae328" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x40dae590" loc="111:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="43:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="33:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x40db25e8" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40db5dd8" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40db2030" loc="61:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40db2258" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40db2478" loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40db16f8" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40db1170" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="64:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40db2d48" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x40db1010" loc="72:/opt/tinyos-2.1.0/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="39:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
      <documentation loc="27:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40dd3418" loc="105:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="102:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdmux" ref="0x40daaa88" loc="44:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="40:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Read the ADMUX (ADC selection) register&#10; @return Current ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40385b08"/>
            <typename><typedef-ref name="Atm128Admux_t" ref="0x40385d90"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40dd28b8" loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="126:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40dd2760" loc="131:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x4020c708"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40dd38d8" loc="113:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40da65b8" loc="73:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="70:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdmux" ref="0x40da7168" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="45:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADMUX (ADC selection) register&#10; </short>
          <long>&#10; Set the ADMUX (ADC selection) register&#10; @param admux New ADMUX value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40385b08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40385d90"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="admux" ref="0x40da7010" loc="49:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40385b08"/>
              <typename><typedef-ref name="Atm128Admux_t" ref="0x40385d90"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x40da6e08" loc="82:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="79:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40dd2210" loc="124:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="119:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40dd2d60" loc="141:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40da69b8" loc="77:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40dd4700" loc="90:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="87:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40dd42d0" loc="86:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="83:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x40dd4b38" loc="97:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="92:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40dd3d48" loc="118:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4033bb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40da7c80" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdf0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038a1e8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x40da7b28" loc="60:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdf0"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038a1e8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40dd3018" loc="101:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="98:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40da7650" loc="55:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="51:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x4038bdf0"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x4038a1e8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x40da6158" loc="66:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40dd1648" loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
        <documentation loc="143:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40dd14f0" loc="147:/opt/tinyos-2.1.0/tos/chips/atm128/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x4020cd68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
